CREATE SERVICE "ACM_CorrectiveMaintenance" TYPE 'SOAP' AS call _ACM.CorrectiveMaintenance(:NodeId,:IsLimited,:OrderBy);
CREATE SERVICE "ACM_EquipmentList" TYPE 'SOAP' AS call "_ACM"."EquipmentList"(:RowId,:EquipmentRowIds,:RowType);
CREATE SERVICE "ACM_PartRemove" TYPE 'SOAP' AS call "_ACM"."PartRemove"(:PartRowId);
CREATE SERVICE "ACM_PartsAdd" TYPE 'SOAP' AS call "_ACM"."PartsAdd"(:Equipments,:Parts,:QuantityRequired);
CREATE SERVICE "ACM_PartsAddManually" TYPE 'SOAP' AS call "_ACM"."PartsAddManually"(:CageCode,:EquipmentRowIdStr,:RowId,:NavyStockNumber,:PartDescription,
:PartNumber,:QuantityRequired,:SupplierName,:UnitCost,:UnitOfMeasure);
CREATE SERVICE "ACM_PartsEditDialog" TYPE 'SOAP' AS call "_ACM"."PartsEditDialog"(:PartRowId);
CREATE SERVICE "ACM_PartsEditSave" TYPE 'SOAP' AS call "_ACM"."PartsEditSave"(:PartRowId,:NavyStockNumber,:PartNumber,:PartDescription,:SupplierName,:CageCode,:QuantityRequired,:UnitCost,:UnitOfMeasure);
CREATE SERVICE "ACM_PartsEquipment" TYPE 'SOAP' AS call "_ACM"."PartsEquipment"(:RowId);
CREATE SERVICE "ACM_PartsPermissions" TYPE 'SOAP' AS call "_ACM"."PartsPermissions"(:NodeId,:RowId,:PartRowId);
CREATE SERVICE "ACM_PartsSearchEquipment" TYPE 'SOAP' AS call "_ACM"."PartsSearchEquipment"(:EquipmentRowId,:ModuleRowId,:NavyStockNumber,:PartNumber,:PartDescription,:SupplierName,:CageCode,:PartsSource,:OrderBy,
:HSC,:EFD,:HSCScopeId,:EFDScopeID,:APLSource,:UseVessel,:APLRIC,:APLRICScopeId);
CREATE SERVICE "ACM_PartsSearchParts" TYPE 'SOAP' AS call "_ACM"."PartsSearchParts"(:EquipmentRowId,:NavyStockNumber,:PartNumber,:PartDescription,:SupplierName,:CageCode,:PartsSource,:OrderBy,:APLSource,:UseVessel);
CREATE SERVICE "ACM_PartsSelectedGrid" TYPE 'SOAP' AS call "_ACM"."PartsSelectedGrid"(:RowId);
CREATE SERVICE "ACM_PartsSourceList" TYPE 'SOAP' AS call "_ACM"."PartsSourceList"();
CREATE SERVICE "API_WebServiceInformation" TYPE 'SOAP' AS call "_API"."WebServiceInformation"(:ServiceName);
CREATE SERVICE "API_WebServiceOwners" TYPE 'SOAP' AS call "_API"."WebServiceOwners"();
CREATE SERVICE "API_WebServiceSearch" TYPE 'SOAP' AS call "_API"."WebServiceSearch"(:SearchString);
CREATE SERVICE "API_WebServiceServices" TYPE 'SOAP' AS call "_API"."WebServiceServices"(:OwnerName);
CREATE SERVICE "APM_EquipmentList" TYPE 'SOAP' AS call "_APM"."EquipmentList"(:MaintenanceRowId,:EquipmentRowIds,:RowType);
CREATE SERVICE "APM_MaintenancePartsAdd" TYPE 'SOAP' AS call "_APM"."MaintenancePartsAdd"(:Equipments,:Parts,:QuantityRequired);
CREATE SERVICE "APM_MaintenancePartsAddManually" TYPE 'SOAP' AS call "_APM"."MaintenancePartsAddManually"(:CageCode,:EquipmentRowIdStr,:MaintenanceRowId,:NavyStockNumber,
:PartDescription,:PartNumber,:QuantityRequired,:SupplierName,:UnitCost,:UnitOfMeasure);
CREATE SERVICE "APM_MaintenancePartsEditDialog" TYPE 'SOAP' AS call "_APM"."MaintenancePartsEditDialog"(:PartRowId);
CREATE SERVICE "APM_MaintenancePartsEditSave" TYPE 'SOAP' AS call "_APM"."MaintenancePartsEditSave"(:PartRowId,:NavyStockNumber,:PartNumber,:PartDescription,:SupplierName,:CageCode,:QuantityRequired,:UnitCost,:UnitOfMeasure);
CREATE SERVICE "APM_MaintenancePartsSearchEquipment" TYPE 'SOAP' AS call "_APM"."MaintenancePartsSearchEquipment"(:EquipmentRowId,:ModuleRowId,:NavyStockNumber,:PartNumber,:PartDescription,:SupplierName,:CageCode,:PartsSource,
:OrderBy,:HSC,:EFD,:HSCScopeId,:EFDScopeID,:APLSource,:UseVessel,:APLRIC,:APLRICScopeId);
CREATE SERVICE "APM_MaintenancePartsSearchParts" TYPE 'SOAP' AS call "_APM"."MaintenancePartsSearchParts"(:EquipmentRowId,:NavyStockNumber,:PartNumber,:PartDescription,:SupplierName,:CageCode,:PartsSource,:OrderBy,:APLSource,:UseVessel);
CREATE SERVICE "APM_MaintenancePartsSelectedGrid" TYPE 'SOAP' AS call "_APM"."MaintenancePartsSelectedGrid"(:RowId);
CREATE SERVICE "APM_MaintenancePartsSourceList" TYPE 'SOAP' AS call "_APM"."MaintenancePartsSourceList"();
CREATE SERVICE "APM_PartRemove" TYPE 'SOAP' AS call "_APM"."PartRemove"(:PartRowId);
CREATE SERVICE "APM_PartsEquipment" TYPE 'SOAP' AS call "_APM"."PartsEquipment"(:RowId);
CREATE SERVICE "APM_PartsPermissions" TYPE 'SOAP' AS call "_APM"."PartsPermissions"(:NodeId,:RowId,:PartRowId);
CREATE SERVICE "APM_PlannedMaintenance" TYPE 'SOAP' AS call _APM.PlannedMaintenance(:NodeId,:IsLimited,:OrderBy);
CREATE SERVICE "AWB_Workbook" TYPE 'SOAP' AS call _AWB.WorkBook(:NodeId,:OrderBy,:IsLimited);
CREATE SERVICE "AWR_WorkRequests" TYPE 'SOAP' AS call _AWR.WorkRequests(:NodeId,:IsLimited,:OrderBy);
CREATE SERVICE "CMS_ConditionMonitoring" TYPE 'SOAP' AS call "_CMS"."ConditionMonitoring"(:NodeId,:OrderBy,:IsLimited,:TextSearch);
CREATE SERVICE "communitiesLoad" TYPE 'SOAP' AS call ECO.CommunitiesLoad(:UserId,:Sort,:ParentCommunityId);
CREATE SERVICE "communityDelete" TYPE 'SOAP' AS call ECO.CommunityDelete(:CommunityId);
CREATE SERVICE "communityInsert" TYPE 'SOAP' AS select ECO.CommunityInsert(:ParentCommunityId,:UserId,:CommunityTitle) as CommunityId;
CREATE SERVICE "communityParent" TYPE 'SOAP' AS call ECO.CommunityParent(:CommunityId);
CREATE SERVICE "communityUpdate" TYPE 'SOAP' AS call ECO.CommunityUpdate(:CommunityId,:ParentCommunityId,:CommunityTitle);
CREATE SERVICE "communityUserAlphabetical" TYPE 'SOAP' AS call ECO.CommunityUserAlphabetical(:AlphaLetters);
CREATE SERVICE "communityUserDelete" TYPE 'SOAP' AS call ECO.CommunityUserDelete(:CommunityId,:UserId);
CREATE SERVICE "communityUserInsert" TYPE 'SOAP' AS call ECO.CommunityUserInsert(:CommunityId,:UserId);
CREATE SERVICE "communityUsersClear" TYPE 'SOAP' AS call ECO.CommunityUsersClear(:CommunityId);
CREATE SERVICE "communityUsersLoad" TYPE 'SOAP' AS call ECO.CommunityUsersLoad(:CommunityId,:Sort);
CREATE SERVICE "controllerCategoryList" TYPE 'SOAP' AS call ECA.ControllerCategoryList();
CREATE SERVICE "E_ReportColumnInformation" TYPE 'SOAP' AS call _SWA.ReportColumnInformation(:DBProcedure);
CREATE SERVICE "EDSS_TopTenEquipmentByRepairs" TYPE 'SOAP' AS call ECA.EDSS_TopTenEquipmentByRepairs();
CREATE SERVICE "EDSS_TopTenEquipmentByRepairsVessel" TYPE 'SOAP' AS call ECA.EDSS_TopTenEquipmentByRepairsVessel(:EquipmentId);
CREATE SERVICE "equipmentHistory" TYPE 'SOAP' AS call ECA.VesselEquipmentHistory(:VesselId,:HSC,:UserId,:LikeFilters,:EqualFilters,:Sort,:Filters,:MinTimestamp,:MaxTimestamp);
CREATE SERVICE "equipmentHistoryDetail" TYPE 'SOAP' AS call ECA.VesselEquipmentHistoryDetail(:VesselId,:HistoryId);
CREATE SERVICE "equipmentParameters" TYPE 'SOAP' AS call ECA.VesselsEquipmentParameters(:VesselId,:ProcessId,:HSC);
CREATE SERVICE "equipmentProcesses" TYPE 'SOAP' AS call ECA.VesselsEquipmentProcesses(:VesselId,:HSC);
CREATE SERVICE "equipmentTestResultDetail" TYPE 'SOAP' AS call ECA.VesselsEquipmentTestResultDetail(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "equipmentTestResults" TYPE 'SOAP' AS call ECA.VesselsEquipmentTestResults(:VesselId,:HSC,:Sort,:SeverityFilter,:MinTimestamp,:MaxTimestamp);
CREATE SERVICE "LES_DashboardError" TYPE 'SOAP' AS call LES.DashboardError(:ErrorMessage);
CREATE SERVICE "LES_DashboardFileData" TYPE 'SOAP' AS select LES.DashboardFileData(:DashboardFileId) as FileData
  from DUMMY;
CREATE SERVICE "LES_DashboardNeedsUpdate" TYPE 'SOAP' AS call LES.DashboardNeedsUpdate(:VersionNumber,:VersionTimestamp);
CREATE SERVICE "LES_DashboardUserWidgetDisplayOrdersUpdate" TYPE 'SOAP' AS call LES.DashboardUserWidgetDisplayOrdersUpdate(:DashboardPage,:UserLogin,:WidgetDisplayOrders);
CREATE SERVICE "LES_DashboardUserWidgetStatesUpdate" TYPE 'SOAP' AS call LES.DashboardUserWidgetStatesUpdate(:DashboardPage,:UserLogin,:WidgetStates);
CREATE SERVICE "LES_DashboardVersionFileDelete" TYPE 'SOAP' AS call LES.DashboardVersionFileDelete(:VersionId,:FileId);
CREATE SERVICE "LES_DashboardVersionFileInsert" TYPE 'SOAP' AS select LES.DashboardVersionFileInsert(:VersionId,:FilePath,:FileHash,:FileData) as FileId
  from DUMMY;
CREATE SERVICE "LES_DashboardVersionFiles" TYPE 'SOAP' AS call LES.DashboardVersionFiles(:DashboardVersionId);
CREATE SERVICE "LES_DashboardVersionFileUpdate" TYPE 'SOAP' AS select LES.DashboardVersionFileUpdate(:VersionId,:FileId,:FileHash,:FileData) as NewFileId
  from DUMMY;
CREATE SERVICE "LES_DashboardVersionId" TYPE 'SOAP' AS select LES.DashboardVersionId(:VersionNumber,:VersionTimestamp) as VersionId
  from DUMMY;
CREATE SERVICE "LES_DashboardVersionInsert" TYPE 'SOAP' AS select LES.DashboardVersionInsert(:VersionNumber,:VersionTimestamp,:PreviousVersionId) as DashboardVersionId
  from DUMMY;
CREATE SERVICE "LES_DashboardVersionSetActive" TYPE 'SOAP' AS call LES.DashboardVersionSetActive(:DashboardVersionId);
CREATE SERVICE "LES_DashboardWidgetContentLoad" TYPE 'SOAP' AS call LES.DashboardWidgetContentLoad(:DashboardPage,:WidgetId,:UserLogin);
CREATE SERVICE "LES_DashboardWidgetImageLoad" TYPE 'SOAP' AS call LES.DashboardWidgetImageLoad(:DashboardPage,:WidgetId);
CREATE SERVICE "LES_DashboardWidgetsLoad" TYPE 'SOAP' AS call LES.DashboardWidgetsLoad(:DashboardPage,:UserLoginId);
CREATE SERVICE "LIH_AdditionalDetailsGrid" TYPE 'SOAP' AS call _LIH.AdditionalDetailsGrid(:RowId);
CREATE SERVICE "LIH_ApplicationId" TYPE 'SOAP' AS select _LIH.ApplicationId() as ApplicationId;
CREATE SERVICE "LIH_ApplicationsSettingInsertUpdate" TYPE 'SOAP' AS call _LIH.ApplicationsSettingInsertUpdate(:SettingId,:Setting,:VesselId);
CREATE SERVICE "LIH_ApplicationsSettingSelect" TYPE 'SOAP' AS call _LIH.ApplicationsSettingSelect(:SettingId,:VesselId);
CREATE SERVICE "LIH_DiagnosticsGrid" TYPE 'SOAP' AS call _LIH.DiagnosticsGrid(:RowId);
CREATE SERVICE "LIH_EstimateDownload" TYPE 'RAW' AS select _LIH.WorkItemsEstimateDownload(:RowId) as DocumentData;
CREATE SERVICE "LIH_FilterAdvancedAttributes" TYPE 'SOAP' AS call _LIH.FilterAdvancedAttributes();
CREATE SERVICE "LIH_FilterAdvancedLoad" TYPE 'SOAP' AS call _LIH.FilterAdvancedLoad();
CREATE SERVICE "LIH_FilterComparators" TYPE 'SOAP' AS call _LIH.FilterComparators();
CREATE SERVICE "LIH_FilterConvertBasic" TYPE 'SOAP' AS call _LIH.FilterConvertBasic(:Date,:VesselList,:SWBSList,:AvailabilityList,:LocationList,:AllText);
CREATE SERVICE "LIH_FilterData" TYPE 'SOAP' AS call _LIH.FilterData();
CREATE SERVICE "LIH_FilterInformation" TYPE 'SOAP' AS call _LIH.FilterInformation();
CREATE SERVICE "LIH_FilterListAvailabilityTypes" TYPE 'SOAP' AS call _LIH.FilterListAvailabilityTypes(:GetDefault);
CREATE SERVICE "LIH_FilterListDates" TYPE 'SOAP' AS call _LIH.FilterListDates(:GetDefault);
CREATE SERVICE "LIH_FilterListLocations" TYPE 'SOAP' AS call _LIH.FilterListLocations(:GetDefault);
CREATE SERVICE "LIH_FilterListSWBS" TYPE 'SOAP' AS call _LIH.FilterListSWBS(:GetDefault);
CREATE SERVICE "LIH_FilterListText" TYPE 'SOAP' AS call _LIH.FilterListText();
CREATE SERVICE "LIH_FilterListVessels" TYPE 'SOAP' AS call _LIH.FilterListVessels(:GetDefault);
CREATE SERVICE "LIH_FilterSaveAs" TYPE 'SOAP' AS call _LIH.FilterSaveAs(:Description);
CREATE SERVICE "LIH_MainGrid" TYPE 'SOAP' AS call _LIH.WorkItems(:NodeId,:OrderBy,:IsLimited);
CREATE SERVICE "LIH_MainGridOrderBySave" TYPE 'SOAP' AS call _LIH.SavedOrderByInsertUpdate(:OrderBy);
CREATE SERVICE "LIH_Navigation" TYPE 'SOAP' AS call _LIH.Navigation(:NodeType,:NodeId);
CREATE SERVICE "LIH_NavigationTypeLoad" TYPE 'SOAP' AS call _LIH.NavigationTypeLoad();
CREATE SERVICE "LIH_SpecificationDownload" TYPE 'RAW' AS select _LIH.SpecificationDownload(:RowId);
CREATE SERVICE "LIH_UsersFilterAdvancedSave" TYPE 'SOAP' AS call _LIH.UsersFilterAdvancedSave(:AnyAll,:Data);
CREATE SERVICE "LIH_UsersFilterBasicSave" TYPE 'SOAP' AS call _LIH.UsersFilterBasicSave(:Date,:VesselList,:SWBSList,:AvailabilityList,:LocationList,:AllText);
CREATE SERVICE "LIH_UsersFilterDelete" TYPE 'SOAP' AS call _LIH.UsersFiltersDelete(:FilterIds,:Type);
CREATE SERVICE "LIH_UsersFiltersDelete" TYPE 'SOAP' AS call _LIH.UsersFiltersDelete(:FilterId);
CREATE SERVICE "LIH_UsersFiltersLoad" TYPE 'SOAP' AS call _LIH.UsersFiltersLoad(:Type);
CREATE SERVICE "LIH_UsersFiltersSelect" TYPE 'SOAP' AS call _LIH.UsersFiltersSelect(:FilterId);
CREATE SERVICE "LIH_UsersVesselAccess" TYPE 'SOAP' AS call _LIH.UsersVesselAccess(:AccessList);
CREATE SERVICE "LIH_VesselsList" TYPE 'SOAP' AS call _LIH.VesselsList(:RowId);
CREATE SERVICE "LIH_WorkItemAttachmentData" TYPE 'RAW' AS select _LIH.WorkItemAttachmentData(:RowId) as DocumentData;
CREATE SERVICE "LIH_WorkItemAttachments" TYPE 'SOAP' AS call _LIH.DetailsAttachmentsGrid(:RowId,:OrderBy);
CREATE SERVICE "LIH_WorkItemLibraryUsersSave" TYPE 'SOAP' AS call _LIH.WorkItemLibraryUsersSave(:RowIds);
CREATE SERVICE "LIH_WorkItemLibraryVesselsSave" TYPE 'SOAP' AS call _LIH.WorkItemLibraryVesselsSave(:RowIds);
CREATE SERVICE "LIH_WorkItemSpecificationHistory" TYPE 'SOAP' AS call _LIH.WorkItemSpecificationHistory(:RowId);
CREATE SERVICE "LIH_WorkItemsVesselsInsert" TYPE 'SOAP' AS call _LIH.WorkItemsVesselsInsert(:RowId);
CREATE SERVICE "LIT_AdditionalDetails" TYPE 'SOAP' AS call _LIT.AdditionalDetails(:RowId);
CREATE SERVICE "LIT_AdditionalDetailsGrid" TYPE 'SOAP' AS call _LIT.AdditionalDetailsGrid(:RowId);
CREATE SERVICE "LIT_ApplicationId" TYPE 'SOAP' AS select _LIT.ApplicationId() as ApplicationId;
CREATE SERVICE "LIT_ApplicationsSettingInsertUpdate" TYPE 'SOAP' AS call _LIT.ApplicationsSettingInsertUpdate(:SettingId,:Setting,:VesselId);
CREATE SERVICE "LIT_ApplicationsSettingSelect" TYPE 'SOAP' AS call _LIT.ApplicationsSettingSelect(:SettingId,:VesselId);
CREATE SERVICE "LIT_AttachmentDelete" TYPE 'SOAP' AS call _LIT.AttachmentDelete(:RowId,:AttachmentId);
CREATE SERVICE "LIT_AttachmentDownload" TYPE 'RAW' AS select _LIT.AttachmentDownload(:RowId);
CREATE SERVICE "LIT_AttachmentInsert" TYPE 'SOAP' AS call _LIT.AttachmentInsert(:RowId,:AttachmentName,:AttachmentDescription,:AttachmentData,:Enclosure);
CREATE SERVICE "LIT_AvailabilityTypeList" TYPE 'SOAP' AS call _LIT.AvailabilityTypeList(:WorkItemId);
CREATE SERVICE "LIT_DetailsCostHistoryGrid" TYPE 'SOAP' AS call _LIT.WorkItemsLibraryReferencesCostHistory(:RowId,:OrderBy);
CREATE SERVICE "LIT_DiagnosticsGrid" TYPE 'SOAP' AS call _LIT.DiagnosticsGrid(:RowId);
CREATE SERVICE "LIT_EquipmentList" TYPE 'SOAP' AS call _LIT.EquipmentList(:ModuleRowId,:EquipmentRowIds,:RowType,:ApplicationId);
CREATE SERVICE "LIT_EstimateDownload" TYPE 'RAW' AS select _LIT.EstimateDownload(:RowId);
CREATE SERVICE "LIT_EstimatePermissions" TYPE 'SOAP' AS call _LIT.EstimatePermissions(:RowId,:ApplicationId);
CREATE SERVICE "LIT_ExpenditureTypes" TYPE 'SOAP' AS call _LIT.ExpenditureTypes();
CREATE SERVICE "LIT_FilterAdvancedAttributes" TYPE 'SOAP' AS call _LIT.FilterAdvancedAttributes();
CREATE SERVICE "LIT_FilterAdvancedLoad" TYPE 'SOAP' AS call _LIT.FilterAdvancedLoad();
CREATE SERVICE "LIT_FilterComparators" TYPE 'SOAP' AS call _LIT.FilterComparators();
CREATE SERVICE "LIT_FilterConvertBasic" TYPE 'SOAP' AS call _LIT.FilterConvertBasic(:VesselList,:SWBSList,:ItemTypeList,:AllText);
CREATE SERVICE "LIT_FilterData" TYPE 'SOAP' AS call _LIT.FilterData();
CREATE SERVICE "LIT_FilterInformation" TYPE 'SOAP' AS call _LIT.FilterInformation();
CREATE SERVICE "LIT_FilterListLibraryItemTypes" TYPE 'SOAP' AS call _LIT.FilterListWorkItemLibraryTypes(:GetDefault);
CREATE SERVICE "LIT_FilterListSWBS" TYPE 'SOAP' AS call _LIT.FilterListSWBS(:GetDefault);
CREATE SERVICE "LIT_FilterListText" TYPE 'SOAP' AS call _LIT.FilterListText();
CREATE SERVICE "LIT_FilterListVessels" TYPE 'SOAP' AS call _LIT.FilterListVessels(:GetDefault);
CREATE SERVICE "LIT_FilterSaveAs" TYPE 'SOAP' AS call _LIT.FilterSaveAs(:Description);
CREATE SERVICE "LIT_ImportAttachments" TYPE 'SOAP' AS call _LIT.ImportAttachments(:RowIdJSON);
CREATE SERVICE "LIT_ItemTypes" TYPE 'SOAP' AS call _LIT.ItemTypes();
CREATE SERVICE "LIT_LibraryItems" TYPE 'SOAP' AS call _LIT.LibraryItems(:NodeId,:OrderBy,:IsLimited);
CREATE SERVICE "LIT_LineItemPermissions" TYPE 'SOAP' AS call _LIT.LineItemPermissions(:RowId,:ApplicationId);
CREATE SERVICE "LIT_MainGrid" TYPE 'SOAP' AS call _LIT.MainGrid(:NodeId,:OrderBy,:IsLimited);
CREATE SERVICE "LIT_MainGridOrderBySave" TYPE 'SOAP' AS call _LIT.SavedOrderByInsertUpdate(:OrderBy);
CREATE SERVICE "LIT_MaintenanceItemPartsAddManually" TYPE 'SOAP' AS call _LIT.MaintenanceItemPartsAddManually(:ModuleRowId,:EquipmentRowIdStr,:NavyStockNumber,:PartNumber,:PartDescription,:SupplierName,
:CageCode,:QuantityRequired,:UnitCost,:UnitOfMeasure,:ApplicationId);
CREATE SERVICE "LIT_MaintenanceItemsParts" TYPE 'SOAP' AS call _LIT.MaintenanceItemsParts(:ApplicationId,:ModuleRowId,:EquipmentRowId,:OrderBy);
CREATE SERVICE "LIT_MaintenanceItemsPartsAdd" TYPE 'SOAP' AS call "_LIT"."MaintenanceItemsPartsAdd"(:PartsRowIdStr,:EquipmentRowIdStr,:QuantityRequired,:ApplicationId);
CREATE SERVICE "LIT_MaintenanceItemsPartsRemove" TYPE 'SOAP' AS call _LIT.MaintenanceItemsPartsRemove(:PartRowId);
CREATE SERVICE "LIT_MaintenancePartsEditDialog" TYPE 'SOAP' AS call _LIT.MaintenancePartsEditDialog(:PartRowId,:ApplicationId);
CREATE SERVICE "LIT_MaintenancePartsEditSave" TYPE 'SOAP' AS call _LIT.MaintenancePartsEditSave(:PartRowId,:NavyStockNumber,:PartNumber,:PartDescription,:SupplierName,:CageCode,:QuantityRequired,:UnitCost,:UnitOfMeasure,:ApplicationId);
CREATE SERVICE "LIT_MaintenancePartsPermissions" TYPE 'SOAP' AS call _LIT.MaintenancePartsPermissions(:Action,:ApplicationId,:NodeId,:RowId);
CREATE SERVICE "LIT_MaintenancePartsSearchResultGrid" TYPE 'SOAP' AS call "_LIT"."MaintenancePartsSearchEquipment"(:EquipmentRowId,:ModuleRowId,:NavyStockNumber,:PartNumber,:PartDescription,:SupplierName,:CageCode,:PartsSource,
:OrderBy,:HSC,:EFD,:HSCScopeId,:EFDScopeID,:APLSource,:UseVessel,:APLRIC,:APLRICScopeId);
CREATE SERVICE "LIT_MaintenancePartsSearchResultParts" TYPE 'SOAP' AS call _LIT.MaintenancePartsSearchParts(:EquipmentRowId,:NavyStockNumber,:PartNumber,:PartDescription,:SupplierName,:CageCode,:PartsSource,:OrderBy,:APLSource,:UseVessel);
CREATE SERVICE "LIT_MaintenancePartsSelectedGrid" TYPE 'SOAP' AS call _LIT.MaintenancePartsSelectedGrid(:RowId,:ApplicationId);
CREATE SERVICE "LIT_MaintenancePartsSourceList" TYPE 'SOAP' AS call _LIT.MaintenancePartsSourceList();
CREATE SERVICE "LIT_Navigation" TYPE 'SOAP' AS call _LIT.Navigation(:NodeType,:NodeId);
CREATE SERVICE "LIT_NavigationTypeLoad" TYPE 'SOAP' AS call _LIT.NavigationTypeLoad();
CREATE SERVICE "LIT_PartsPermissions" TYPE 'SOAP' AS call "_LIT"."PartsPermissions"(:NodeId,:RowId,:PartRowId);
CREATE SERVICE "LIT_SpecificationDownload" TYPE 'RAW' AS select _LIT.SpecificationDownload(:RowId);
CREATE SERVICE "LIT_SpecificationRevisions" TYPE 'SOAP' AS call _LIT.SpecificationRevisions(:RowId,:SpecificationId,:OrderBy);
CREATE SERVICE "LIT_SWBSList" TYPE 'SOAP' AS call _LIT.SWBSList();
CREATE SERVICE "LIT_TemplateAddEditDialog" TYPE 'SOAP' AS call _LIT.TemplateAddEditDialog(:RowId,:Action,:Module,:NodeId,:EnableLineItemEstimateTabs,:IsEncoded);
CREATE SERVICE "LIT_TemplateAddEditSave" TYPE 'SOAP' AS call "_LIT"."TemplateAddEditSave"(:Title,:SWBS,:WorkItemNumber,:SpecificationId,:SpecificationFileName,:SpecificationDocument,:SpecificationTitle,
:SpecificationFileDate,:ExpenditureType,:LaborHours,:LaborRate,:LaborTotal,:OtherDirect,:EstimateId,:EstimateFileName,:EstimateDocument,
:EstimateTitle,:EstimateFileDate,:AvailabilityTypeJSON,:AttachmentDataJSON,:DeletedAttachmentIds,:SpecificationDocumentDelete,:EstimateDocumentDelete,
:Module,:WorkItemLibraryId,:WorkItemCategory,:VesselStr,:WorkItemLibraryType,:IsEncoded,:WorkItemNumberEncoded,:CategoryCombo);
CREATE SERVICE "LIT_TemplateAttachments" TYPE 'SOAP' AS call _LIT.TemplateAttachments(:RowId);
CREATE SERVICE "LIT_TemplateHistory" TYPE 'SOAP' AS call _LIT.WorkItemsLibraryReferencesCostHistory(:RowId,:OrderBy);
CREATE SERVICE "LIT_TemplateItemsFileDownload" TYPE 'RAW' AS select _PAV.TemplateItemsFileDownload(:RowId,:FileType) as DocumentData;
CREATE SERVICE "LIT_TemplateVessels" TYPE 'SOAP' AS call _LIT.TemplateVessels(:RowId);
CREATE SERVICE "LIT_TemplateVesselsGrid" TYPE 'SOAP' AS call _LIT.TemplateVesselsGrid(:RowId,:NodeId);
CREATE SERVICE "LIT_UsersFilterAdvancedSave" TYPE 'SOAP' AS call _LIT.UsersFilterAdvancedSave(:AnyAll,:Data);
CREATE SERVICE "LIT_UsersFilterBasicSave" TYPE 'SOAP' AS call _LIT.UsersFilterBasicSave(:VesselList,:SWBSList,:LibraryItemTypeList,:AllText);
CREATE SERVICE "LIT_UsersFilterDelete" TYPE 'SOAP' AS call _LIT.UsersFiltersDelete(:FilterIds,:Type);
CREATE SERVICE "LIT_UsersFiltersDelete" TYPE 'SOAP' AS call _LIT.UsersFiltersDelete(:FilterId);
CREATE SERVICE "LIT_UsersFilterSettings" TYPE 'SOAP' AS call _LIT.UsersFilterSettingsBasic(:DateList,:VesselList,:AvalilabilityList,:Description);
CREATE SERVICE "LIT_UsersFiltersLoad" TYPE 'SOAP' AS call _LIT.UsersFiltersLoad(:Type);
CREATE SERVICE "LIT_UsersFiltersSelect" TYPE 'SOAP' AS call _LIT.UsersFiltersSelect(:FilterId);
CREATE SERVICE "LIT_UsersVesselAccess" TYPE 'SOAP' AS call _LIT.UsersVesselAccess(:AccessList);
CREATE SERVICE "LIT_WorkItemAttachments" TYPE 'SOAP' AS call _LIT.WorkItemAttachments(:RowId,:OrderBy);
CREATE SERVICE "LIT_WorkItemCategoryList" TYPE 'SOAP' AS call _LIT.WorkItemCategoryList();
CREATE SERVICE "LIT_WorkItemLibraryCanAdd" TYPE 'SOAP' AS call _LIT.WorkItemLibraryCanAdd(:NodeId);
CREATE SERVICE "LIT_WorkItemsLibraryDelete" TYPE 'SOAP' AS call _LIT.WorkItemsLibraryDelete(:RowIds);
CREATE SERVICE "LIT_WorkItemsLibraryEquipmentAssign" TYPE 'SOAP' AS call _LIT.WorkItemsLibraryEquipmentAssign(:RowIds);
CREATE SERVICE "LIT_WorkItemsLibraryEquipmentDivest" TYPE 'SOAP' AS call _LIT.WorkItemsLibraryEquipmentDivest(:RowIds);
CREATE SERVICE "LIT_WorkItemsLibraryEquipments" TYPE 'SOAP' AS call _LIT.WorkItemsLibraryEquipments(:ApplicationId,:RowId,:VesselId,:OrderBy);
CREATE SERVICE "LIT_WorkItemsLibraryVessels" TYPE 'SOAP' AS call _LIT.WorkItemsLibraryVessels(:RowId);
CREATE SERVICE "LIT_WorkItemSpecificationHistory" TYPE 'SOAP' AS call _LIT.WorkItemSpecificationHistory(:RowId);
CREATE SERVICE "LMS_CompleteLesson" TYPE 'SOAP' AS call _LMS.LessonComplete(:LessonId);
CREATE SERVICE "LMS_CoursesCertificate" TYPE 'SOAP' AS call _LMS.CoursesCertificate(:CourseId);
CREATE SERVICE "LMS_CoursesCertificateData" TYPE 'SOAP' AS call _LMS.CoursesCertificateData(:CourseId);
CREATE SERVICE "LMS_GetCourseStatus" TYPE 'SOAP' AS call _LMS.GetCourseStatus();
CREATE SERVICE "LMS_GetKeyValue" TYPE 'SOAP' AS call _LMS.GetKeyValue(:LessonId,:StatusKey);
CREATE SERVICE "LMS_GetLessonStatus" TYPE 'SOAP' AS call _LMS.GetLessonStatus();
CREATE SERVICE "LMS_GetManifestCourseStatus" TYPE 'SOAP' AS call _LMS.GetManifestCourseStatus();
CREATE SERVICE "LMS_GetManifestKeyValue" TYPE 'SOAP' AS call _LMS.GetManifestKeyValue(:ManifestLessonId,:StatusKey);
CREATE SERVICE "LMS_GetManifestLessonStatus" TYPE 'SOAP' AS call _LMS.GetManifestLessonStatus();
CREATE SERVICE "LMS_LessonsCertificate" TYPE 'SOAP' AS call _LMS.LessonsCertificate(:LessonId);
CREATE SERVICE "LMS_LessonsCertificateData" TYPE 'SOAP' AS call _LMS.LessonsCertificateData(:LessonId);
CREATE SERVICE "LMS_ManifestCoursesCertificateData" TYPE 'SOAP' AS call _LMS.ManifestCoursesCertificateData(:ManifestCourseId);
CREATE SERVICE "LMS_SetKeyValue" TYPE 'SOAP' AS call _LMS.SetKeyValue(:LessonId,:StatusKey,:StatusKeyValue);
CREATE SERVICE "LMS_SetManifestKeyValue" TYPE 'SOAP' AS call _LMS.SetManifestKeyValue(:ManifestLessonId,:StatusKey,:StatusKeyValue);
CREATE SERVICE "lubeOilDetailsTable" TYPE 'SOAP' AS call ECA.LubeOilDetailsTable(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "lubeOilFerrogram" TYPE 'SOAP' AS call ECA.LubeOilFerrogram(:VesselId,:EquipmentId,:TestResultId,:FerrogramId);
CREATE SERVICE "lubeOilFerrograms" TYPE 'SOAP' AS call ECA.LubeOilFerrograms(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "lubeOilLubricantDetails" TYPE 'SOAP' AS call ECA.LubeOilLubricantDetails(:VesselId,:EquipmentId);
CREATE SERVICE "lubeOilLubricantTable" TYPE 'SOAP' AS call ECA.LubeOilLubricantTable(:VesselId,:EquipmentId);
CREATE SERVICE "lubeOilTestDates" TYPE 'SOAP' AS call ECA.LubeOilTestDates(:VesselId,:EquipmentId);
CREATE SERVICE "lubeOilTests" TYPE 'SOAP' AS call ECA.LubeOilTests(:VesselId,:EquipmentId);
CREATE SERVICE "lubeOilTrendChart" TYPE 'SOAP' AS call ECA.LubeOilTrendChart(:VesselId,:EquipmentId,:StartDate,:EndDate);
CREATE SERVICE "lubeOilVariables" TYPE 'SOAP' AS call ECA.LubeOilVariables(:VesselId,:EquipmentId);
CREATE SERVICE "MachineryHistoryEquipmentMaintenanceProcedures" TYPE 'SOAP' AS call ECA.VesselMachineryHistoryEquipmentMaintenanceProcedures(:VesselId,:WorkRequestId,:EquipmentId,:Sort);
CREATE SERVICE "MachineryHistoryRepairGetWorkRequestId" TYPE 'SOAP' AS select ECA.GetMachineryHistoryRepairWorkRequestId(:VesselId,:HistoryId) as WorkRequestId;
CREATE SERVICE "MachineryHistoryRepairRequestAttachments" TYPE 'SOAP' AS call ECA.VesselWorkRequestAttachments(:VesselId,:WorkRequestId);
CREATE SERVICE "MachineryHistoryRepairRequestDetails" TYPE 'SOAP' AS call ECA.VesselWorkRequestDetails(:VesselId,:WorkRequestId);
CREATE SERVICE "MachineryHistoryRepairRequestEquipmentDetails" TYPE 'SOAP' AS call ECA.VesselWorkRequestEquipment(:VesselId,:WorkRequestId);
CREATE SERVICE "MachineryHistoryRepairRequestReferenceDetails" TYPE 'SOAP' AS call ECA.VesselWorkRequestReferenceDetails(:VesselId,:WorkRequestId,:ReferenceId);
CREATE SERVICE "MachineryHistoryRepairRequestReferencesDetails" TYPE 'SOAP' AS call ECA.VesselWorkRequestReferences(:VesselId,:WorkRequestId);
CREATE SERVICE "MachineryHistoryRepairReviewDetails" TYPE 'SOAP' AS call ECA.VesselWorkRequestReviewDetails(:VesselId,:WorkRequestId);
CREATE SERVICE "MachineryHistoryRepairWorkEquipmentDetails" TYPE 'SOAP' AS call ECA.VesselWorkListItemEquipment(:VesselId,:WorkRequestId,:Sort);
CREATE SERVICE "MachineryHistoryRepairWorkListItemDetails" TYPE 'SOAP' AS call ECA.VesselWorkListItemDetails(:VesselId,:WorkRequestId);
CREATE SERVICE "MachineryHistoryRepairWorkPartsListDetails" TYPE 'SOAP' AS call ECA.VesselWorkListItemParts(:VesselId,:WorkRequestId,:Sort);
CREATE SERVICE "MachineryHistoryRepairWorkPartsListItemDetails" TYPE 'SOAP' AS call ECA.VesselWorkListItemPartDetails(:VesselId,:WorkRequestId,:PartListItemId);
CREATE SERVICE "MachineryHistoryRepairWorkReferencesDetails" TYPE 'SOAP' AS call ECA.VesselWorkListItemReferences(:VesselId,:WorkRequestId,:Sort);
CREATE SERVICE "MachineryHistoryRepairWorkReferencesItemDetails" TYPE 'SOAP' AS call ECA.VesselWorkListItemReferenceDetails(:VesselId,:WorkRequestId,:ReferenceId);
CREATE SERVICE "MachineryHistoryRepairWorkTestRequirements" TYPE 'SOAP' AS call ECA.VesselWorkListItemTestRequirements(:VesselId,:WorkRequestId,:EquipmentId,:Sort);
CREATE SERVICE "MDST_ApplicationSettingSelect" TYPE 'SOAP' AS call MDST.ApplicationsSettingSelect(:applicationId,:settingId);
CREATE SERVICE "MDST_EquipmentByHSC" TYPE 'SOAP' AS call MDST.EquipmentByHSC(:HSC,:HSCMATCH);
CREATE SERVICE "MDST_GetPMIncompletedEquip" TYPE 'SOAP' AS call MDST.P_GetPMIncompletedEquip(:VesselList,:StartDate,:EndDate,:MaintenanceLevelCode,:MCodes,:HSC);
CREATE SERVICE "MDST_GetPMMonthlyCount" TYPE 'SOAP' AS call MDST.P_GetPMMonthlyCount(:VesselList,:StartDate,:EndDate,:MaintenanceLevelCode,:MCodes);
CREATE SERVICE "MDST_GetPMTop10Incompleted" TYPE 'SOAP' AS call MDST.P_GetPMTop10Incompleted(:VesselList,:HSC,:StartDate,:EndDate,:MaintenanceLevelCode,:MCodes);
CREATE SERVICE "MDST_RDB_PlannedMaintenance" TYPE 'SOAP' AS call MDST.RDB_PlannedMaintenance(:Vessels,:StartDate,:EndDate,:HSCMatch);
CREATE SERVICE "MDST_RDB_PlannedMaintenanceVessels" TYPE 'SOAP' AS call MDST.RDB_PlannedMaintenanceVessels(:Vessels,:StartDate,:EndDate,:HSCMatch);
CREATE SERVICE "MDST_RDB_Repairs" TYPE 'SOAP' AS call MDST.RDB_Repairs(:Vessels,:StartDate,:EndDate,:HSCMatch);
CREATE SERVICE "MDST_RDB_RepairsVessels" TYPE 'SOAP' AS call MDST.RDB_RepairsVessels(:Vessels,:StartDate,:EndDate,:HSCMatch);
CREATE SERVICE "MDST_UserPreferencesLoad" TYPE 'SOAP' AS call MDST.UserPreferencesLoad(:UserId,:ApplicationId);
CREATE SERVICE "MDST_UserPreferenceUpdate" TYPE 'SOAP' AS call MDST.UserPreferenceUpdate(:UserId,:ApplicationId,:PreferenceId,:Preference);
CREATE SERVICE "MDST_UserSAMMNameToId" TYPE 'SOAP' AS call MDST.UserSAMMNameToId(:UserName);
CREATE SERVICE "MDSTCategoriesActive" TYPE 'SOAP' AS call MDST.MDSTCategoriesActive(:Roles);
CREATE SERVICE "MDSTCategoryImage" TYPE 'SOAP' AS call MDST.MDSTCategoryImage(:CategoryId);
CREATE SERVICE "MDSTCategoryReportsActive" TYPE 'SOAP' AS call MDST.MDSTCategoryReportsActive(:CategoryId,:SourceId,:Roles);
CREATE SERVICE "MDSTCategorySourcesActive" TYPE 'SOAP' AS call MDST.MDSTCategorySourcesActive(:CategoryId);
CREATE SERVICE "MDSTProgramManagersLoad" TYPE 'SOAP' AS call MDST.ProgramManagersLoad(:VesselUIC);
CREATE SERVICE "MDSTProgramManagerVesselsLoad" TYPE 'SOAP' AS call MDST.ProgramManagerVesselsLoad(:VesselUIC,:ProgramManagerId);
CREATE SERVICE "mdstTopTenEquipmentAlertsData" TYPE 'SOAP' AS call MDST.MDSTTopTenEquipmentAlertsData(:VesselUIC,:ScopeType,:ScopeId,:FromDate,:ToDate,:HSC,:PM,:Count);
CREATE SERVICE "mdstTopTenEquipmentAlertsDrillData" TYPE 'SOAP' AS call MDST.MDSTTopTenEquipmentAlertsDrillData(:VesselUIC,:ScopeType,:ScopeId,:FromDate,:ToDate,:PM,:EquipmentId);
CREATE SERVICE "mdstTopTenEquipmentRepairsData" TYPE 'SOAP' AS call MDST.MDSTTopTenEquipmentRepairsData(:VesselUIC,:ScopeType,:ScopeId,:FromDate,:ToDate,:HSC,:PM,:Count);
CREATE SERVICE "mdstTopTenEquipmentRepairsDrillData" TYPE 'SOAP' AS call MDST.MDSTTopTenEquipmentRepairsDrillData(:VesselUIC,:ScopeType,:ScopeId,:FromDate,:ToDate,:PM,:EquipmentId);
CREATE SERVICE "parameterGraphValues" TYPE 'SOAP' AS call ECA.VesselsEquipmentParameterGraphValues(:VesselId,:LogId,:ProcessId,:ParameterId,:MinTimestamp,:MaxTimestamp);
CREATE SERVICE "parametersEquipment" TYPE 'SOAP' AS call ECA.VesselsParametersEquipment(:VesselId,:HSC,:Sort);
CREATE SERVICE "parameterValues" TYPE 'SOAP' AS call ECA.VesselsEquipmentParameterValues(:VesselId,:HSC,:Sort,:Filter,:MinTimestamp,:MaxTimestamp);
CREATE SERVICE "PAV_AdditionalDetailsGrid" TYPE 'SOAP' AS call _PAV.AdditionalDetailsGrid(:RowId);
CREATE SERVICE "PAV_ApplicationId" TYPE 'SOAP' AS select _PAV.ApplicationId() as ApplicationId;
CREATE SERVICE "PAV_AvailabilitiesAddEditSave" TYPE 'SOAP' AS call _PAV.AvailabilitiesAddEditSave(:VesselId,:AvailabilityType,:AvailabilityBeginDate,
:AvailabilityEndDate,:AvailabilityId,:Module,:AttachmentDataJSON,:DeletedAttachmentIds,
:POAMId,:POAMCalendarId,:POAMCompletionDates);
CREATE SERVICE "PAV_AvailabilitiesAttachmentDownload" TYPE 'RAW' AS select _PAV.AvailabilitiesAttachmentDownload(:RowId,:FileId);
CREATE SERVICE "PAV_AvailabilitiesAttachmentInsertUpdate" TYPE 'SOAP' AS call _PAV.AvailabilitiesAttachmentInsertUpdate(:RowId,:AttachmentName,:AttachmentData,:Enclosure);
CREATE SERVICE "PAV_AvailabilitiesAttachments" TYPE 'SOAP' AS call _PAV.AvailabilitiesAttachments(:NodeId,:RowId,:Module);
CREATE SERVICE "PAV_AvailabilitiesAttachmentsSubGrid" TYPE 'SOAP' AS call _PAV.AvailabilitiesAttachmentsSubGrid(:RowId,:OrderBy);
COMMENT ON SERVICE "PAV_AvailabilitiesAttachmentsSubGrid" IS '2013.04.29 rbh created. 2013.06.25 rbh added UnassignedRowIdJSON';
CREATE SERVICE "PAV_AvailabilitiesContractsWorkItemsRestore" TYPE 'SOAP' AS call _PAV.AvailabilitiesContractsWorkItemsRestore(:RowId);
CREATE SERVICE "PAV_AvailabilitiesFileDownload" TYPE 'RAW' AS select _PAV.AvailabilitiesFileDownload(:RowId,:FileId,:FileType) as DocumentData;
COMMENT ON SERVICE "PAV_AvailabilitiesFileDownload" IS '20130613 rbh created';
CREATE SERVICE "PAV_AvailabilitiesList" TYPE 'SOAP' AS call _PAV.AvailabilitiesList(:VesselId,:Module);
COMMENT ON SERVICE "PAV_AvailabilitiesList" IS '2013.05.14 rbh created';
CREATE SERVICE "PAV_AvailabilitiesMainGridAvailabilities" TYPE 'SOAP' AS call _PAV.AvailabilitiesMainGridAvailabilities(:NodeId,:OrderBy,:IsLimited);
CREATE SERVICE "PAV_AvailabilitiesMainGridServiceOrders" TYPE 'SOAP' AS call _PAV.AvailabilitiesMainGridServiceOrders(:NodeId,:OrderBy,:IsLimited);
CREATE SERVICE "PAV_AvailabilitiesMainGridVesselsSummary" TYPE 'SOAP' AS call _PAV.AvailabilitiesMainGridVesselsSummary(:NodeId,:OrderBy,:IsLimited);
CREATE SERVICE "PAV_AvailabilitiesPOAMsActive" TYPE 'SOAP' AS call _PAV.AvailabilitiesPOAMsActive(:RowId);
CREATE SERVICE "PAV_AvailabilitiesPOAMsCalendarsActive" TYPE 'SOAP' AS call _PAV.AvailabilitiesPOAMsCalendarsActive(:RowId);
CREATE SERVICE "PAV_AvailabilitiesPOAMsDetails" TYPE 'SOAP' AS call _PAV.AvailabilitiesPOAMDetails(:RowId);
CREATE SERVICE "PAV_AvailabilitiesPOAMsReportDetails" TYPE 'SOAP' AS call _PAV.AvailabilitiesPOAMsReportDetails(:RowId);
CREATE SERVICE "PAV_AvailabilitiesPOAMsReportTasks" TYPE 'SOAP' AS call _PAV.AvailabilitiesPOAMsReportTasks(:RowId,:OrderBy);
CREATE SERVICE "PAV_AvailabilitiesPOAMsTasks" TYPE 'SOAP' AS call _PAV.AvailabilitiesPOAMsTasks(:RowId,:POAMId,:POAMCalendarId,:OrderBy);
CREATE SERVICE "PAV_AvailabilitiesPOAMsTasksComments" TYPE 'SOAP' AS call _PAV.AvailabilitiesPOAMTasksComments(:RowId);
CREATE SERVICE "PAV_AvailabilitiesPOAMsTasksCommentsSave" TYPE 'SOAP' AS call _PAV.AvailabilitiesPOAMTasksCommentsSave(:RowId,:Comments);
CREATE SERVICE "PAV_AvailabilitiesPOAMsTasksRevisions" TYPE 'SOAP' AS call _PAV.AvailabilitiesPOAMsTasksRevisions(:RowId,:RevisionType,:OrderBy);
CREATE SERVICE "PAV_AvailabilitiesSourceItemsSubGrid" TYPE 'SOAP' AS call _PAV.AvailabilitiesSourceItemsSubGrid(:RowId,:UnassignedRowIdJSON,:OrderBy,:Module);
COMMENT ON SERVICE "PAV_AvailabilitiesSourceItemsSubGrid" IS '2013.04.29 rbh created.  2013.06.25 rbh added UnassignedRowIdJSON';
CREATE SERVICE "PAV_AvailabilitiesSpecificationSub" TYPE 'RAW' AS select _PAV.AvailabilitiesSpecificationSub(:RowId) as DocumentData;
COMMENT ON SERVICE "PAV_AvailabilitiesSpecificationSub" IS '2013.04.29 rbh created';
CREATE SERVICE "PAV_AvailabilitiesSubGridContractSummary" TYPE 'SOAP' AS call _PAV.AvailabilitiesSubGridContractSummary(:RowId,:OrderBy,:IsLimited);
COMMENT ON SERVICE "PAV_AvailabilitiesSubGridContractSummary" IS '2013.04.24 rbh Created';
CREATE SERVICE "PAV_AvailabilitiesSubGridFunding" TYPE 'SOAP' AS call _PAV.AvailabilitiesSubGridFunding(:RowId,:OrderBy);
COMMENT ON SERVICE "PAV_AvailabilitiesSubGridFunding" IS '2013-05-02 rbh created';
CREATE SERVICE "PAV_AvailabilitiesUnassignedSourceSubGrid" TYPE 'SOAP' AS call _PAV.AvailabilitiesUnassignedSourceSubGrid(:NodeId,:OrderBy);
COMMENT ON SERVICE "PAV_AvailabilitiesUnassignedSourceSubGrid" IS '2013-05-02 rbh created';
CREATE SERVICE "PAV_AvailabilitiesUnassignedSourceSubGridCount" TYPE 'SOAP' AS call _PAV.AvailabilitiesUnassignedSourceSubGridCount(:NodeId);
COMMENT ON SERVICE "PAV_AvailabilitiesUnassignedSourceSubGridCount" IS '2013-06.28 rbh created';
CREATE SERVICE "PAV_AvailabilityAddEditDialog" TYPE 'SOAP' AS call _PAV.AvailabilityAddEditDialog(:NodeId,:RowId,:Action,:Module);
CREATE SERVICE "PAV_AvailabilityTypeFilterList" TYPE 'SOAP' AS call _PAV.FilterListAvailabilityTypeLoad(:GetDefault);
COMMENT ON SERVICE "PAV_AvailabilityTypeFilterList" IS '2013-04-08 thawley';
CREATE SERVICE "PAV_AvailabilityTypeList" TYPE 'SOAP' AS call _PAV.AvailabilityTypeList(:VesselId);
CREATE SERVICE "PAV_AvailabilityTypeTemplateWorkItems" TYPE 'SOAP' AS call _PAV.AvailabilityTypeTemplateWorkItems(:NodeId,:RowId,:Module);
CREATE SERVICE "PAV_AvailabilityTypeTemplateWorkItemsImport" TYPE 'SOAP' AS call _PAV.AvailabilityTypeTemplateWorkItemsImport(:NodeId,:RowId,:TemplateRowIds,:Module);
CREATE SERVICE "PAV_BasicFiltersDefaultValues" TYPE 'SOAP' AS call _PAV.FilterSettingsDefaultValuesLoad();
COMMENT ON SERVICE "PAV_BasicFiltersDefaultValues" IS '2013-04-08 thawley';
CREATE SERVICE "PAV_CanAdd" TYPE 'SOAP' AS call _PAV.CanAdd();
COMMENT ON SERVICE "PAV_CanAdd" IS 'RMannix 2013-05-15: Created for PENG Redesign. Returns AvailabilityCanAdd BIT, WorkPackageCanAdd BIT, WorkItemCanAdd BIT, ServiceOrderCanAdd BIT';
CREATE SERVICE "PAV_ContractList" TYPE 'SOAP' AS call _PAV.ContractList(:VesselId,:AvailabilityId);
CREATE SERVICE "PAV_ContractNumber" TYPE 'SOAP' AS call _PAV.ContractNumber(:RowId);
CREATE SERVICE "PAV_ContractorsInsert" TYPE 'SOAP' AS call _PAV.ContractorsInsert(:Contractor,:LocationId);
CREATE SERVICE "PAV_ContractorsList" TYPE 'SOAP' AS call _PNG.ContractorsList(:RowId);
CREATE SERVICE "PAV_ContractsFundingSources" TYPE 'SOAP' AS call "_PAV"."ContractsFundingSources"(:VesselId,:Contractid,:IsEncoded);
CREATE SERVICE "PAV_CostPermissions" TYPE 'SOAP' AS call _PAV.CostPermissions(:RowId,:ApplicationId);
CREATE SERVICE "PAV_CostTabContractors" TYPE 'SOAP' AS call _PNG.ContractorsList(:RowId);
CREATE SERVICE "PAV_DateFilterList" TYPE 'SOAP' AS call _PAV.FilterListDateLoad(:GetDefault);
COMMENT ON SERVICE "PAV_DateFilterList" IS '2013-04-08 thawley';
CREATE SERVICE "PAV_DefaultWorkItemNumber" TYPE 'SOAP' AS call _PAV.DefaultWorkItemNumber(:VesselId,:ContractId,:SWBS);
COMMENT ON SERVICE "PAV_DefaultWorkItemNumber" IS 'RMannix 2013-06-07: Created for PENG Redesign. Returns next WorkItemNumber';
CREATE SERVICE "PAV_DiagnosticsGrid" TYPE 'SOAP' AS call _PAV.DiagnosticsGrid(:RowId);
CREATE SERVICE "PAV_EquipmentPermissions" TYPE 'SOAP' AS call _PAV.EquipmentPermissions(:RowId,:ApplicationId);
CREATE SERVICE "PAV_EstimatePermissions" TYPE 'SOAP' AS call _PAV.EstimatePermissions(:RowId,:ApplicationId);
CREATE SERVICE "PAV_ExpenditureTypesList" TYPE 'SOAP' AS call _PaV.ExpenditureTypesList();
COMMENT ON SERVICE "PAV_ExpenditureTypesList" IS '2013.05.14 rbh created';
CREATE SERVICE "PAV_FilterAdvancedLoad" TYPE 'SOAP' AS call _PAV.FilterAdvancedLoad();
COMMENT ON SERVICE "PAV_FilterAdvancedLoad" IS '2013-04-08 thawley';
CREATE SERVICE "PAV_FilterAdvandedToBasicMapping" TYPE 'SOAP' AS call _PAV.FilterAdvandedToBasicMapping();
CREATE SERVICE "PAV_FilterAttributes" TYPE 'SOAP' AS call _PAV.FilterAttributes();
COMMENT ON SERVICE "PAV_FilterAttributes" IS 'April 2013 thawley';
CREATE SERVICE "PAV_FilterComparators" TYPE 'SOAP' AS call _PAV.FilterComparators();
COMMENT ON SERVICE "PAV_FilterComparators" IS 'April 2013 thawley';
CREATE SERVICE "PAV_FilterConvertBasic" TYPE 'SOAP' AS call _PAV.FilterConvertBasic(:JSONValues);
CREATE SERVICE "PAV_FilterConvertBasicEx" TYPE 'SOAP' AS call _PAV.FilterConvertBasicEx(:Date,:VesselList,:AvailabilityList);
CREATE SERVICE "PAV_FilterData" TYPE 'SOAP' AS call _PAV.FilterData();
CREATE SERVICE "PAV_FilterInformation" TYPE 'SOAP' AS call _PAV.FilterInformation();
COMMENT ON SERVICE "PAV_FilterInformation" IS 'April 2013 thawley';
CREATE SERVICE "PAV_FilterSave" TYPE 'SOAP' AS call _PAV.FilterSave(:AndOr,:JSONValues,:Description,:IsAdvanced);
CREATE SERVICE "PAV_ImportAttachmentsGrid" TYPE 'SOAP' AS call _PAV.ImportAttachmentsGrid(:RowIdJSON);
COMMENT ON SERVICE "PAV_ImportAttachmentsGrid" IS 'import attachment grid - thawley.  2013.06.25 rbh updated to take in array of row ids.';
CREATE SERVICE "PAV_LineItemPermissions" TYPE 'SOAP' AS call _PAV.LineItemPermissions(:RowId,:ApplicationId);
CREATE SERVICE "PAV_MainGridOrderBySave" TYPE 'SOAP' AS call _PAV.SavedOrderByInsertUpdate(:OrderBy);
CREATE SERVICE "PAV_Navigation" TYPE 'SOAP' AS call _PAV.Navigation(:NodeType,:NodeId);
COMMENT ON SERVICE "PAV_Navigation" IS '2013-07-08 RJM created';
CREATE SERVICE "PAV_NodeIdDecodeGridDisplay" TYPE 'SOAP' AS select _PAV.NodeIdDecodeGridDisplay(:NodeId) as GridDisplay;
CREATE SERVICE "PAV_PartsPermissions" TYPE 'SOAP' AS call "_PAV"."PartsPermissions"(:NodeId,:RowId,:PartRowId);
CREATE SERVICE "PAV_PENGLaunchUrl" TYPE 'SOAP' AS call _PNG.PENGLaunchUrl(:VesselId,:ContractId);
COMMENT ON SERVICE "PAV_PENGLaunchUrl" IS '2013.07.08 rbh created';
CREATE SERVICE "PAV_PortEngineerList" TYPE 'SOAP' AS call _PAV.PortEngineers(:VesselId);
CREATE SERVICE "PAV_ProjectCodesList" TYPE 'SOAP' AS call "_PAV"."ProjectCodesList"(:VesselId,:IsEncoded);
CREATE SERVICE "PAV_RemoveAvailability" TYPE 'SOAP' AS call _PAV.RemoveAvailability(:RowId);
COMMENT ON SERVICE "PAV_RemoveAvailability" IS 'Remove availability SOAP - thawley';
CREATE SERVICE "PAV_RemoveMandatoryItem" TYPE 'SOAP' AS call _PAV.RemoveMandatoryItem(:WorkItemLibraryId,:AvailabilityType,:RemovalReason,:VesselId);
CREATE SERVICE "PAV_RemoveServiceOrder" TYPE 'SOAP' AS call _PAV.RemoveServiceOrder(:RowId,:Reason);
COMMENT ON SERVICE "PAV_RemoveServiceOrder" IS 'Remove service order SOAP - thawley';
CREATE SERVICE "PAV_RemoveWorkItem" TYPE 'SOAP' AS call _PAV.RemoveWorkItem(:RowId,:Reason);
COMMENT ON SERVICE "PAV_RemoveWorkItem" IS 'Remove work item SOAP - thawley';
CREATE SERVICE "PAV_RemoveWorkPackage" TYPE 'SOAP' AS call _PAV.RemoveWorkPackage(:RowId);
COMMENT ON SERVICE "PAV_RemoveWorkPackage" IS 'Remove work package SOAP - thawley';
CREATE SERVICE "PAV_RowIdEncode" TYPE 'SOAP' AS call _PAV.RowIdEncode(:VesselId,:AvailabilityId,:ContractId,:WorkItemId,:WorkItemReferenceType,:EquipmentId,:WorkItemReferenceId);
CREATE SERVICE "PAV_ServiceOrderAddEdit" TYPE 'SOAP' AS call "_PAV"."ServiceOrderAddEditDialog"(:NodeId,:RowId,:Action,:Module,:AvailabilityId,:ContractId,:EnableLineItemEstimateTabs,:IsEncoded);
COMMENT ON SERVICE "PAV_ServiceOrderAddEdit" IS '2013-05-15 rbh created';
CREATE SERVICE "PAV_ServiceOrderSave" TYPE 'SOAP' AS call _PAV.ServiceOrderAddEditSave(
:VesselId,
:AvailabilityId,
:ContractId,
:WorkItemId,
:SONum,
:StartDate,
:EndDate,
:FundingId,
:ProjectCode,
:TaskCode,
:Requisition,
:PurchaseOrder,
:Title,
:SWBS,
:ExpenditureTypeCode,
:LaborHours,
:LaborRate,
:LaborTotal,
:OtherDirect,
:SpecificationDocumentDelete,
:SpecificationId,
:SpecificationFileName,
:SpecificationDocument,
:SpecificationTitle,
:SpecificationFileDate,
:EstimateDocumentDelete,
:EstimateId,
:EstimateFileName,
:EstimateDocument,
:EstimateTitle,
:EstimateFileDate,
:AttachmentDataJSON,
:DeletedAttachmentIds,
:SourceRowIdJSON,
:Module,
:RowId,
:LibraryItemId,
:AwardedLaborHours,
:AwardedLaborRate,
:AwardedLaborTotal,
:AwardedOtherDirect,
:AwardedDate,
:ContractorId,
:RFPCost,
:AwardedLineItemsCost,
:LineItemDollars,
:LocationId,
:Action,
:IsEncoded);
COMMENT ON SERVICE "PAV_ServiceOrderSave" IS '2013.05.16 rbh created';
CREATE SERVICE "PAV_ServiceOrdersWorkItemCreate" TYPE 'SOAP' AS call _PAV.ServiceOrderWorkItemCreate(:ServiceOrderRowId,:WorkPackageRowId);
CREATE SERVICE "PAV_ShowRemovedWorkItemsSave" TYPE 'SOAP' AS call _PAV.ShowRemovedWorkItemsSave(:ShowRemovedWorkItems);
CREATE SERVICE "PAV_ShowRemovedWorkItemsSelect" TYPE 'SOAP' AS select _PAV.ShowRemovedWorkItemsSelect() as IsShown;
CREATE SERVICE "PAV_SourceItemAssign" TYPE 'SOAP' AS call _PAV.SourceItemAssign(:DestinationRowId,:SourceRowIdJSON);
COMMENT ON SERVICE "PAV_SourceItemAssign" IS '2013.06.19 rbh Created. 2013.06.25 rbh update to take in array of source ids';
CREATE SERVICE "PAV_TaskCodesList" TYPE 'SOAP' AS call "_PAV"."TaskCodesList"(:VesselId,:IsEncoded);
CREATE SERVICE "PAV_UnassignedSourceItemAssign" TYPE 'SOAP' AS call _PAV.UnassignedSourceItemAssign(:DestinationRowId,:UnassignedRowId);
COMMENT ON SERVICE "PAV_UnassignedSourceItemAssign" IS '2013.06.19 rbh Created';
CREATE SERVICE "PAV_UsersFilterAdvancedSave" TYPE 'SOAP' AS call _PAV.UsersFilterAdvancedSave(:AnyAll,:Data);
CREATE SERVICE "PAV_UsersFilterSaveAsFavorite" TYPE 'SOAP' AS call _PAV.UsersFilterSaveAsFavorite(:Description);
COMMENT ON SERVICE "PAV_UsersFilterSaveAsFavorite" IS '2013-04-08 thawley';
CREATE SERVICE "PAV_UsersFiltersDelete" TYPE 'SOAP' AS call _PAV.UsersFiltersDelete(:FilterIds,:Type);
COMMENT ON SERVICE "PAV_UsersFiltersDelete" IS '2013-04-08 thawley';
CREATE SERVICE "PAV_UsersFilterSettings" TYPE 'SOAP' AS call _PAV.UsersFilterSettingsBasic(:DateList,:VesselList,:AvalilabilityList,:Description);
COMMENT ON SERVICE "PAV_UsersFilterSettings" IS '2013-04-11 rbh created';
CREATE SERVICE "PAV_UsersFiltersLoad" TYPE 'SOAP' AS call _PAV.UsersFiltersLoad(:Type);
COMMENT ON SERVICE "PAV_UsersFiltersLoad" IS '2013-04-08 thawley';
CREATE SERVICE "PAV_UsersFiltersSelect" TYPE 'SOAP' AS call _PAV.UsersFiltersSelect(:FilterId);
COMMENT ON SERVICE "PAV_UsersFiltersSelect" IS '2013-04-08 thawley';
CREATE SERVICE "PAV_UsersVesselsAccess" TYPE 'SOAP' AS call _PAV.UsersVesselAccess(:AccessList);
COMMENT ON SERVICE "PAV_UsersVesselsAccess" IS '2013.04.18 rbh created';
CREATE SERVICE "PAV_VesselsFilterList" TYPE 'SOAP' AS call _PAV.FilterListVesselsLoad(:GetDefault);
COMMENT ON SERVICE "PAV_VesselsFilterList" IS '2013-04-08 thawley';
CREATE SERVICE "PAV_VesselsList" TYPE 'SOAP' AS call _PAV.VesselsList();
CREATE SERVICE "PAV_WorkItemAccountList" TYPE 'SOAP' AS call _PAV.WorkItemAccountList(:VesselId,:WorkPackId);
COMMENT ON SERVICE "PAV_WorkItemAccountList" IS '2013.05.17 rbh created';
CREATE SERVICE "PAV_WorkItemAddEditDialog" TYPE 'SOAP' AS call _PAV.WorkItemAddEditDialog(:NodeId,:RowId,:Action,:Module,:ContractId,:EnableLineItemEstimateTabs,:AvailabilityId,:ISEncoded);
CREATE SERVICE "PAV_WorkItemAddEditSave" TYPE 'SOAP' AS call _PAV.WorkItemAddEditSave(
:VesselId,
:ContractId,
:FundingId,
:AvailabilityId,
:ExpenditureTypeCode,
:WorkItemCategory,
:SWBS,
:WorkItemNumber,
:WorkItemTitle,
:SpecificationDocumentDelete,
:SpecificationId,
:SpecificationFileName,
:SpecificationDocument,
:SpecificationTitle,
:SpecificationFileDate,
:EstimateDocumentDelete,
:EstimateId,
:EstimateFileName,
:EstimateDocument,
:EstimateTitle,
:EstimateFileDate,
:LaborHours,
:LaborRate,
:LaborTotal,
:OtherDirect,
:ProgressByTime,
:AttachmentDataJSON,
:WorkItemId,
:DeletedAttachmentIds,
:SourceRowIdJSON,
:Module,
:rowId,
:LibraryItemId,
:LineItemDollars,
:AwardedLaborHours,
:AwardedLaborRate,
:AwardedLaborTotal,
:AwardedOtherDirect,
:AwardedLineItemsCost,
:RFPCost,
:ContractorId,
:AwardedDate,
:IsNotEncoded,
:IsEncoded);
CREATE SERVICE "PAV_WorkItemAttachmentDownload" TYPE 'RAW' AS select _PAV.WorkItemAttachmentDownload(:VesselId,:AttachmentId) as DocumentData;
COMMENT ON SERVICE "PAV_WorkItemAttachmentDownload" IS '2013.05.16 rbh created';
CREATE SERVICE "PAV_WorkItemAttachmentInsertUpdate" TYPE 'SOAP' AS call _PAV.WorkItemAttachmentInsertUpdate(:RowId,:AttachmentName,:AttachmentData,:Enclosure,:AttachmentDescription,:AttachmentDateTime,
:AttachmentIsControlled,:AttachmentIsEditable,:AttachmentIsActive,:AttachmentType);
COMMENT ON SERVICE "PAV_WorkItemAttachmentInsertUpdate" IS '2013.05.16 rbh created';
CREATE SERVICE "PAV_WorkItemBasisOfEstimate" TYPE 'SOAP' AS call _PAV.WorkItemBasisOfEstimate(:LineItemRowId);
CREATE SERVICE "PAV_WorkItemCategoryList" TYPE 'SOAP' AS call _PAV.WorkItemCategoryList();
CREATE SERVICE "PAV_WorkItemEstimateParameterEdit" TYPE 'SOAP' AS call _PAV.WorkItemEstimateParameterEdit(:WorkItemRowId,:Parameter,:EstimateBasis,:QuantityRequested,:UnitOfMeasure,:UnitPrice,:ParameterValue);
CREATE SERVICE "PAV_WorkItemEstimateParameters" TYPE 'SOAP' AS call _PAV.WorkItemEstimateParameters(:WorkItemRowId);
CREATE SERVICE "PAV_WorkItemEstimateParameterValues" TYPE 'SOAP' AS call _PAV.WorkItemEstimateParameterValues(:WorkItemRowId,:LineItemRowId);
CREATE SERVICE "PAV_WorkItemEstimateTotal" TYPE 'SOAP' AS call _PAV.WorkItemEstimateTotal(:RowId);
CREATE SERVICE "PAV_WorkItemExportAttachmentDownload" TYPE 'RAW' AS select _PAV.ContractsDocumentsDownloadAttachment(:RowId) as DocumentData;
CREATE SERVICE "PAV_WorkItemLineItemAssign" TYPE 'SOAP' AS call _PAV.WorkItemLineItemAssign(:WorkItemRowId,:LineItemRowId,:Description,:ReferenceNumber,
:EstimateBasis,:QuantityRequested,:UnitOfMeasure,:UnitPrice);
CREATE SERVICE "PAV_WorkItemLineItemDivest" TYPE 'SOAP' AS call _PAV.WorkItemLineItemDivest(:LineItemRowId);
CREATE SERVICE "PAV_WorkItemLineItems" TYPE 'SOAP' AS call _PAV.WorkItemLineItems(:WorkItemRowId,:ApplicationId);
CREATE SERVICE "PAV_WorkItemLineItemsExport" TYPE 'SOAP' AS call _PAV.WorkItemLineItemsExport(:WorkItemRowId,:ApplicationId);
CREATE SERVICE "PAV_WorkItemsAttachmentDocumentsByContract" TYPE 'SOAP' AS call "_PAV"."ContractsDocumentsDownload"(:RowId);
CREATE SERVICE "PAV_WorkItemsContractAssign" TYPE 'SOAP' AS call _PAV.WorkItemsContractAssign(:WIRowId,:WPRowId);
CREATE SERVICE "PAV_WorkItemsCostData" TYPE 'SOAP' AS call _PAV.WorkItemsCostData(:NodeId,:RowId,:ApplicationId);
CREATE SERVICE "PAV_WorkItemsCostPermissions" TYPE 'SOAP' AS call _PAV.WorkItemsCostPermissions(:NodeId,:RowId,:ApplicationId);
CREATE SERVICE "PAV_WorkItemsEquipments" TYPE 'SOAP' AS call _PAV.WorkItemsEquipments(:NodeId,:RowId,:ApplicationId);
CREATE SERVICE "PAV_WorkItemsEquipmentsAdd" TYPE 'SOAP' AS call _PAV.WorkItemsEquipmentsAdd(:ModuleNodeId,:ModuleRowId,:EquipmentNodeIds,:ApplicationId);
CREATE SERVICE "PAV_WorkItemsEquipmentsEdit" TYPE 'SOAP' AS call _PAV.WorkItemsEquipmentsEdit(:ModuleNodeId,:ModuleRowId,:EquipmentRowId,:AllowancePartsList,:ApplicationId);
CREATE SERVICE "PAV_WorkItemsEquipmentsHierarchies" TYPE 'SOAP' AS call _PAV.WorkItemsEquipmentsHierarchies(:NodeId,:RowId);
CREATE SERVICE "PAV_WorkItemsEquipmentsImport" TYPE 'SOAP' AS call _PAV.WorkItemsEquipmentsImport(:ModuleNodeId,:ModuleRowid,:EquipmentRowIds,:ApplicationId);
CREATE SERVICE "PAV_WorkItemsEquipmentsList" TYPE 'SOAP' AS call _PAV.WorkItemsEquipmentsList(:ModuleNodeId,:ModuleRowId,:EquipmentNodeId,:HierarchyType,:SearchQuery,:ApplicationId);
CREATE SERVICE "PAV_WorkItemsEquipmentsPermissions" TYPE 'SOAP' AS call _PAV.WorkItemsEquipmentsPermissions(:NodeId,:RowId,:ApplicationId,:Action);
CREATE SERVICE "PAV_WorkItemsEquipmentsRemove" TYPE 'SOAP' AS call _PAV.WorkItemsEquipmentsRemove(:ModuleNodeId,:ModuleRowId,:EquipmentRowIds,:ApplicationId);
CREATE SERVICE "PAV_WorkItemsEquipmentsSelectedList" TYPE 'SOAP' AS call _PAV.WorkItemsEquipmentsSelectedList(:ModuleNodeId,:ModuleRowId,:ApplicationId);
CREATE SERVICE "PAV_WorkItemsEquipmentsTotals" TYPE 'SOAP' AS call _PAV.WorkItemsEquipmentsTotals(:NodeId,:RowId,:ApplicationId);
CREATE SERVICE "PAV_WorkItemsEstimateDownload" TYPE 'RAW' AS select _PAV.ContractsDocumentsDownloadEstimate(:RowId) as DocumentData;
CREATE SERVICE "PAV_WorkItemsEstimatesReports" TYPE 'SOAP' AS call _PAV.WorkItemsEstimatesReports(:RowId);
CREATE SERVICE "PAV_WorkItemsModificationsSummary" TYPE 'SOAP' AS call _PAV.WorkItemsModificationsSummary(:NodeId,:RowId,:ApplicationId);
CREATE SERVICE "PAV_WorkItemsPartsAdd" TYPE 'SOAP' AS call _PAV.WorkItemsPartsAdd(:PartsRowIdStr,:EquipmentRowIdStr,:QuantityRequired);
CREATE SERVICE "PAV_WorkItemsPartsAddManually" TYPE 'SOAP' AS call _PAV.WorkItemsPartsAddManually(:ModuleRowId,:EquipmentRowIdStr,:NavyStockNumber,:PartNumber,:PartDescription,:SupplierName,:CageCode,:QuantityRequired,:UnitCost,:UnitOfMeasure,:ApplicationId);
CREATE SERVICE "PAV_WorkItemsPartsEquipment" TYPE 'SOAP' AS call _PAV.WorkItemsPartsEquipment(:ModuleNodeId,:ModuleRowId,:EquipmentRowId,:RowType,:ApplicationId);
CREATE SERVICE "PAV_WorkItemsPartsEquipmentList" TYPE 'SOAP' AS call _PAV.WorkItemsPartsEquipmentList(:ModuleRowId,:EquipmentRowId,:RowType,:ApplicationId);
CREATE SERVICE "PAV_WorkItemsPartsImport" TYPE 'SOAP' AS call _PNG.WorkItemsPartsImport(:ModuleRowId,:partsRowIds,:EquipmentRowId,:ApplicationId);
CREATE SERVICE "PAV_WorkItemsPartsRemove" TYPE 'SOAP' AS call _PAV.WorkItemsPartsRemove(:PartRowId);
CREATE SERVICE "PAV_WorkItemsPartsSearchResultGrid" TYPE 'SOAP' AS call "_PAV"."WorkItemsPartsSearchEquipment"(:EquipmentRowId,:ModuleRowId,:WorkItemEquipmentRow,:NavyStockNumber,:PartNumber,:PartDescription,:SupplierName,:CageCode,
:PartsSource,:OrderBy,:HSC,:EFD,:HSCScopeId,:EFDScopeID,:APLSource,:UseVessel,:APLRIC,:APLRICScopeId);
CREATE SERVICE "PAV_WorkItemsPartsSearchResultParts" TYPE 'SOAP' AS call _PAV.WorkItemsPartsSearchParts(:EquipmentRowId,:NavyStockNumber,:PartNumber,:PartDescription,:SupplierName,:CageCode,:PartsSource,:OrderBy,:APLSource,:UseVessel);
CREATE SERVICE "PAV_WorkItemsPartsSelectedGrid" TYPE 'SOAP' AS call _PAV.WorkItemsPartsSelectedGrid(:RowId);
CREATE SERVICE "PAV_WorkItemsPartsSourceList" TYPE 'SOAP' AS call _PAV.WorkItemsPartsSourceList();
CREATE SERVICE "PAV_WorkItemsReferencesEquipments" TYPE 'SOAP' AS call _PAV.WorkItemsReferencesEquipments(:NodeId,:RowId,:ApplicationId);
CREATE SERVICE "PAV_WorkItemsServiceOrderCreate" TYPE 'SOAP' AS call _PAV.WorkItemsServiceOrderCreate(:RowId);
CREATE SERVICE "PAV_WorkItemsSourceItemsPartsGrid" TYPE 'SOAP' AS call _PAV.WorkItemsSourceItemsParts(:ModuleRowId,:EquipmentRowId,:ApplicationId);
CREATE SERVICE "PAV_WorkItemsSpecificationDownload" TYPE 'RAW' AS select _PAV.ContractsDocumentsDownloadSpecification(:RowId) as DocumentData;
COMMENT ON SERVICE "PAV_WorkItemsSpecificationDownload" IS 'work item spec download - thawley';
CREATE SERVICE "PAV_WorkItemsSpecificationInsertUpdate" TYPE 'SOAP' AS select
  _PAV.WorkItemsSpecificationInsertUpdate(
  :VesselId,
  :WorkItemId,
  :EstimateId,
  :EstimateFileName,
  :EstimateDocument,
  :EstimateTitle,
  :EstimateIsActive,
  :EstimateDateTime);
COMMENT ON SERVICE "PAV_WorkItemsSpecificationInsertUpdate" IS '2013.05.21 rbh created';
CREATE SERVICE "PAV_WorkItemsTransfer" TYPE 'SOAP' AS call _PAV.WorkItemsTransfer(:SrcRowId,:DstRowId);
COMMENT ON SERVICE "PAV_WorkItemsTransfer" IS 'RMannix 2013-05-15: Created';
CREATE SERVICE "PAV_WorkItemStructuresList" TYPE 'SOAP' AS call _PaV.WorkItemStructuresList();
COMMENT ON SERVICE "PAV_WorkItemStructuresList" IS '2013.05.14 rbh created';
CREATE SERVICE "PAV_WorkPackageAddEditDialog" TYPE 'SOAP' AS call _PAV.WorkPackageAddEditDialog(:NodeId,:RowId,:Action,:Module,:AvailabilityId);
CREATE SERVICE "PAV_WorkPackageAddEditSave" TYPE 'SOAP' AS call _PAV.WorkPackageAddEditSave(:VesselId,:AvailabilityId,:ContractNumber,:PortEngineerId,:PortEngineerName,:ContractBeginDate,:ContractEndDate,:FundingCodes,:ContractId,:ContractAwardDate,:ContractorId,:ContractLocationId,:Module);
CREATE SERVICE "PAV_WorkPackageByAvailabilityId" TYPE 'SOAP' AS call _PAV.WorkPackageByAvailabilityId(:NodeId,:RowId,:Action);
COMMENT ON SERVICE "PAV_WorkPackageByAvailabilityId" IS '2013.05.17 rbh created';
CREATE SERVICE "PAV_WorkPackageJ2Report" TYPE 'SOAP' AS call _PAV.WorkPackageJ2Report(:RowId);
CREATE SERVICE "PAV_WorkPackageJ3Report" TYPE 'SOAP' AS call _PAV.WorkPackageJ3Report(:RowId);
CREATE SERVICE "PAV_WorkPackageList" TYPE 'SOAP' AS call _PAV.WorkPackageList(:VesselId,:AvailabilityId);
CREATE SERVICE "PEM_AvailabilityCompletionReportCosts" TYPE 'SOAP' AS call "_PEM"."AvailabilityCompletionReportCosts"(:VesselId,:ContractId);
CREATE SERVICE "PEM_WorkItemModificationClassificationTotals" TYPE 'SOAP' AS call "_PEM"."WorkItemModificationClassificationTotals"(:VesselId,:ContractId);
CREATE SERVICE "PEM_WorkItemsModifications" TYPE 'SOAP' AS call "_PEM"."WorkItemsModifications"(:VesselId,:WorkItemId,:RowId);
CREATE SERVICE "permanentFilterDelete" TYPE 'SOAP' AS call ECA.PermanentFilterDelete(:UserId,:Identifier,:FilterType,:FilterText);
CREATE SERVICE "permanentFilterInsert" TYPE 'SOAP' AS call ECA.PermanentFilterInsert(:UserId,:Identifier,:FilterType,:FilterText);
CREATE SERVICE "permanentFilters" TYPE 'SOAP' AS call ECA.PermanentFilters(:UserId,:Identifier,:FilterType);
CREATE SERVICE "permanentFilterUpdate" TYPE 'SOAP' AS call ECA.PermanentFilterUpdate(:UserId,:Identifier,:FilterType,:FilterText,:FilterTextOld);
CREATE SERVICE "PNG_APLRICSearchScope" TYPE 'SOAP' AS call _PNG.APLRICSearchScope();
CREATE SERVICE "PNG_ApplicationId" TYPE 'SOAP' AS select _PNG.ApplicationId() as ApplicationId;
CREATE SERVICE "PNG_ContractLocations" TYPE 'SOAP' AS call _PNG.ContractLocations(:RowId);
CREATE SERVICE "PNG_EFDSearchScope" TYPE 'SOAP' AS call _PNG.EFDSearchScope();
CREATE SERVICE "PNG_EstimateDownload" TYPE 'RAW' AS select _PNG.EstimateDownload(:RowId);
CREATE SERVICE "PNG_FilterAdvancedAttributes" TYPE 'SOAP' AS call _PNG.FilterAdvancedAttributes(:Module);
CREATE SERVICE "PNG_FilterAdvancedLoad" TYPE 'SOAP' AS call _PNG.FilterAdvancedLoad();
COMMENT ON SERVICE "PNG_FilterAdvancedLoad" IS '2013-04-08 thawley';
CREATE SERVICE "PNG_FilterAdvancedSave" TYPE 'SOAP' AS call _PNG.FilterAdvancedSave(:Module,:AndOr,:JSONValues);
CREATE SERVICE "PNG_FilterAttributes" TYPE 'SOAP' AS call _PNG.FilterAttributes();
COMMENT ON SERVICE "PNG_FilterAttributes" IS 'Filter update thawley';
CREATE SERVICE "PNG_FilterComparators" TYPE 'SOAP' AS call _PNG.FilterComparators();
COMMENT ON SERVICE "PNG_FilterComparators" IS 'Filter update thawley';
CREATE SERVICE "PNG_FilterConvertBasic" TYPE 'SOAP' AS call _PNG.FilterConvertBasic(:JSONValues);
COMMENT ON SERVICE "PNG_FilterConvertBasic" IS '2013-05-02 rbh created';
CREATE SERVICE "PNG_FilterConvertBasicNew" TYPE 'SOAP' AS call _PNG.FilterConvertBasicNew(:DateList,:VesselList,:PriorityList,:RacList,:ShipStatusList,:ShoreStatusList,:DispositionList,:ForacList,:AllText);
CREATE SERVICE "PNG_FilterData" TYPE 'SOAP' AS call _PNG.FilterData();
CREATE SERVICE "PNG_FilterInformation" TYPE 'SOAP' AS call _PNG.FilterInformation();
COMMENT ON SERVICE "PNG_FilterInformation" IS 'Filter update thawley';
CREATE SERVICE "PNG_FilterListActionsLoad" TYPE 'SOAP' AS call _PNG.FilterListActionsLoad(:GetDefault);
COMMENT ON SERVICE "PNG_FilterListActionsLoad" IS '2013-04-08 thawley';
CREATE SERVICE "PNG_FilterListDateLoad" TYPE 'SOAP' AS call _PNG.FilterListDateLoad(:GetDefault);
COMMENT ON SERVICE "PNG_FilterListDateLoad" IS '2013-04-08 thawley';
CREATE SERVICE "PNG_FilterListDispositionsLoad" TYPE 'SOAP' AS call _PNG.FilterListDispositionsLoad(:GetDefault);
COMMENT ON SERVICE "PNG_FilterListDispositionsLoad" IS '2013-04-08 thawley';
CREATE SERVICE "PNG_FilterListPrioritiesLoad" TYPE 'SOAP' AS call _PNG.FilterListPrioritiesLoad(:GetDefault);
COMMENT ON SERVICE "PNG_FilterListPrioritiesLoad" IS '2013-04-08 thawley';
CREATE SERVICE "PNG_FilterListRiskAssessmentLoad" TYPE 'SOAP' AS call _PNG.FilterListRiskAssessmentsLoad(:GetDefault);
CREATE SERVICE "PNG_FilterListShipStatusLoad" TYPE 'SOAP' AS call _PNG.FilterListShipStatusLoad(:GetDefault);
COMMENT ON SERVICE "PNG_FilterListShipStatusLoad" IS '2013-04-08 thawley';
CREATE SERVICE "PNG_FilterListShoreStatusLoad" TYPE 'SOAP' AS call _PNG.FilterListShoreStatusLoad(:GetDefault);
COMMENT ON SERVICE "PNG_FilterListShoreStatusLoad" IS '2013-04-08 thawley';
CREATE SERVICE "PNG_FilterListText" TYPE 'SOAP' AS call _PNG.FilterListText();
CREATE SERVICE "PNG_FilterListVesselsLoad" TYPE 'SOAP' AS call _PNG.FilterListVesselsLoad(:GetDefault);
COMMENT ON SERVICE "PNG_FilterListVesselsLoad" IS '2013-04-08 thawley';
CREATE SERVICE "PNG_FilterSave" TYPE 'SOAP' AS call _PNG.FilterSave(:AndOr,:JSONValues,:Description,:IsAdvanced);
COMMENT ON SERVICE "PNG_FilterSave" IS 'Filter update thawley';
CREATE SERVICE "PNG_HasPrintSelectedItems" TYPE 'SOAP' AS call _PNG.HasPrintSelectedItems();
CREATE SERVICE "PNG_HSCSearchScope" TYPE 'SOAP' AS call _PNG.HSCSearchScope();
CREATE SERVICE "PNG_LibraryVesselsList" TYPE 'SOAP' AS call _PNG.LibraryVesselsList();
CREATE SERVICE "PNG_MainGridOrderBySave" TYPE 'SOAP' AS call _PNG.SavedOrderByInsertUpdate(:OrderBy);
CREATE SERVICE "PNG_Navigation" TYPE 'SOAP' AS call _PNG.Navigation(:NodeType,:NodeId);
CREATE SERVICE "PNG_NavigationTypeLoad" TYPE 'SOAP' AS call _PNG.NavigationTypeLoad();
CREATE SERVICE "PNG_PENGLaunchContractView" TYPE 'SOAP' AS call _PNG.LaunchContract(:VesselId,:ContractId);
COMMENT ON SERVICE "PNG_PENGLaunchContractView" IS '2013.07.09 rbh Created';
CREATE SERVICE "PNG_PENGLaunchServiceOrderView" TYPE 'SOAP' AS call _PNG.LaunchServiceOrder(:VesselId,:AvailabilityId);
COMMENT ON SERVICE "PNG_PENGLaunchServiceOrderView" IS '2013.07.09 rbh created';
CREATE SERVICE "PNG_PENGVersion" TYPE 'SOAP' AS call _PNG.PENGVersion(:ApplicationId,:NodeId,:RowId);
CREATE SERVICE "PNG_ProjectCodeVesselAdd" TYPE 'SOAP' AS call "_PNG"."ProjectCodeVesselAdd"(:ProjectCode,:VesselId,:IsEncoded);
CREATE SERVICE "PNG_PurchaseRequestLocationInsertUpdate" TYPE 'SOAP' AS call _PNG.PurchaseRequestLocationInsertUpdate(:RowId,:ShipToLocation,:AddressLineOne,:AddressLineTwo,:AddressLineThree,:City,:StateProvince,:ZipPostalCode,:Country);
CREATE SERVICE "PNG_PurchaseRequestLocations" TYPE 'SOAP' AS call _PNG.PurchaseRequestLocations(:RowId);
CREATE SERVICE "PNG_PurchaseRequestParts" TYPE 'SOAP' AS call _PNG.PurchaseRequestParts(:RowId);
CREATE SERVICE "PNG_PurchaseRequests" TYPE 'SOAP' AS call _PNG.PurchaseRequests(:RowId,:AddPurchaseRequest);
CREATE SERVICE "PNG_PurchaseRequestsAttachmentAdd" TYPE 'SOAP' AS call _PNG.PurchaseRequestsAttachmentAdd(:RowId,:AttachmentFileName,:Attachment);
CREATE SERVICE "PNG_PurchaseRequestsAttachmentRemove" TYPE 'SOAP' AS call _PNG.PurchaseRequestsAttachmentRemove(:AttachmentRowId);
CREATE SERVICE "PNG_PurchaseRequestsAttachments" TYPE 'SOAP' AS call _PNG.PurchaseRequestsAttachments(:RowId);
CREATE SERVICE "PNG_PurchaseRequestsAttachmentsDownLoad" TYPE 'RAW' AS select _PNG.PurchaseRequestsAttachmentsDownLoad(:AttachmentRowId);
CREATE SERVICE "PNG_PurchaseRequestsEquipments" TYPE 'SOAP' AS call _PNG.PurchaseRequestsEquipments(:OrderRowId);
CREATE SERVICE "PNG_PurchaseRequestsGeneral" TYPE 'SOAP' AS call _PNG.PurchaseRequestsGeneral(:RowId);
CREATE SERVICE "PNG_PurchaseRequestsGeneralSave" TYPE 'SOAP' AS call _PNG.PurchaseRequestsGeneralSave(:RowId,:DateRequired,:OriginatorEmail,:TechnicalDocumentsRequired,:InspectionRequired,:AcceptEquivalent,
:PurchaseRequestPriority,:SoleSourceJustification,:ShipToLocation,:AddressLineOne,:AddressLineTwo,:AddressLineThree,:City,:StateProvince,
:ZipPostalCode,:Country,:PhoneNumber,:Attention,:NoteToBuyer,:SubmitOrder);
CREATE SERVICE "PNG_PurchaseRequestShipToAddress" TYPE 'SOAP' AS call _PNG.PurchaseRequestShipToAddress(:ShipToLocationId);
CREATE SERVICE "PNG_PurchaseRequestsPartEditDialog" TYPE 'SOAP' AS call _PNG.PurchaseRequestsPartEditDialog(:PartRowIds);
CREATE SERVICE "PNG_PurchaseRequestsPartEditSave" TYPE 'SOAP' AS call _PNG.PurchaseRequestsPartEditSave(:UnitCost,:Quantity,:PartComment,:PartRowIds);
CREATE SERVICE "PNG_PurchaseRequestsPriorities" TYPE 'SOAP' AS call _PNG.PurchaseRequestsPriorities(:RowId);
CREATE SERVICE "PNG_PurchaseRequestsSources" TYPE 'SOAP' AS call _PNG.PurchaseRequestsSources(:RowId);
CREATE SERVICE "PNG_PurchaseRequestsSourcesAddEditLoad" TYPE 'SOAP' AS call _PNG.PurchaseRequestsSourcesAddEditLoad(:SourceRowId);
CREATE SERVICE "PNG_PurchaseRequestsSourcesAddEditSave" TYPE 'SOAP' AS call _PNG.PurchaseRequestsSourcesAddEditSave(:VendorName,:CageCode,:AddressLineOne,:AddressLineTwo,
:AddressLineThree,:City,:StateProvince,:ZipPostalCode,:Country,:PhoneNumber,:FaxNumber,:EmailAddress,:PointOfContact,:RowId,:SourceRowId);
CREATE SERVICE "PNG_PurchaseRequestsSourcesImport" TYPE 'SOAP' AS call _PNG.PurchaseRequestsSourcesImport(:RowId,:SourceRowIds);
CREATE SERVICE "PNG_PurchaseRequestsSourcesImportLoad" TYPE 'SOAP' AS call _PNG.PurchaseRequestsSourcesImportLoad(:RowId);
CREATE SERVICE "PNG_PurchaseRequestsSourcesRemove" TYPE 'SOAP' AS call _PNG.PurchaseRequestsSourcesRemove(:SourceRowId);
CREATE SERVICE "PNG_ReportFileName" TYPE 'SOAP' AS call _PNG.ReportFileName(:RowIds,:ReportId);
CREATE SERVICE "PNG_SearchScope" TYPE 'SOAP' AS call _PNG.SearchScope();
CREATE SERVICE "PNG_SpecificationDownload" TYPE 'RAW' AS select _PNG.SpecificationDownload(:RowId);
CREATE SERVICE "PNG_SpecificationsImport" TYPE 'SOAP' AS call _PNG.SpecificationsImport(:RowId,:FileName,:Document);
CREATE SERVICE "PNG_TaskCodeVesselAdd" TYPE 'SOAP' AS call _PNG.TaskCodeVesselAdd(:TaskCode,:VesselId);
CREATE SERVICE "PNG_UsersFilterAdvancedSave" TYPE 'SOAP' AS call _PNG.UsersFilterAdvancedSave(:AnyAll,:Data);
CREATE SERVICE "PNG_UsersFilterDelete" TYPE 'SOAP' AS call _PNG.UsersFiltersDelete(:FilterId);
CREATE SERVICE "PNG_UsersFilterSaveAsFavorite" TYPE 'SOAP' AS call _PNG.UsersFilterSaveAsFavorite(:Description);
CREATE SERVICE "PNG_UsersFiltersDelete" TYPE 'SOAP' AS call _PNG.UsersFiltersDelete(:FilterIds,:Type);
CREATE SERVICE "PNG_UsersFilterSelect" TYPE 'SOAP' AS call _PNG.UsersFiltersSelect(:FilterId);
CREATE SERVICE "PNG_UsersFilterSettings" TYPE 'SOAP' AS call _PNG.UsersFilterSettings(:VesselList,:DateList,:PriorityList,:RACList,:ShipStatusList,:ShoreStatusList,:DispositionList,:FORACList,:Description,:AllText);
CREATE SERVICE "PNG_UsersFiltersLoad" TYPE 'SOAP' AS call _PNG.UsersFiltersLoad(:Type);
CREATE SERVICE "PNG_UsersVesselAccess" TYPE 'SOAP' AS call _PNG.UsersVesselAccess(:AccessList);
CREATE SERVICE "PNG_VRRAvailabilityList" TYPE 'SOAP' AS call "_PNG"."VoyageRepairRequestAvailabilities"(:VesselId,:AvailabilityId,:RowId);
CREATE SERVICE "PNG_VRREditSelectionLists" TYPE 'SOAP' AS call _PNG.VoyageRepairRequestEditSelectionList();
CREATE SERVICE "PNG_VRRLogAdditionalGrid" TYPE 'SOAP' AS call _PNG.WorkRequestAdditionalDetails(:VesselId,:WorkRequestId);
CREATE SERVICE "PNG_VRRLogDetailAttachments" TYPE 'SOAP' AS call _PNG.WorkRequestAttachments(:VesselId,:WorkRequestIds);
CREATE SERVICE "PNG_VRRLogDetailAttachmentsAdd" TYPE 'SOAP' AS call "_PNG"."WorkRequestAttachmentUpdate"(:VesselId,:WorkRequestId,:AttachmentId,:AttachmentName,:AttachmentDescription,:AttachmentData);
CREATE SERVICE "PNG_VRRLogDetailAttachmentsDelete" TYPE 'SOAP' AS call "_PNG"."WorkRequestAttachmentDelete"(:VesselId,:WorkRequestId,:AttachmentId,:Inactivate);
CREATE SERVICE "PNG_VRRLogDetailAttachmentsView" TYPE 'SOAP' AS call "_PNG"."WorkRequestAttachment"(:VesselId,:WorkRequestId,:AttachmentId);
CREATE SERVICE "PNG_VRRLogDiagnosticGrid" TYPE 'SOAP' AS call _PNG.VRRLogDiagnosticGrid(:VesselId,:WorkRequestId);
CREATE SERVICE "PNG_VRRLogSummary" TYPE 'SOAP' AS call _PNG.WorkRequestNarrative(:VesselId,:WorkRequestId);
CREATE SERVICE "PNG_VRRNarrativeDownload" TYPE 'RAW' AS select _PNG.VRRNarrativeDownload(:RowId) as DocumentData;
CREATE SERVICE "PNG_VRRRepairItemStatus" TYPE 'SOAP' AS call _PNG.VoyageRepairRequestEditItems(:VesselId,:WorkRequestIds,:Base64Encode);
CREATE SERVICE "PNG_VRRSaveEditPanel" TYPE 'SOAP' AS call _PNG.VoyageRepairRequestUpdate(
:VesselId,
:RepairId,
:ShoreStatus,
:Disposition,
:FORAC,
:RespDate,
:CompDate,
:Comments,
:Availability,
:WorkPack,
:WorkItem,
:SpecificationDocumentDelete,
:SpecificationId,
:SpecificationFileName,
:SpecificationDocument,
:EstimateDocumentDelete,
:EstimateId,
:EstimateFileName,
:EstimateDocument);
CREATE SERVICE "PNG_VRRWorkItemList" TYPE 'SOAP' AS call _PNG.VoyageRepairRequestWorkItems(:VesselId,:WorkPackId,:WorkItemId);
CREATE SERVICE "PNG_VRRWorkPackList" TYPE 'SOAP' AS call _PNG.VoyageRepairRequestContracts(:VesselId,:AvailabilityId,:ContractId,:WorkPackId);
CREATE SERVICE "PNG_WorkItemAttachmentDownload" TYPE 'RAW' AS select _PNG.WorkItemAttachmentDownload(:RowId);
CREATE SERVICE "PNG_WorkItemLibraryApplicableVessels" TYPE 'SOAP' AS call _PNG.WorkItemLibraryApplicableVessels(:WorkItemLibraryId,:OrderBy);
COMMENT ON SERVICE "PNG_WorkItemLibraryApplicableVessels" IS '2013-07-05 RJM Created';
CREATE SERVICE "PNG_WorkItemLibraryGrid" TYPE 'SOAP' AS call _PNG.WorkItemLibraryGrid(:WorkItemLibraryType,:VesselList,:OrderBy);
CREATE SERVICE "PNG_WorkItemLibraryHeader" TYPE 'SOAP' AS call _PNG.WorkItemsSpecificationsHeader(:RowId,:Type,:Module);
CREATE SERVICE "PNG_WorkItemLibrarySpecification" TYPE 'RAW' AS call _PNG.WorkItemLibrarySpecification(:SpecificationId);
COMMENT ON SERVICE "PNG_WorkItemLibrarySpecification" IS '2013-07-08 RJM created';
CREATE SERVICE "PNG_WorkItemLibrarySpecificationRevisions" TYPE 'SOAP' AS call _PNG.WorkItemLibrarySpecificationRevisions(:Specificationid);
COMMENT ON SERVICE "PNG_WorkItemLibrarySpecificationRevisions" IS '2013.07.05 rbh created';
CREATE SERVICE "PNG_WorkItemLibrarySpecUsage" TYPE 'SOAP' AS call _PNG.WorkItemLibrarySpecUsage(:SpecificationId,:OrderBy);
CREATE SERVICE "PNG_WorkItemLibraryTypeList" TYPE 'SOAP' AS call _PNG.WorkItemLibraryTypeList();
COMMENT ON SERVICE "PNG_WorkItemLibraryTypeList" IS '2013-07-03 RJM Created';
CREATE SERVICE "PNG_WorkItemsPartOrder" TYPE 'SOAP' AS call _PNG.WorkItemsPartOrder(:RowId);
CREATE SERVICE "PNG_WorkItemsPartOrderDates" TYPE 'SOAP' AS call _PNG.WorkItemsPartOrderDate(:RowId,:AddOrder);
CREATE SERVICE "PNG_WorkItemsPartsEditDialog" TYPE 'SOAP' AS call _PNG.WorkItemsPartsEditDialog(:PartRowId,:ApplicationId);
CREATE SERVICE "PNG_WorkItemsPartsEditSave" TYPE 'SOAP' AS call _PNG.WorkItemsPartsEditSave(:PartRowId,:EquipmentRowId,:NavyStockNumber,:PartNumber,:PartDescription,:SupplierName,:CageCode,:QuantityRequired,:UnitCost,:DateRequired,:SourceOfSupply,:UnitOfMeasure);
CREATE SERVICE "PNG_WorkItemsPartsOrderEditDialog" TYPE 'SOAP' AS call _PNG.WorkItemsPartsOrderEditDialog(:PartRowId);
CREATE SERVICE "PNG_WorkItemsPartsOrderEditSave" TYPE 'SOAP' AS call _PNG.WorkItemsPartsOrderEditSave(:PartRowId,:CageCode,:Quantity,:UnitCost,:DateRequired,:SourceOfSupply);
CREATE SERVICE "PNG_WorkItemsPartsOrderList" TYPE 'SOAP' AS call _PNG.WorkItemsPartsOrderList(:RowId);
CREATE SERVICE "PNG_WorkItemsPartsOrderMOR" TYPE 'SOAP' AS call _PNG.WorkItemsPartsOrderMOR(:RowId);
COMMENT ON SERVICE "PNG_WorkItemsPartsOrderMOR" IS '2015.05.13 RJM created';
CREATE SERVICE "PNG_WorkItemsPartsOrderSave" TYPE 'SOAP' AS call _PNG.WorkItemsPartsOrderSave(:RowId,:ShippingAddress,:ShippingInstructions);
CREATE SERVICE "PNG_WorkItemsPartsOrderSubmit" TYPE 'SOAP' AS call _PNG.WorkItemsPartsOrderSubmit(:RowId);
COMMENT ON SERVICE "PNG_WorkItemsPartsOrderSubmit" IS '20150417 RJM. :RowId is from the Order Dialog dropdown, ex.VesselId=18,WorkItemId=3125362,OrderId=1. Returns RowId, Success (bit), ErrorMessage LONG VARCHAR ';
CREATE SERVICE "PNG_WorkItemsPartsRemove" TYPE 'SOAP' AS call _PNG.WorkItemsPartsRemove(:PartRowId);
CREATE SERVICE "PNG_WorkItemsSpecificationsImport" TYPE 'SOAP' AS call _PNG.WorkItemsSpecificationsImport(:RowId,:SpecificationRowIds,:AllowOverwrite,:Overwrite);
CREATE SERVICE "PNG_WorkRequestDetailAttachments" TYPE 'SOAP' AS call _PNG.WorkRequestAttachments(:VesselId,:WorkRequestIds);
CREATE SERVICE "PNG_WorkRequestDetailItemStatus" TYPE 'SOAP' AS call _PNG.WorkRequestGeneral(:VesselId,:WorkRequestId);
CREATE SERVICE "PNG_WorkRequestDetailShip" TYPE 'SOAP' AS call _PNG.WorkRequestVessel(:VesselId,:WorkRequestId);
CREATE SERVICE "PNG_WorkRequestItemsLoad" TYPE 'SOAP' AS call _PNG.WorkRequestItems(:NodeId,:OrderBy,:IsLimited,:Base64Encode);
CREATE SERVICE "PNG_WorkRequestNarrativeDownload" TYPE 'RAW' AS select _PNG.WorkRequestNarrativeDownload(:VesselId,:WorkRequestId) as DocumentData;
CREATE SERVICE "resolveErrorCode" TYPE 'SOAP' AS call ECO.DB_ResolveErrorCode(:ErrorCode);
CREATE SERVICE "SAMM_ModulesLoad" TYPE 'SOAP' AS call _SWA.ModulesLoad();
CREATE SERVICE "SEAS_AdditionalCMSTestsLoad" TYPE 'SOAP' AS call _SEAS.AdditionalCMSTestsLoad(:VesselId,:EquipmentId,:TestResultId,:LabId,:SampleId,:Sort,:MaxResults);
CREATE SERVICE "SEAS_AdditionalCMSTestsNarrativeLoad" TYPE 'SOAP' AS select _SEAS.TestResultNarrativeLoad(:VesselId,:EquipmentId,:TestResultId) as Narrative from DUMMY;
CREATE SERVICE "SEAS_ChemistryAnalysis" TYPE 'SOAP' AS call _SEAS.VesselsChemistryAnalysisResults(:VesselId,:LogId,:EquipmentId,:Month);
CREATE SERVICE "SEAS_ChemistryAnalysisChartData" TYPE 'SOAP' AS call _SEAS.ChemistryAnalysisChartData(:VesselId,:LogId,:EquipmentId,:Month);
CREATE SERVICE "SEAS_ChemistryAnalysisEquipmentReportLogs" TYPE 'SOAP' AS call _SEAS.ChemistryAnalysisEquipmentReportLogs(:VesselId,:LogId,:EquipmentId,:Month);
CREATE SERVICE "SEAS_ChemistryAnalysisEquipmentReportVariables" TYPE 'SOAP' AS call _SEAS.ChemistryAnalysisEquipmentReportVariables(:VesselId,:LogId,:EquipmentId,:Month);
CREATE SERVICE "SEAS_ChemistryAnalysisTree" TYPE 'SOAP' AS call _SEAS.VesselsChemistryAnalysisTree(:VesselId,:Month);
CREATE SERVICE "SEAS_ChemistryCanCompleteAnalysis" TYPE 'SOAP' AS call _SEAS.ChemistryCanCompleteAnalysis(:VesselId,:Month);
CREATE SERVICE "SEAS_ChemistryCommentsSave" TYPE 'SOAP' AS call _SEAS.ChemistryCommentsSave(:VesselId,:LogId,:EquipmentId,:Month,:Priority,:Comments,:Manual);
CREATE SERVICE "SEAS_ChemistryCompleteAnalysis" TYPE 'SOAP' AS call _SEAS.ChemistryCompleteAnalysis(:VesselId,:Month,:CC,:BCC,:Subject,:Message);
CREATE SERVICE "SEAS_ChemistryDisplaySettings" TYPE 'SOAP' AS call _SEAS.ChemistryDisplaySettings();
CREATE SERVICE "SEAS_ChemistryDisplaySettingsSave" TYPE 'SOAP' AS call _SEAS.ChemistryDisplaySettingsSave(:Panel,:Size);
CREATE SERVICE "SEAS_ChemistryHistoricalComments" TYPE 'SOAP' AS call _SEAS.VesselsChemistryAnalysisHistoricalResults(:VesselId,:LogId,:EquipmentId,:Month);
CREATE SERVICE "SEAS_ChemistryMessageGenerate" TYPE 'SOAP' AS call _SEAS.ChemistryMessageGenerate(:VesselId,:Month);
CREATE SERVICE "SEAS_ChemistryMessagingBodySave" TYPE 'SOAP' AS call _SEAS.ChemistryMessaging(:MessageText);
CREATE SERVICE "SEAS_ChemistryMessagingEmailsSave" TYPE 'SOAP' AS call _SEAS.ChemistryMessagingEmailsSave(:VesselId,:VesselEmails);
CREATE SERVICE "SEAS_ChemistryMessagingMessage" TYPE 'SOAP' AS call _SEAS.ChemistryMessagingMessage();
CREATE SERVICE "SEAS_ChemistryMessagingReplacementsList" TYPE 'SOAP' AS call _SEAS.ChemistryMessagingReplacementsList();
CREATE SERVICE "SEAS_ChemistryMessagingReplacementsSave" TYPE 'SOAP' AS call _SEAS.ChemistryMessagingReplacementsSave(:ReplacementId,:ReplacementValue);
CREATE SERVICE "SEAS_ChemistryMessagingVesselsList" TYPE 'SOAP' AS call _SEAS.ChemistryMessagingVesselsList(:Sort);
CREATE SERVICE "SEAS_ChemistryOverdueMonths" TYPE 'SOAP' AS call _SEAS.ChemistryOverdueMonths(:VesselId,:Month);
CREATE SERVICE "SEAS_ChemistryPriorities" TYPE 'SOAP' AS call _SEAS.ChemistryPriorities();
CREATE SERVICE "SEAS_ChemistryPropertiesLoad" TYPE 'SOAP' AS call _SEAS.ChemistryPropertiesLoad(:VesselId,:Month);
CREATE SERVICE "SEAS_ChemistryPropertiesMessage" TYPE 'SOAP' AS call _SEAS.ChemistryPropertiesMessage(:VesselId,:Month);
CREATE SERVICE "SEAS_ChemistryQuickMessageData" TYPE 'SOAP' AS call _SEAS.ChemistryQuickMessageData(:VesselId);
CREATE SERVICE "SEAS_ChemistryQuickMessageSend" TYPE 'SOAP' AS call _SEAS.ChemistryQuickMessageSend(:VesselId,:Month,:CC,:BCC,:Subject,:Body);
CREATE SERVICE "SEAS_ChemistryRelinquishOwnership" TYPE 'SOAP' AS call _SEAS.ChemistryRelinquishOwnership(:VesselId,:Month);
CREATE SERVICE "SEAS_ChemistryReportStatusUpdate" TYPE 'SOAP' AS call _SEAS.ChemistryReportStatusUpdate(:VesselId,:Month,:Status);
CREATE SERVICE "SEAS_ChemistryStandardCommentDelete" TYPE 'SOAP' AS call _SEAS.ChemistryStandardCommentDelete(:CommentId);
CREATE SERVICE "SEAS_ChemistryStandardComments" TYPE 'SOAP' AS call _SEAS.ChemistryStandardComments(:Sort,:Filter);
CREATE SERVICE "SEAS_ChemistryStandardCommentUpdate" TYPE 'SOAP' AS call _SEAS.ChemistryStandardCommentUpdate(:CommentId,:Comment,:HotKey);
CREATE SERVICE "SEAS_ChemistryTakeOwnership" TYPE 'SOAP' AS call _SEAS.ChemistryTakeOwnership(:VesselId,:Month);
CREATE SERVICE "SEAS_ChemistryToteboardCurrent" TYPE 'SOAP' AS call _SEAS.ChemistryToteboardCurrent(:Sort,:Filter);
CREATE SERVICE "SEAS_ChemistryToteboardMonthly" TYPE 'SOAP' AS call _SEAS.ChemistryToteboardMonthly(:Sort,:Filter);
CREATE SERVICE "SEAS_ChemistryToteboardTotals" TYPE 'SOAP' AS call _SEAS.ChemistryToteboardTotals();
CREATE SERVICE "SEAS_ChemistryWatchesClear" TYPE 'SOAP' AS call _SEAS.ChemistryWatchesClear(:VesselId);
CREATE SERVICE "SEAS_ChemistryWatchesLogs" TYPE 'SOAP' AS call _SEAS.ChemistryWatchesLogs(:VesselId,:Sort);
CREATE SERVICE "SEAS_ChemistryWatchesUpdate" TYPE 'SOAP' AS call _SEAS.ChemistryWatchesUpdate(:VesselId,:LogId,:Alarm);
CREATE SERVICE "SEAS_ChemistryWatchesVessels" TYPE 'SOAP' AS call _SEAS.ChemistryWatchesVessels();
CREATE SERVICE "SEAS_ChemistryWatchSet" TYPE 'SOAP' AS call _SEAS.ChemistryWatchSet(:VesselId,:Month);
CREATE SERVICE "SEAS_ChemistryWatchUnset" TYPE 'SOAP' AS call _SEAS.ChemistryWatchUnset(:VesselId,:Month);
CREATE SERVICE "SEAS_ExpertSystemDiscrepenciesLoad" TYPE 'SOAP' AS call _SEAS.ExpertSystemDiscrepenciesLoad(:VesselId,:EquipmentId,:TestId,:Sort,:ExpertSystemResultsId);
CREATE SERVICE "SEAS_ExpertSystemRecommendationsLoad" TYPE 'SOAP' AS call _SEAS.ExpertSystemRecommendationsLoad(:VesselId,:EquipmentId,:TestId,:Sort,:ExpertSystemResultsId);
CREATE SERVICE "SEAS_ExpertSystemScreeningLoad" TYPE 'SOAP' AS call _SEAS.ExpertSystemScreeningLoad(:VesselId,:EquipmentId,:TestId,:ExpertSystemResultsId,:PrevOrNext);
CREATE SERVICE "SEAS_FuelOilAnalysisGetCheckedVariables" TYPE 'SOAP' AS call _SEAS.FuelOilAnalysisGetCheckedVariables(:VariableSet);
CREATE SERVICE "SEAS_FuelOilAnalysisGetVariableSet" TYPE 'SOAP' AS call _SEAS.FuelOilAnalysisGetVariableSet();
CREATE SERVICE "SEAS_FuelOilAnalysisSaveCheckedVariables" TYPE 'SOAP' AS call _SEAS.FuelOilAnalysisSaveCheckedVariables(:VariableSet,:CheckedVariables);
CREATE SERVICE "SEAS_FuelOilAnalysisSaveVariableSet" TYPE 'SOAP' AS call _SEAS.FuelOilAnalysisSaveVariableSet(:VariableSet);
CREATE SERVICE "SEAS_FuelOilCommentsCurrentPriority" TYPE 'SOAP' AS call _SEAS.FuelOilCommentsCurrentPriority(:VesselId,:EquipmentId,:TestResultId,:LabId,:SampleId);
CREATE SERVICE "SEAS_FuelOilCommentsPriorities" TYPE 'SOAP' AS call _SEAS.FuelOilCommentsPriorities();
CREATE SERVICE "SEAS_FuelOilCustomVariables" TYPE 'SOAP' AS call _SEAS.FuelOilCustomVariables(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId);
CREATE SERVICE "SEAS_FuelOilCustomVariablesUpdate" TYPE 'SOAP' AS call _SEAS.FuelOilCustomVariablesUpdate(:Variables);
CREATE SERVICE "SEAS_FuelOilFuelOilTypeDelete" TYPE 'SOAP' AS call _SEAS.FuelOilFuelOilTypeDelete(:FuelOilTypeId);
CREATE SERVICE "SEAS_FuelOilGenerateMessage" TYPE 'SOAP' AS call _SEAS.FuelOilGenerateMessage(:VesselId);
CREATE SERVICE "SEAS_FuelOilGetComments" TYPE 'SOAP' AS call _SEAS.FuelOilGetComments(:VesselId,:EquipmentId,:TestResultId,:LabId,:SampleId);
CREATE SERVICE "SEAS_FuelOilGetCommentsSizes" TYPE 'SOAP' AS call _SEAS.FuelOilGetCommentsSizes();
CREATE SERVICE "SEAS_FuelOilHistoricalAnalysis" TYPE 'SOAP' AS call _SEAS.FuelOilHistoricalAnalysis(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId);
CREATE SERVICE "SEAS_FuelOilLabMessageCreate" TYPE 'SOAP' AS call _SEAS.FuelOilLabMessageCreate(:VesselId,:EquipmentId,:TestResultId,:LabId,:SampleId);
CREATE SERVICE "SEAS_FuelOilLabMessageSend" TYPE 'SOAP' AS call _SEAS.FuelOilLabMessageSend(:VesselId,:EquipmentId,:TestResultId,:LabId,:SampleId,:MessageCC,:MessageSubject,:MessageText);
CREATE SERVICE "SEAS_FuelOilLoadUserInfo" TYPE 'SOAP' AS call _SEAS.FuelOilLoadUserInfo();
CREATE SERVICE "SEAS_FuelOilMessagingAddressesSave" TYPE 'SOAP' AS call _SEAS.FuelOilMessagingAddressesSave(:VesselId,:VesselAddresses);
CREATE SERVICE "SEAS_FuelOilMessagingEmailsSave" TYPE 'SOAP' AS call _SEAS.FuelOilMessagingEmailsSave(:VesselId,:VesselEmails);
CREATE SERVICE "SEAS_FuelOilMessagingLabEmail" TYPE 'SOAP' AS call _SEAS.FuelOilMessagingLabEmail();
CREATE SERVICE "SEAS_FuelOilMessagingLabEmailSave" TYPE 'SOAP' AS call _SEAS.FuelOilMessagingLabEmailSave(:LabEmail);
CREATE SERVICE "SEAS_FuelOilMessagingMessage" TYPE 'SOAP' AS call _SEAS.FuelOilMessagingMessage();
CREATE SERVICE "SEAS_FuelOilMessagingMessageSave" TYPE 'SOAP' AS call SEAS.FuelOilMessagingMessageSave(:MessageText);
CREATE SERVICE "SEAS_FuelOilMessagingReplacementsList" TYPE 'SOAP' AS call _SEAS.FuelOilMessagingReplacementsList(:Sort);
CREATE SERVICE "SEAS_FuelOilMessagingReplacementsSave" TYPE 'SOAP' AS call _SEAS.FuelOilMessagingReplacementsSave(:ReplacementId,:ReplacementValue);
CREATE SERVICE "SEAS_FuelOilMessagingVesselsList" TYPE 'SOAP' AS call _SEAS.FuelOilMessagingVesselsList(:Sort);
CREATE SERVICE "SEAS_FuelOilPortAdd" TYPE 'SOAP' AS call _SEAS.FuelOilPortAdd(:FuelOilPortName);
CREATE SERVICE "SEAS_FuelOilPortDelete" TYPE 'SOAP' AS call _SEAS.FuelOilPortDelete(:FuelOilPortId);
CREATE SERVICE "SEAS_FuelOilPortEdit" TYPE 'SOAP' AS call _SEAS.FuelOilPortEdit(:FuelOilPortId,:FuelOilPortName);
CREATE SERVICE "SEAS_FuelOilPorts" TYPE 'SOAP' AS call _SEAS.FuelOilPorts(:Sort,:Filter);
CREATE SERVICE "SEAS_FuelOilPreferencesLoad" TYPE 'SOAP' AS call _SEAS.FuelOilPreferencesLoad();
CREATE SERVICE "SEAS_FuelOilPreferencesUpdate" TYPE 'SOAP' AS call _SEAS.FuelOilPreferencesUpdate(:Variables,:SampleRangeType,:SampleRangeValue,:MajorGridLines,:MinorGridLines);
CREATE SERVICE "SEAS_FuelOilPreferencesVariableTree" TYPE 'SOAP' AS call _SEAS.FuelOilPreferencesVariableTree();
CREATE SERVICE "SEAS_FuelOilPropertiesMessage" TYPE 'SOAP' AS call _SEAS.FuelOilPropertiesMessage(:VesselId,:EquipmentId,:TestResultId,:LabId,:SampleId);
CREATE SERVICE "SEAS_FuelOilSampleDetails" TYPE 'SOAP' AS call _SEAS.FuelOilSampleDetails(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId);
CREATE SERVICE "SEAS_FuelOilSampleProperties" TYPE 'SOAP' AS call _SEAS.FuelOilSampleProperties(:VesselId,:EquipmentId,:TestResultId,:LabId,:SampleId);
CREATE SERVICE "SEAS_FuelOilSampleStatusUpdate" TYPE 'SOAP' AS call _SEAS.FuelOilSampleStatusUpdate(:LabId,:SampleId,:NewStatus);
CREATE SERVICE "SEAS_FuelOilSampleVariableIncludeInMessage" TYPE 'SOAP' AS call _SEAS.FuelOilSampleVariableIncludeInMessage(:LabId,:SampleId,:VariableId,:IncludeInMessage);
CREATE SERVICE "SEAS_FuelOilSaveAlarms" TYPE 'SOAP' AS call _SEAS.FuelOilSaveAlarms(:VesselId,:EquipmentId,:TestResultId,:LabId,:SampleId,:Alarms);
CREATE SERVICE "SEAS_FuelOilSaveAnalysis" TYPE 'SOAP' AS call _SEAS.FuelOilSaveAnalysis(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId,:AnalystComments,:Priority);
CREATE SERVICE "SEAS_FuelOilSaveOnAnalysisComplete" TYPE 'SOAP' AS call _SEAS.FuelOilSaveOnAnalysisComplete(:VesselId,:EquipmentId,:TestResultId,:LabId,:SampleId,:AnalystComments,:Priority,:DontAskAgain);
CREATE SERVICE "SEAS_FuelOilSaveUserInfo" TYPE 'SOAP' AS call _SEAS.FuelOilSaveUserInfo(:UserEmail,:UserOffice,:UserPhone);
CREATE SERVICE "SEAS_FuelOilSendMessage" TYPE 'SOAP' AS call _SEAS.FuelOilSendMessage(:VesselId,:MessageCC,:Samples,:SampleCount,:AlertCount,:Message);
CREATE SERVICE "SEAS_FuelOilStandardCommentDelete" TYPE 'SOAP' AS call _SEAS.FuelOilStandardCommentDelete(:CommentId);
CREATE SERVICE "SEAS_FuelOilStandardComments" TYPE 'SOAP' AS call _SEAS.FuelOilStandardComments(:Filter,:Sort);
CREATE SERVICE "SEAS_FuelOilStandardCommentUpdate" TYPE 'SOAP' AS call _SEAS.FuelOilStandardCommentUpdate(:CommentId,:Comment,:HotKey);
CREATE SERVICE "SEAS_FuelOilStandardSet" TYPE 'SOAP' AS call _SEAS.FuelOilStandardSet(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId);
CREATE SERVICE "SEAS_FuelOilStandardSlate" TYPE 'SOAP' AS call _SEAS.FuelOilStandardSlate(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId);
CREATE SERVICE "SEAS_FuelOilSubPortAdd" TYPE 'SOAP' AS call _SEAS.FuelOilSubPortAdd(:FuelOilPortId,:FuelOilSubPortName);
CREATE SERVICE "SEAS_FuelOilSubPortDelete" TYPE 'SOAP' AS call _SEAS.FuelOilSubPortDelete(:FuelOilPortId,:FuelOilSubPortId);
CREATE SERVICE "SEAS_FuelOilSubPortEdit" TYPE 'SOAP' AS call _SEAS.FuelOilSubPortEdit(:FuelOilPortId,:FuelOilSubPortId,:FuelOilSubPortName);
CREATE SERVICE "SEAS_FuelOilSubPorts" TYPE 'SOAP' AS call _SEAS.FuelOilSubPorts(:Sort,:Filter);
CREATE SERVICE "SEAS_FuelOilTestDelete" TYPE 'SOAP' AS call _SEAS.FuelOilTestDelete(:LabId,:SampleId);
CREATE SERVICE "SEAS_FuelOilTestPriorityUpdate" TYPE 'SOAP' AS call _SEAS.FuelOilTestPriorityUpdate(:VesselId,:TestResultId,:EquipmentId,:LabId,:SampleId,:Priority);
CREATE SERVICE "SEAS_FuelOilTestProperties" TYPE 'SOAP' AS call _SEAS.FuelOilTestProperties(:VesselId,:EquipmentId,:TestResultId,:LabId,:SampleId);
CREATE SERVICE "SEAS_FuelOilTests" TYPE 'SOAP' AS call _SEAS.FuelOilTests(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId);
CREATE SERVICE "SEAS_FuelOilTestSlatesDelete" TYPE 'SOAP' AS call _SEAS.FuelOilTestSlatesDelete(:TestSlateId);
CREATE SERVICE "SEAS_FuelOilTestSlatesEdit" TYPE 'SOAP' AS call _SEAS.FuelOilTestSlatesEdit(:TestSlateId);
CREATE SERVICE "SEAS_FuelOilTestSlatesList" TYPE 'SOAP' AS call _SEAS.FuelOilTestSlatesList(:Sort,:Filter);
CREATE SERVICE "SEAS_FuelOilTestSlatesSave" TYPE 'SOAP' AS call _SEAS.FuelOilTestSlatesSave(:TestSlateId,:TestSlateName,:TestSlateDescription,:TestSlateVariables);
CREATE SERVICE "SEAS_FuelOilTestVariablesCheck" TYPE 'SOAP' AS call _SEAS.FuelOilTestVariablesCheck(:VariableLabel);
CREATE SERVICE "SEAS_FuelOilTestVariablesDelete" TYPE 'SOAP' AS call _SEAS.FuelOilTestVariablesDelete(:VariableId);
CREATE SERVICE "SEAS_FuelOilTestVariablesEdit" TYPE 'SOAP' AS call _SEAS.FuelOilTestVariablesEdit(:VariableId);
CREATE SERVICE "SEAS_FuelOilTestVariablesList" TYPE 'SOAP' AS call _SEAS.FuelOilTestVariablesList(:Sort,:Filter);
CREATE SERVICE "SEAS_FuelOilTestVariablesSave" TYPE 'SOAP' AS call _SEAS.FuelOilTestVariablesSave(
:VariableId,
:VariableLabel,
:VariableDescription,
:VariableUnits,
:VariableTestId,
:VariablePrecision,
:VariableSensitivity,
:VariableActive);
CREATE SERVICE "SEAS_FuelOilTestVariablesUnits" TYPE 'SOAP' AS call _SEAS.FuelOilTestVariablesUnits();
CREATE SERVICE "SEAS_FuelOilTestVariablesUnitsAdd" TYPE 'SOAP' AS call _SEAS.LubeOilTestVariablesUnitsAdd(:UnitsTitle);
CREATE SERVICE "SEAS_FuelOilTestVariablesUnitsDelete" TYPE 'SOAP' AS call _SEAS.LubeOilTestVariablesUnitsDelete(:UnitsId);
CREATE SERVICE "SEAS_FuelOilToteboardReadyForMessage" TYPE 'SOAP' AS call _SEAS.FuelOilToteboardReadyForMessage(:Sort);
CREATE SERVICE "SEAS_FuelOilToteboardRequiresAnalysis" TYPE 'SOAP' AS call _SEAS.FuelOilToteboardRequiresAnalysis(:Sort);
CREATE SERVICE "SEAS_FuelOilToteboardTotals" TYPE 'SOAP' AS call _SEAS.FuelOilToteboardTotals();
CREATE SERVICE "SEAS_FuelOilTypeCheck" TYPE 'SOAP' AS call _SEAS.FuelOilTypeCheck(:FuelOilType);
CREATE SERVICE "SEAS_FuelOilTypeEdit" TYPE 'SOAP' AS call _SEAS.FuelOilTypeEdit(:FuelOilTypeId);
CREATE SERVICE "SEAS_FuelOilTypesList" TYPE 'SOAP' AS call _SEAS.FuelOilTypesList(:Sort,:Filter);
CREATE SERVICE "SEAS_FuelOilUserNotesLoad" TYPE 'SOAP' AS call _SEAS.FuelOilUserNotesLoad();
CREATE SERVICE "SEAS_FuelOilUserNotesSave" TYPE 'SOAP' AS call _SEAS.FuelOilUserNotesSave(:Notes);
CREATE SERVICE "SEAS_FuelOilVariableProperties" TYPE 'SOAP' AS call _SEAS.FuelOilVariableProperties(:Variableid);
CREATE SERVICE "SEAS_FuelOilVariables" TYPE 'SOAP' AS call _SEAS.FuelOilVariables(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId);
CREATE SERVICE "SEAS_FuelOilVariableValues" TYPE 'SOAP' AS call _SEAS.FuelOilVariableValues(:VesselId,:EquipmentId,:TestResultId,:LabId,:SampleId);
CREATE SERVICE "SEAS_FuelOilVessels" TYPE 'SOAP' AS call _SEAS.FuelOilVessels();
CREATE SERVICE "SEAS_GetNotes" TYPE 'SOAP' AS select _SEAS.UserNotesLoad() as Notes from DUMMY;
CREATE SERVICE "SEAS_LubeOilCancelFerrogram" TYPE 'SOAP' AS call _SEAS.LubeOilCancelFerrogram(:LabId,:SampleId);
CREATE SERVICE "SEAS_LubeOilCommentsCurrentPriority" TYPE 'SOAP' AS call _SEAS.LubeOilCommentsCurrentPriority(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId);
CREATE SERVICE "SEAS_LubeOilCommentsHotKeys" TYPE 'SOAP' AS call _SEAS.LubeOilCommentsHotKeys();
CREATE SERVICE "SEAS_LubeOilCommentsPriorities" TYPE 'SOAP' AS call _SEAS.LubeOilCommentsPriorities();
CREATE SERVICE "SEAS_LubeOilConfigSMPGrid" TYPE 'SOAP' AS call _SEAS.LubeOilConfigSMPGrid(:Sort,:Filter);
CREATE SERVICE "SEAS_LubeOilCustomVariables" TYPE 'SOAP' AS call _SEAS.LubeOilCustomVariables(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId);
CREATE SERVICE "SEAS_LubeOilCustomVariablesUpdate" TYPE 'SOAP' AS call _SEAS.LubeOilCustomVariablesUpdate(:ShowVariables);
CREATE SERVICE "SEAS_LubeOilEditSourceUpdate" TYPE 'SOAP' AS call _SEAS.LubeOilEditSourceUpdate(:LabId,:SampleId,:VesselId,:EquipmentId,:MeasurementPointId,:Comments);
CREATE SERVICE "SEAS_LubeOilFerrogram" TYPE 'SOAP' AS call _SEAS.LubeOilFerrogram(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId,:FerrogramId);
CREATE SERVICE "SEAS_LubeOilFerrogramData" TYPE 'RAW' AS select _SEAS.LubeOilFerrogramData(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId,:FerrogramId)
  from DUMMY;
CREATE SERVICE "SEAS_LubeOilFerrograms" TYPE 'SOAP' AS call _SEAS.LubeOilFerrograms(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId);
CREATE SERVICE "SEAS_LubeOilFiltersDelete" TYPE 'SOAP' AS call _SEAS.LubeOilFiltersDelete(:FilterId);
CREATE SERVICE "SEAS_LubeOilFiltersEdit" TYPE 'SOAP' AS call _SEAS.LubeOilFiltersEdit(:FilterId);
CREATE SERVICE "SEAS_LubeOilFiltersList" TYPE 'SOAP' AS call _SEAS.LubeOilFiltersList(:Sort,:Filter);
CREATE SERVICE "SEAS_LubeOilFiltersMethods" TYPE 'SOAP' AS call _SEAS.LubeOilFiltersMethods();
CREATE SERVICE "SEAS_LubeOilFiltersMethodsAdd" TYPE 'SOAP' AS call _SEAS.LubeOilFiltersMethodsAdd(:MethodTitle);
CREATE SERVICE "SEAS_LubeOilFiltersMethodsDelete" TYPE 'SOAP' AS call _SEAS.LubeOilFiltersMethodsDelete(:MethodId);
CREATE SERVICE "SEAS_LubeOilFiltersSave" TYPE 'SOAP' AS call _SEAS.LubeOilFiltersSave(:FilterId,:FilterName,:FilterTypeId,:FilterMethodId,:FilterRating);
CREATE SERVICE "SEAS_LubeOilFiltersTypes" TYPE 'SOAP' AS call _SEAS.LubeOilFiltersTypes();
CREATE SERVICE "SEAS_LubeOilFiltersTypesAdd" TYPE 'SOAP' AS call _SEAS.LubeOilFiltersTypesAdd(:TypeTitle);
CREATE SERVICE "SEAS_LubeOilFiltersTypesDelete" TYPE 'SOAP' AS call _SEAS.LubeOilFiltersTypesDelete(:TypeId);
CREATE SERVICE "SEAS_LubeOilGenerateMessage" TYPE 'SOAP' AS call _SEAS.LubeOilGenerateMessage(:VesselId);
CREATE SERVICE "SEAS_LubeOilGetComments" TYPE 'SOAP' AS call _SEAS.LubeOilGetComments(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId);
CREATE SERVICE "SEAS_LubeOilHistoricalAnalysis" TYPE 'SOAP' AS call _SEAS.LubeOilHistoricalAnalysis(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId);
CREATE SERVICE "SEAS_LubeOilLabMessageCreate" TYPE 'SOAP' AS call _SEAS.LubeOilLabMessageCreate(:VesselId,:EquipmentId,:TestResultId,:LabId,:SampleId);
CREATE SERVICE "SEAS_LubeOilLabMessageSend" TYPE 'SOAP' AS call _SEAS.LubeOilLabMessageSend(:VesselId,:EquipmentId,:TestResultId,:LabId,:SampleId,:MessageCC,:MessageSubject,
:MessageText);
CREATE SERVICE "SEAS_LubeOilLoadUserInfo" TYPE 'SOAP' AS call _SEAS.LubeOilLoadUserInfo();
CREATE SERVICE "SEAS_LubeOilLubricantDescriptionCheck" TYPE 'SOAP' AS call _SEAS.LubeOilLubricantDescriptionCheck(:LubricantDescription);
CREATE SERVICE "SEAS_LubeOilLubricantDetails" TYPE 'SOAP' AS call _SEAS.LubeOilLubricantDetails(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId);
CREATE SERVICE "SEAS_LubeOilLubricantPropertiesGrid" TYPE 'SOAP' AS call _SEAS.LubeOilLubricantPropertiesGrid(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId);
CREATE SERVICE "SEAS_LubeOilLubricantPropertiesInfo" TYPE 'SOAP' AS call _SEAS.LubeOilLubricantPropertiesInfo(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId);
CREATE SERVICE "SEAS_LubeOilLubricantsDelete" TYPE 'SOAP' AS call _SEAS.LubeOilLubricantsDelete(:LubricantId);
CREATE SERVICE "SEAS_LubeOilLubricantsEdit" TYPE 'SOAP' AS call _SEAS.LubeOilLubricantsEdit(:LubricantId);
CREATE SERVICE "SEAS_LubeOilLubricantsList" TYPE 'SOAP' AS call _SEAS.LubeOilLubricantsList(:Sort,:Filter);
CREATE SERVICE "SEAS_LubeOilLubricantsManufacturers" TYPE 'SOAP' AS call _SEAS.LubeOilLubricantsManufacturers();
CREATE SERVICE "SEAS_LubeOilLubricantsManufacturersAdd" TYPE 'SOAP' AS call _SEAS.LubeOilLubricantsManufacturersAdd(:ManufacturerTitle);
CREATE SERVICE "SEAS_LubeOilLubricantsManufacturersDelete" TYPE 'SOAP' AS call _SEAS.LubeOilLubricantsManufacturersDelete(:ManufacturerId);
CREATE SERVICE "SEAS_LubeOilLubricantsProperties" TYPE 'SOAP' AS call _SEAS.LubeOilLubricantsProperties(:LubricantId,:Sort);
CREATE SERVICE "SEAS_LubeOilLubricantsSave" TYPE 'SOAP' AS call _SEAS.LubeOilLubricantsSave(:LubricantId,:LubricantDescription,:LubricantTypeId,:LubricantManufacturerId,:LubricantProperties);
CREATE SERVICE "SEAS_LubeOilLubricantsTypes" TYPE 'SOAP' AS call _SEAS.LubeOilLubricantsTypes();
CREATE SERVICE "SEAS_LubeOilLubricantsTypesAdd" TYPE 'SOAP' AS call _SEAS.LubeOilLubricantsTypesAdd(:TypeTitle);
CREATE SERVICE "SEAS_LubeOilLubricantsTypesDelete" TYPE 'SOAP' AS call _SEAS.LubeOilLubricantsTypesDelete(:TypeId);
CREATE SERVICE "SEAS_LubeOilMessagingAddressesSave" TYPE 'SOAP' AS call _SEAS.LubeOilMessagingAddressesSave(:VesselId,:VesselAddresses);
CREATE SERVICE "SEAS_LubeOilMessagingEmailsSave" TYPE 'SOAP' AS call _SEAS.LubeOilMessagingEmailsSave(:VesselId,:VesselEmails);
CREATE SERVICE "SEAS_LubeOilMessagingLabEmail" TYPE 'SOAP' AS call _SEAS.LubeOilMessagingLabEmail();
CREATE SERVICE "SEAS_LubeOilMessagingLabEmailSave" TYPE 'SOAP' AS call _SEAS.LubeOilMessagingLabEmailSave(:LabEmail);
CREATE SERVICE "SEAS_LubeOilMessagingMessage" TYPE 'SOAP' AS call _SEAS.LubeOilMessagingMessage();
CREATE SERVICE "SEAS_LubeOilMessagingMessageSave" TYPE 'SOAP' AS call _SEAS.LubeOilMessagingMessageSave(:MessageText);
CREATE SERVICE "SEAS_LubeOilMessagingReplacementsList" TYPE 'SOAP' AS call _SEAS.LubeOilMessagingReplacementsList(:Sort);
CREATE SERVICE "SEAS_LubeOilMessagingReplacementsSave" TYPE 'SOAP' AS call _SEAS.LubeOilMessagingReplacementsSave(:ReplacementId,:ReplacementValue);
CREATE SERVICE "SEAS_LubeOilMessagingVesselsList" TYPE 'SOAP' AS call _SEAS.LubeOilMessagingVesselsList(:Sort);
CREATE SERVICE "SEAS_LubeOilPreferencesLoad" TYPE 'SOAP' AS call _SEAS.LubeOilPreferencesLoad();
CREATE SERVICE "SEAS_LubeOilPreferencesUpdate" TYPE 'SOAP' AS call _SEAS.LubeOilPreferencesUpdate(:Variables,:SampleRangeType,:SampleRangeValue,:MajorGridLines,:MinorGridLines);
CREATE SERVICE "SEAS_LubeOilPreferencesVariableTree" TYPE 'SOAP' AS call _SEAS.LubeOilPreferencesVariableTree();
CREATE SERVICE "SEAS_LubeOilPropertiesMessage" TYPE 'SOAP' AS call _SEAS.LubeOilPropertiesMessage(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId);
CREATE SERVICE "SEAS_LubeOilRerunExpertSystem" TYPE 'SOAP' AS call _SEAS.LubeOilRerunExpertSystem(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId);
CREATE SERVICE "SEAS_LubeOilSampleDetails" TYPE 'SOAP' AS call _SEAS.LubeOilSampleDetails(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId);
CREATE SERVICE "SEAS_LubeOilSamplePointProperties" TYPE 'SOAP' AS call _SEAS.LubeOilSamplePointProperties(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId);
CREATE SERVICE "SEAS_LubeOilSamplePointsEdit" TYPE 'SOAP' AS call _SEAS.LubeOilSamplePointsEdit(:VesselId,:EquipmentId,:MeasurementPointId);
CREATE SERVICE "SEAS_LubeOilSamplePointsFilters" TYPE 'SOAP' AS call _SEAS.LubeOilSamplePointsFilters();
CREATE SERVICE "SEAS_LubeOilSamplePointsList" TYPE 'SOAP' AS call _SEAS.LubeOilSamplePointsList(:VesselId,:EquipmentId,:Sort,:Filter);
CREATE SERVICE "SEAS_LubeOilSamplePointsLubricants" TYPE 'SOAP' AS call _SEAS.LubeOilSamplePointsLubricants();
CREATE SERVICE "SEAS_LubeOilSamplePointsSave" TYPE 'SOAP' AS call _SEAS.LubeOilSamplePointsSave(:VesselId,:EquipmentId,:MeasurementPointId,:LubricantId,:SampleVolume,:SumpVolume,:PFANumber,:StandardMeasurementPointId,:FilterId,:LubricantUse);
CREATE SERVICE "SEAS_LubeOilSamplePointsSMPs" TYPE 'SOAP' AS call _SEAS.LubeOilSamplePointsSMPs();
CREATE SERVICE "SEAS_LubeOilSampleProperties" TYPE 'SOAP' AS call _SEAS.LubeOilSampleProperties(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId);
CREATE SERVICE "SEAS_LubeOilSampleStatusUpdate" TYPE 'SOAP' AS call _SEAS.LubeOilSampleStatusUpdate(:LabId,:SampleId,:NewStatus);
CREATE SERVICE "SEAS_LubeOilSampleVariableIncludeInMessage" TYPE 'SOAP' AS call _SEAS.LubeOilSampleVariableIncludeInMessage(:LabId,:SampleId,:VariableId,:IncludeInMessage);
CREATE SERVICE "SEAS_LubeOilSaveAnalysis" TYPE 'SOAP' AS call _SEAS.LubeOilSaveAnalysis(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId,:AnalystComments,:Priority);
CREATE SERVICE "SEAS_LubeOilSaveOnAnalysisComplete" TYPE 'SOAP' AS call _SEAS.LubeOilSaveOnAnalysisComplete(:VesselId,:EquipmentId,:TestResultId,:LabId,:SampleId,:AnalystComments,:Priority,:DontAskAgain);
CREATE SERVICE "SEAS_LubeOilSaveUserInfo" TYPE 'SOAP' AS call _SEAS.LubeOilSaveUserInfo(:UserEmail,:UserOffice,:UserPhone);
CREATE SERVICE "SEAS_LubeOilSendMessage" TYPE 'SOAP' AS call _SEAS.LubeOilSendMessage(:VesselId,:MessageCC,:Samples,:SampleCount,:AlertCount,:Message);
CREATE SERVICE "SEAS_LubeOilSMPEditorAlarmsLoad" TYPE 'SOAP' AS call _SEAS.LubeOilSMPEditorAlarmsLoad(:StandardMeasurementPointId);
CREATE SERVICE "SEAS_LubeOilSMPEditorEquipment" TYPE 'SOAP' AS call _SEAS.LubeOilSMPEditorEquipment(:Lubricants);
CREATE SERVICE "SEAS_LubeOilSMPEditorLubricants" TYPE 'SOAP' AS call _SEAS.LubeOilSMPEditorLubricants();
CREATE SERVICE "SEAS_LubeOilSMPEditorMetaRecords" TYPE 'SOAP' AS call _SEAS.LubeOilSMPEditorMetaRecords();
CREATE SERVICE "SEAS_LubeOilSMPEditorSamplePointAlarmDistribution" TYPE 'SOAP' AS call _SEAS.LubeOilSMPEditorSamplePointAlarmDistribution(:VariableId,:SamplePointIds);
CREATE SERVICE "SEAS_LubeOilSMPEditorSamplePointsFit" TYPE 'SOAP' AS call _SEAS.LubeOilSMPEditorSamplePointsFit(:SamplePointIds);
CREATE SERVICE "SEAS_LubeOilSMPEditorSamplePointsLoad" TYPE 'SOAP' AS call _SEAS.LubeOilSMPEditorSamplePointsLoad(:StandardMeasurementPointId,:Sort);
CREATE SERVICE "SEAS_LubeOilSMPEditorSamplePointVariableAlarms" TYPE 'SOAP' AS call _SEAS.LubeOilSMPEditorSamplePointVariableAlarms(:StandardMeasurementPointId,:VariableId);
CREATE SERVICE "SEAS_LubeOilSMPEditorSamplePointVariableDistribution" TYPE 'SOAP' AS call _SEAS.LubeOilSMPEditorSamplePointVariableDistribution(:VesselId,:EquipmentId,:SamplePointId,:VariableId);
CREATE SERVICE "SEAS_LubeOilSMPEditorTestSlates" TYPE 'SOAP' AS call _SEAS.LubeOilSMPEditorTestSlates();
CREATE SERVICE "SEAS_LubeOilSMPEditorValues" TYPE 'SOAP' AS call _SEAS.LubeOilSMPEditorValues(:StandardMeasurementPointId);
CREATE SERVICE "SEAS_LubeOilSMPEditorVariableOptions" TYPE 'SOAP' AS call _SEAS.LubeOilSMPEditorVariableOptions(:StandardMeasurementPointId,:TestSlateId);
CREATE SERVICE "SEAS_LubeOilSMPEditorVessels" TYPE 'SOAP' AS call _SEAS.LubeOilSMPEditorVessels(:Lubricants,:Equipment);
CREATE SERVICE "SEAS_LubeOilSMPEditorVesselsEquipment" TYPE 'SOAP' AS call _SEAS.LubeOilSMPEditorVesselsEquipment(:Lubricants,:Equipment,:Vessels,:Sort);
CREATE SERVICE "SEAS_LubeOilSMPsLoad" TYPE 'SOAP' AS call _SEAS.LubeOilSMPsLoad();
CREATE SERVICE "SEAS_LubeOilStandardCommentDelete" TYPE 'SOAP' AS call _SEAS.LubeOilStandardCommentDelete(:CommentId);
CREATE SERVICE "SEAS_LubeOilStandardComments" TYPE 'SOAP' AS call _SEAS.LubeOilStandardComments(:Filter,:Sort);
CREATE SERVICE "SEAS_LubeOilStandardCommentUpdate" TYPE 'SOAP' AS call _SEAS.LubeOilStandardCommentUpdate(:CommentId,:Comment,:HotKey);
CREATE SERVICE "SEAS_LubeOilStandardSet" TYPE 'SOAP' AS call _SEAS.LubeOilStandardSet(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId);
CREATE SERVICE "SEAS_LubeOilStandardSlate" TYPE 'SOAP' AS call _SEAS.LubeOilStandardSlate(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId);
CREATE SERVICE "SEAS_LubeOilTestDelete" TYPE 'SOAP' AS call _SEAS.LubeOilTestDelete(:LabId,:SampleId);
CREATE SERVICE "SEAS_LubeOilTestPriorityUpdate" TYPE 'SOAP' AS call _SEAS.LubeOilTestPriorityUpdate(:VesselId,:TestResultId,:EquipmentId,:LabId,:SampleId,:Priority);
CREATE SERVICE "SEAS_LubeOilTestProperties" TYPE 'SOAP' AS call _SEAS.LubeOilTestProperties(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId);
CREATE SERVICE "SEAS_LubeOilTests" TYPE 'SOAP' AS call _SEAS.LubeOilTests(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId);
CREATE SERVICE "SEAS_LubeOilTestSlatesDelete" TYPE 'SOAP' AS call _SEAS.LubeOilTestSlatesDelete(:TestSlateId);
CREATE SERVICE "SEAS_LubeOilTestSlatesEdit" TYPE 'SOAP' AS call _SEAS.LubeOilTestSlatesEdit(:TestSlateId);
CREATE SERVICE "SEAS_LubeOilTestSlatesList" TYPE 'SOAP' AS call _SEAS.LubeOilTestSlatesList(:Sort,:Filter);
CREATE SERVICE "SEAS_LubeOilTestSlatesSave" TYPE 'SOAP' AS call _SEAS.LubeOilTestSlatesSave(:TestSlateId,:TestSlateName,:TestSlateDescription,:TestSlateVariables);
CREATE SERVICE "SEAS_LubeOilTestVariablesCheck" TYPE 'SOAP' AS call _SEAS.LubeOilTestVariablesCheck(:VariableLabel);
CREATE SERVICE "SEAS_LubeOilTestVariablesDelete" TYPE 'SOAP' AS call _SEAS.LubeOilTestVariablesDelete(:VariableId);
CREATE SERVICE "SEAS_LubeOilTestVariablesEdit" TYPE 'SOAP' AS call _SEAS.LubeOilTestVariablesEdit(:VariableId);
CREATE SERVICE "SEAS_LubeOilTestVariablesList" TYPE 'SOAP' AS call _SEAS.LubeOilTestVariablesList(:Sort,:Filter);
CREATE SERVICE "SEAS_LubeOilTestVariablesSave" TYPE 'SOAP' AS call _SEAS.LubeOilTestVariablesSave(:VariableId,:VariableLabel,:VariableDescription,:VariableUnits,:VariableTestId,:VariablePrecision,:VariableSensitivity,:VariableActive);
CREATE SERVICE "SEAS_LubeOilTestVariablesUnits" TYPE 'SOAP' AS call _SEAS.LubeOilTestVariablesUnits();
CREATE SERVICE "SEAS_LubeOilTestVariablesUnitsAdd" TYPE 'SOAP' AS call _SEAS.LubeOilTestVariablesUnitsAdd(:UnitsTitle);
CREATE SERVICE "SEAS_LubeOilTestVariablesUnitsDelete" TYPE 'SOAP' AS call _SEAS.LubeOilTestVariablesUnitsDelete(:UnitsId);
CREATE SERVICE "SEAS_LubeOilToteboard" TYPE 'SOAP' AS call _SEAS.LubeOilToteboard(:Vessels,:Sort,:Filter);
CREATE SERVICE "SEAS_LubeOilToteboardAwaitingFerrogram" TYPE 'SOAP' AS call _SEAS.LubeOilToteboardAwaitingFerrogram(:Vessels,:Sort,:Filter);
CREATE SERVICE "SEAS_LubeOilToteboardReadyForMessage" TYPE 'SOAP' AS call _SEAS.LubeOilToteboardReadyForMessage(:Vessels,:Sort,:Filter);
CREATE SERVICE "SEAS_LubeOilToteboardRequiresAnalysis" TYPE 'SOAP' AS call _SEAS.LubeOilToteboardRequiresAnalysis(:Vessels,:Sort,:Filter);
CREATE SERVICE "SEAS_LubeOilToteboardTotals" TYPE 'SOAP' AS call _SEAS.LubeOilToteboardTotals();
CREATE SERVICE "SEAS_LubeOilVariableProperties" TYPE 'SOAP' AS call _SEAS.LubeOilVariableProperties(:VariableId);
CREATE SERVICE "SEAS_LubeOilVariables" TYPE 'SOAP' AS call _SEAS.LubeOilVariables(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId);
CREATE SERVICE "SEAS_LubeOilVariableValues" TYPE 'SOAP' AS call _SEAS.LubeOilVariableValues(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId);
CREATE SERVICE "SEAS_LubeOilVessels" TYPE 'SOAP' AS call _SEAS.LubeOilVessels();
CREATE SERVICE "SEAS_LubeOilVesselSamplePoints" TYPE 'SOAP' AS call _SEAS.LubeOilVesselSamplePoints(:VesselId);
CREATE SERVICE "SEAS_MachineryHistoryEquipmentTree" TYPE 'SOAP' AS call _SEAS.MachineryHistoryEquipmentTree(:VesselId,:EquipmentId);
CREATE SERVICE "SEAS_MachineryHistoryLoad" TYPE 'SOAP' AS call _SEAS.MachineryHistoryLoad(:VesselId,:HSC,:DateRange,:Sort);
CREATE SERVICE "SEAS_MachineryHistoryNarrativeLoad" TYPE 'SOAP' AS select _SEAS.MachineryHistoryNarrativeLoad(:VesselId,:MachineryHistoryId) as MachineryHistoryNarrative from DUMMY;
CREATE SERVICE "SEAS_NavigationIsVibrationEquipment" TYPE 'SOAP' AS select _SEAS.NavigationIsVibrationEquipment(:VesselId,:EquipmentId) as IsVibration from DUMMY;
CREATE SERVICE "SEAS_NavigationMIDsLoad" TYPE 'SOAP' AS call _SEAS.NavigationMIDsLoad();
CREATE SERVICE "SEAS_NavigationTestResultsLoad" TYPE 'SOAP' AS call _SEAS.NavigationTestResultsLoad(:ClassId,:VesselId,:SystemId,:ClassificationId,:EquipmentId,:MID,:SMP,:Sort,:BeginDate,:EndDate,:MaxResults,:Priorities,:TestTypes);
CREATE SERVICE "SEAS_RelatedFuelOilTestsLoad" TYPE 'SOAP' AS call _SEAS.RelatedFuelOilTestsLoad(:VesselId,:EquipmentId,:TestResultId,:LabId,:SampleId,:Sort);
CREATE SERVICE "SEAS_RelatedFuelOilTestsNarrativeLoad" TYPE 'SOAP' AS call _SEAS.RelatedFuelOilTestsNarrativeLoad(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SEAS_RelatedOilTestsLoad" TYPE 'SOAP' AS call _SEAS.LubeOilTestsStandardEquipment(:VesselId,:EquipmentId,:TestId,:LabId,:SampleId,:Sort);
CREATE SERVICE "SEAS_RelatedOilTestsNarrativeLoad" TYPE 'SOAP' AS call _SEAS.LubeOilTestsStandardEquipmentNarrative(:VesselId,:EquipmentId,:TestId);
CREATE SERVICE "SEAS_RelatedVibrationTestNarrativeLoad" TYPE 'SOAP' AS select _SEAS.TestResultNarrativeLoad(:VesselId,:EquipmentId,:TestResultId) as Narrative from DUMMY;
CREATE SERVICE "SEAS_RelatedVibrationTestsLoad" TYPE 'SOAP' AS call _SEAS.VibrationTestsStandardEquipment(:VesselId,:EquipmentId,:TestResultId,:Sort,:MaxResults);
CREATE SERVICE "SEAS_ReportConfigurationLoad_RAW" TYPE 'RAW' AS call _SEAS.ReportConfigurationLoad(:ReportId);
CREATE SERVICE "SEAS_ReportConfigurationSQL_RAW" TYPE 'RAW' AS call _SEAS.ReportConfigurationSQL(:SQL);
CREATE SERVICE "SEAS_ReportGenerate" TYPE 'RAW' AS call _SEAS.ReportGenerate(:ReportId,:Parameters);
CREATE SERVICE "SEAS_ReportListLoad" TYPE 'SOAP' AS call _SEAS.ReportListLoad(:ReportArea);
CREATE SERVICE "SEAS_ReportsList" TYPE 'SOAP' AS call _SEAS.ReportsList(:Roles);
CREATE SERVICE "SEAS_RoleInsert" TYPE 'SOAP' AS call _SEAS.RoleInsert(:Role);
CREATE SERVICE "SEAS_RolesReset" TYPE 'SOAP' AS call _SEAS.RolesReset();
CREATE SERVICE "SEAS_SaveNotes" TYPE 'SOAP' AS call _SEAS.UserNotesSave(:Notes);
CREATE SERVICE "SEAS_ScheduledMaintenanceEquipmentTree" TYPE 'SOAP' AS call _SEAS.MachineryHistoryEquipmentTree(:VesselId,:EquipmentId);
CREATE SERVICE "SEAS_ScheduledMaintenanceLoad" TYPE 'SOAP' AS call _SEAS.ScheduledMaintenanceLoad(:VesselId,:HSC,:Sort);
CREATE SERVICE "SEAS_ScheduledMaintenanceNarrativeLoad" TYPE 'SOAP' AS select _SEAS.ScheduledMaintenanceNarrativeLoad(:VesselId,:MaintenanceProcedureId) as Narrative from DUMMY;
CREATE SERVICE "SEAS_SEASOptionsSave" TYPE 'SOAP' AS call _SEAS.UserPreferencesSave(:UseSingleTabSelect);
CREATE SERVICE "SEAS_TestResultParameterValuesLoad" TYPE 'SOAP' AS call _SEAS.TestResultParameterValuesLoad(:VesselId,:EquipmentId,:TestResultId,:Sort);
CREATE SERVICE "SEAS_UserLogin" TYPE 'SOAP' AS call _SEAS.UserLogin(:UserLoginId);
CREATE SERVICE "SEAS_UserPreferencesLoad" TYPE 'SOAP' AS call _SEAS.UserPreferencesLoad();
CREATE SERVICE "SEAS_VesselEquipmentClassificationsLoad" TYPE 'SOAP' AS call _SEAS.VesselEquipmentClassificationsLoad(:VesselId,:SystemId);
CREATE SERVICE "SEAS_VesselEquipmentLoad" TYPE 'SOAP' AS call _SEAS.VesselEquipmentLoad(:VesselId,:SystemId,:ClassificationId,:MID,:SMP);
CREATE SERVICE "SEAS_VesselEquipmentSystemsLoad" TYPE 'SOAP' AS call _SEAS.VesselEquipmentSystemsLoad(:VesselId,:MID,:SMP);
CREATE SERVICE "SEAS_VesselsClassesLoad" TYPE 'SOAP' AS call _SEAS.VesselsClassesLoad(:AuthorizedVessels);
CREATE SERVICE "SEAS_VesselsLoad" TYPE 'SOAP' AS call _SEAS.VesselsLoad(:AuthorizedVessels,:ClassId,:MID,:SMP);
CREATE SERVICE "SEAS_VibrationAnalysisAddToAverage" TYPE 'SOAP' AS call _SEAS.VibrationAnalysisAddToAverage(:VesselId,:EquipmentId,:TestId);
CREATE SERVICE "SEAS_VibrationAnalysisDescrepancies" TYPE 'SOAP' AS call _SEAS.VibrationAnalysisDescrepancies();
CREATE SERVICE "SEAS_VibrationAnalysisDiagnosis" TYPE 'SOAP' AS call _SEAS.VibrationAnalysisDiagnosis(:VesselId,:EquipmentId);
CREATE SERVICE "SEAS_VibrationAnalysisDiagnosisSeverities" TYPE 'SOAP' AS call _SEAS.VibrationAnalysisDiagnosisSeverities();
CREATE SERVICE "SEAS_VibrationAnalysisDiagnosisSeverity" TYPE 'SOAP' AS call _SEAS.VibrationAnalysisDiagnosisSeverity();
CREATE SERVICE "SEAS_VibrationAnalysisFutureTests" TYPE 'SOAP' AS call _SEAS.VibrationAnalysisFutureTests(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SEAS_VibrationAnalysisManualStatusUpdate" TYPE 'SOAP' AS call _SEAS.VibrationAnalysisManualStatusUpdate(:VesselId,:EquipmentId,:TestId,:StatusId);
CREATE SERVICE "SEAS_VibrationAnalysisPreviousResultsCommentsLoad" TYPE 'SOAP' AS call _SEAS.VibrationAnalysisPreviousResultsCommentsLoad(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SEAS_VibrationAnalysisPreviousResultsLoad" TYPE 'SOAP' AS call _SEAS.VibrationAnalysisPreviousResultsLoad(:VesselId,:EquipmentId,:TestResultId,:Sort);
CREATE SERVICE "SEAS_VibrationAnalysisRecommendationPriority" TYPE 'SOAP' AS call _SEAS.VibrationAnalysisRecommendationPriority();
CREATE SERVICE "SEAS_VibrationAnalysisRecommendations" TYPE 'SOAP' AS call _SEAS.VibrationAnalysisRecommendations(:VesselId,:EquipmentId);
CREATE SERVICE "SEAS_VibrationAverageDataChartTest" TYPE 'SOAP' AS call _SEAS.VibrationAverageDataChartTest(:VesselId,:EquipmentId,:TestId,:Axis,:Range,:Location);
CREATE SERVICE "SEAS_VibrationChartPreferencesLoad" TYPE 'SOAP' AS call _SEAS.VibrationChartPreferencesLoad();
CREATE SERVICE "SEAS_VibrationChartPreferencesUpdate" TYPE 'SOAP' AS call _SEAS.VibrationChartPreferencesUpdate(:SeriesColors,:AverageColors,:ShowMajorLines,:MajorLinesColor,:ShowMinorLines,:MinorLinesColor,:ShowCursor,:DefaultTab);
CREATE SERVICE "SEAS_VibrationConfigOptionsGetDefault" TYPE 'SOAP' AS call _SEAS.VibrationConfigOptionsGetDefault();
CREATE SERVICE "SEAS_VibrationConfigOptionsUpdateDefault" TYPE 'SOAP' AS call _SEAS.VibrationConfigOptionsUpdateDefault(:GraphType,:Location,:Tests,:FreqRange,:AxisSelection,:ShowFreq,:ShowAvg,:ShowExceedance,:AmpAxis,:AmpScaling,:AmpUnits,:SubUnits,:AmpType,:FreqUnits,:FreqScaling,:AmpMin,:AmpMax,:FreqMin,:FreqMax,:PreviousTestOverlayed);
CREATE SERVICE "SEAS_VibrationEditEquipmentGetLocationGrid" TYPE 'SOAP' AS call _SEAS.VibrationEditEquipmentGetLocationGrid(:VesselId,:EquipmentId,:Mid);
CREATE SERVICE "SEAS_VibrationEquipmentEditorGetMidData" TYPE 'SOAP' AS call _SEAS.VibrationEquipmentEditorGetMidData(:Mid);
CREATE SERVICE "SEAS_VibrationEquipmentEditorInitialValues" TYPE 'SOAP' AS call _SEAS.VibrationEquipmentEditorInitialValues(:VesselId,:EquipmentId);
CREATE SERVICE "SEAS_VibrationEquipmentEditorIsBarcodeUnique" TYPE 'SOAP' AS select _SEAS.VibrationEquipmentEditorIsBarcodeUnique(:VesselId,:Barcode) as IsUnique from DUMMY;
CREATE SERVICE "SEAS_VibrationEquipmentEditorLocationsGridUpdate" TYPE 'SOAP' AS call _SEAS.VibrationEquipmentEditorLocationsGridUpdate(:VesselId,:EquipmentId,:RowId,:OrientationId,:Barcode);
CREATE SERVICE "SEAS_VibrationEquipmentEditorUpdate" TYPE 'SOAP' AS call _SEAS.VibrationEquipmentEditorUpdate(:VesselId,:EquipmentId,:Mid,:NominalSpeed,:SpeedVariation,:SWAB);
CREATE SERVICE "SEAS_VibrationIsAddedToAverage" TYPE 'SOAP' AS select _SEAS.VibrationIsAddedToAverage(:VesselId,:EquipmentId,:TestId) as IsAddedToAverage from DUMMY;
CREATE SERVICE "SEAS_VibrationLatestRun" TYPE 'SOAP' AS select _SEAS.VibrationLatestRun(:VesselId,:EquipmentId,:TestResultId) as LatestRun from DUMMY;
CREATE SERVICE "SEAS_VibrationMachineEditorAverageDataGrid" TYPE 'SOAP' AS call _SEAS.VibrationMachineEditorAverageDataGrid(:Mid,:RangeId,:LocationId);
CREATE SERVICE "SEAS_VibrationMachineEditorAverageDataTree" TYPE 'SOAP' AS call _SEAS.VibrationMachineEditorAverageDataTree(:Mid);
CREATE SERVICE "SEAS_VibrationMachineEditorFaults" TYPE 'SOAP' AS call _SEAS.VibrationMachineEditorFaults(:Mid);
CREATE SERVICE "SEAS_VibrationMachineEditorTestPointDefinition" TYPE 'SOAP' AS call _SEAS.VibrationMachineEditorTestPointDefinition(:Mid,:ComponentCode,:OrderId);
CREATE SERVICE "SEAS_VibrationMachineEditorTestPointDefinitionSearchGrid" TYPE 'SOAP' AS call _SEAS.VibrationMachineEditorTestPointDefinitionSearchGrid(:Sort,:Filter);
CREATE SERVICE "SEAS_VibrationMachineEditorTestPointDefinitionTree" TYPE 'SOAP' AS call _SEAS.VibrationMachineEditorTestPointDefinitionTree(:Mid);
CREATE SERVICE "SEAS_VibrationMachineEditorVTAGConfigGetImage" TYPE 'SOAP' AS call _SEAS.VibrationMachineEditorVTAGConfigGetImage(:ImageId);
CREATE SERVICE "SEAS_VibrationMachineEditorVTAGConfigSearchGrid" TYPE 'SOAP' AS call _SEAS.VibrationMachineEditorVTAGConfigSearchGrid(:Sort,:Filter,:Type);
CREATE SERVICE "SEAS_VibrationManualAnalysisRecommendationsRerun" TYPE 'SOAP' AS call _SEAS.VibrationManualAnalysisRecommendationsRerun(:VesselId,:EquipmentId,:TestId);
CREATE SERVICE "SEAS_VibrationMidEditorAddUpdateMid" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorAddUpdateMid(:PreviousMid,:NewMid,:EquipmentDescription);
CREATE SERVICE "SEAS_VibrationMidEditorAverageDataChartAverage" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorAverageDataChartAverage(:Mid,:Range,:Location);
CREATE SERVICE "SEAS_VibrationMidEditorAverageDataChartSigma" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorAverageDataChartSigma(:Mid,:Range,:Location);
CREATE SERVICE "SEAS_VibrationMidEditorAverageDataCurrentRangeAndLocation" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorAverageDataCurrentRangeAndLocation(:Mid);
CREATE SERVICE "SEAS_VibrationMidEditorAverageDataDeleteRow" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorAverageDataDeleteRow(:Mid,:VesselId,:EquipmentId,:TestId,:Axis,:RangeId,:LocationId);
CREATE SERVICE "SEAS_VibrationMidEditorAverageDataRangeOptions" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorAverageDataRangeOptions();
CREATE SERVICE "SEAS_VibrationMidEditorBearingOptions" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorBearingOptions(:Mid);
CREATE SERVICE "SEAS_VibrationMidEditorDemodulationOptions" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorDemodulationOptions(:Mid);
CREATE SERVICE "SEAS_VibrationMidEditorFaultCodeOptions" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorFaultCodeOptions(:Mid);
CREATE SERVICE "SEAS_VibrationMidEditorFaultFrequenciesDeleteRow" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorFaultFrequenciesDeleteRow(:Mid,:RowId);
CREATE SERVICE "SEAS_VibrationMidEditorFaultFrequenciesGetFaultCode" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorFaultFrequenciesGetFaultCode(:FaultId);
CREATE SERVICE "SEAS_VibrationMidEditorFaultFrequenciesGetFaultName" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorFaultFrequenciesGetFaultName(:FaultCode);
CREATE SERVICE "SEAS_VibrationMidEditorFaultFrequenciesUpdateRow" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorFaultFrequenciesUpdateRow(:Mid,:FaultId,:SpeedRatio,:FaultCode,:RowId);
CREATE SERVICE "SEAS_VibrationMidEditorFaultOptions" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorFaultOptions(:Mid);
CREATE SERVICE "SEAS_VibrationMidEditorHighRangeOptions" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorHighRangeOptions(:Mid);
CREATE SERVICE "SEAS_VibrationMidEditorImageIds" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorImageIds(:Mid);
CREATE SERVICE "SEAS_VibrationMidEditorIsMidAvailable" TYPE 'SOAP' AS select _SEAS.VibrationMidEditorIsMidAvailable(:Mid) as IsAvailable from DUMMY;
CREATE SERVICE "SEAS_VibrationMidEditorLocationOptions" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorLocationOptions(:Components);
CREATE SERVICE "SEAS_VibrationMidEditorLowRangeOptions" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorLowRangeOptions(:Mid);
CREATE SERVICE "SEAS_VibrationMidEditorMachineDefinitionSelectedOptions" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorMachineDefinitionSelectedOptions(:Mid);
CREATE SERVICE "SEAS_VibrationMidEditorMachineDefinitionUpdate" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorMachineDefinitionUpdate(:Mid,:MachineName,:ReferenceSpeed,:NormTolerance,:DriverRatio,
:DrivenRatio,:LowRangeSelected,:HighRangeSelected,:DemodulationSelected,:Overlap,:TestConditions);
CREATE SERVICE "SEAS_VibrationMidEditorMachineDefinitionValues" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorMachineDefinitionValues(:Mid);
CREATE SERVICE "SEAS_VibrationMidEditorMachineOrientationOptions" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorMachineOrientationOptions(:Mid);
CREATE SERVICE "SEAS_VibrationMidEditorOrientationOptions" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorOrientationOptions(:Mid);
CREATE SERVICE "SEAS_VibrationMidEditorTestPointDefinitionComponentAdd" TYPE 'SOAP' AS select _SEAS.VibrationMidEditorTestPointDefinitionComponentAdd(:Mid,:ComponentCode) as OrderId from DUMMY;
CREATE SERVICE "SEAS_VibrationMidEditorTestPointDefinitionComponentDelete" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorTestPointDefinitionComponentDelete(:Mid,:ComponentCode,:OrderId);
CREATE SERVICE "SEAS_VibrationMidEditorTestPointDefinitionDeleteRow" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorTestPointDefinitionDeleteRow(:Mid,:ComponentCode,:OrderId,:RowId);
CREATE SERVICE "SEAS_VibrationMidEditorTestPointDefinitionOrientationUpdate" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorTestPointDefinitionOrientationUpdate(:Mid,:ComponentCode,:OrderId,:Orientation);
CREATE SERVICE "SEAS_VibrationMidEditorTestPointDefinitionPickupCodeUpdate" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorTestPointDefinitionPickupCodeUpdate(:Mid,:ComponentCode,:OrderId,:PickupCode);
CREATE SERVICE "SEAS_VibrationMidEditorTestPointGridRowUpdate" TYPE 'SOAP' AS select _SEAS.VibrationMidEditorTestPointGridRowUpdate(:Mid,:ComponentId,:OrderId,:DemodR,:DemodA,:DemodT,:Low,:High,
  :Bearing,:Location,:Orientation,:RowId) as Result from DUMMY;
CREATE SERVICE "SEAS_VibrationMidEditorUploadFile" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorUploadFile(:FileName,:FileType,:FileData);
CREATE SERVICE "SEAS_VibrationMidEditorVTAGConfigDeleteImage" TYPE 'SOAP' AS select _SEAS.VibrationMidEditorVTAGConfigDeleteImage(:ImageId) as Success from DUMMY;
CREATE SERVICE "SEAS_VibrationMidEditorVTAGConfigUpdate" TYPE 'SOAP' AS call _SEAS.VibrationMidEditorVTAGConfigUpdate(:Mid,:SchematicImageId,:DiagramImageId);
CREATE SERVICE "SEAS_VibrationPreferencesLoad" TYPE 'SOAP' AS call _SEAS.VibrationPreferencesLoad();
CREATE SERVICE "SEAS_VibrationRerunExpertSystem" TYPE 'SOAP' AS call _SEAS.VibrationRerunExpertSystem(:VesselId,:EquipmentId,:TestId,:IsAutomatic);
CREATE SERVICE "SEAS_VibrationSetSpeed" TYPE 'SOAP' AS call _SEAS.VibrationSetSpeed(:VesselId,:EquipmentId,:TestId,:PointId,:AxisId,:RangeId,:Speed,:ApplyTo,:RerunExpert);
CREATE SERVICE "SEAS_VibrationSpectrumLoad" TYPE 'SOAP' AS call _SEAS.VibrationSpectrumLoad();
CREATE SERVICE "SEAS_VibrationStandardEquipmentComponents" TYPE 'SOAP' AS call _SEAS.VibrationStandardEquipmentComponents(:StandardEquipmentId,:Sort);
CREATE SERVICE "SEAS_VibrationStandardEquipmentImage" TYPE 'SOAP' AS call _SEAS.VibrationStandardEquipmentImage(:StandardEquipmentId,:ImageType);
CREATE SERVICE "SEAS_VibrationStandardEquipmentLoad" TYPE 'SOAP' AS call _SEAS.VibrationStandardEquipmentLoad(:Sort,:Filter);
CREATE SERVICE "SEAS_VibrationStandardEquipmentMeasurementPointSetupLoad" TYPE 'SOAP' AS call _SEAS.VibrationStandardEquipmentMeasurementPointSetupLoad(:StandardEquipmentId,:MeasurementPointLocationId,:Sort);
CREATE SERVICE "SEAS_VibrationStandardEquipmentMeasurementPointsLoad" TYPE 'SOAP' AS call _SEAS.VibrationStandardEquipmentMeasurementPointsLoad(:StandardEquipmentId,:Sort);
CREATE SERVICE "SEAS_VibrationTestAnalysisComplete" TYPE 'SOAP' AS call _SEAS.VibrationTestAnalysisComplete(:VesselId,:EquipmentId,:TestId);
CREATE SERVICE "SEAS_VibrationTestCommentsUpdate" TYPE 'SOAP' AS call _SEAS.VibrationTestCommentsUpdate(:VesselId,:EquipmentId,:TestId,:Comments);
CREATE SERVICE "SEAS_VibrationTestManualResultsUpdate" TYPE 'SOAP' AS select _SEAS.VibrationTestManualResultsUpdate(:VesselId,:EquipmentId,:TestId,:ManualResults) as Result from DUMMY;
CREATE SERVICE "SEAS_VibrationTestPropertiesDiagnosisLoad" TYPE 'SOAP' AS call _SEAS.VibrationTestPropertiesDiagnosisLoad(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SEAS_VibrationTestPropertiesLoad" TYPE 'SOAP' AS call _SEAS.VibrationTestPropertiesLoad(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SEAS_VibrationTestPropertiesRecommendationsLoad" TYPE 'SOAP' AS call _SEAS.VibrationTestPropertiesRecommendationsLoad(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SEAS_VibrationTestRecommendationUpdate" TYPE 'SOAP' AS call _SEAS.VibrationTestRecommendationUpdate(:VesselId,:EquipmentId,:TestId,:Priority,:RowId,:Recommendation);
CREATE SERVICE "SEAS_VibrationTestResultStandardEquipmentDetailsLoad" TYPE 'SOAP' AS call _SEAS.VibrationTestResultStandardEquipmentDetailsLoad(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SEAS_VibrationTestReviewComplete" TYPE 'SOAP' AS call _SEAS.VibrationTestReviewComplete(:VesselId,:EquipmentId,:TestId);
CREATE SERVICE "SEAS_VibrationTestsAverage" TYPE 'SOAP' AS call _SEAS.VibrationTestsAverage(:VesselId,:EquipmentId,:PointId,:Scale,:Measurement,:Reference,:AUnits,:Peak,:FUnits);
CREATE SERVICE "SEAS_VibrationTestsAverage_RAW" TYPE 'RAW' AS select _SEAS.VibrationTestsAverageJSON(:VesselId,:EquipmentId,:PointId,:Scale,:Measurement,:Reference,:AUnits,:Peak,:FUnits)
  from Dummy;
CREATE SERVICE "SEAS_VibrationTestsDates" TYPE 'SOAP' AS call _SEAS.VibrationTestsDates(:VesselId,:EquipmentId,:TestId);
CREATE SERVICE "SEAS_VibrationTestsDiagnosis" TYPE 'SOAP' AS call _SEAS.VibrationTestsDiagnosis(:VesselId,:EquipmentId,:TestId);
CREATE SERVICE "SEAS_VibrationTestsDiagnosisDelete" TYPE 'SOAP' AS call _SEAS.VibrationTestsDiagnosisDelete(:VesselId,:EquipmentId,:TestId,:ManualDiagnosisId);
CREATE SERVICE "SEAS_VibrationTestsDiagnosisNoFault" TYPE 'SOAP' AS call _SEAS.VibrationTestsDiagnosisNoFault();
CREATE SERVICE "SEAS_VibrationTestsDiagnosisReset" TYPE 'SOAP' AS call _SEAS.VibrationTestsDiagnosisReset(:VesselId,:EquipmentId,:TestId);
CREATE SERVICE "SEAS_VibrationTestsDiagnosisUpdate" TYPE 'SOAP' AS select _SEAS.VibrationTestsDiagnosisUpdate(:VesselId,:EquipmentId,:TestId,:Discrepency,:Severity,:DiagnosisId,:ManualDiagnosisId) as ManualDiagnosisId
  from DUMMY;
CREATE SERVICE "SEAS_VibrationTestsFrequencies" TYPE 'SOAP' AS call _SEAS.VibrationTestsStandardFrequencies(:VesselId,:EquipmentId,:CPM,:Units);
CREATE SERVICE "SEAS_VibrationTestsHeader" TYPE 'SOAP' AS call _SEAS.VibrationTestsHeader(:VesselId,:EquipmentId,:TestId);
CREATE SERVICE "SEAS_VibrationTestsPoints" TYPE 'SOAP' AS call _SEAS.VibrationTestsPoints(:VesselId,:EquipmentId,:TestId);
CREATE SERVICE "SEAS_VibrationTestsRecommendationDelete" TYPE 'SOAP' AS call _SEAS.VibrationTestsRecommendationDelete(:VesselId,:EquipmentId,:TestId,:ManualDiagnosisId);
CREATE SERVICE "SEAS_VibrationTestsRecommendations" TYPE 'SOAP' AS call _SEAS.VibrationTestsRecommendations(:VesselId,:EquipmentId,:TestId);
CREATE SERVICE "SEAS_VibrationTestsResult" TYPE 'SOAP' AS call _SEAS.VibrationTestsResult(:VesselId,:EquipmentId,:TestId);
CREATE SERVICE "SEAS_VibrationTestsResultRefresh" TYPE 'SOAP' AS call _SEAS.VibrationTestsResultRefresh(:VesselId,:EquipmentId,:TestId);
CREATE SERVICE "SEAS_VibrationTestsResultUpdate" TYPE 'SOAP' AS call _SEAS.VibrationTestsResultUpdate(:VesselId,:EquipmentId,:TestId,:Results,:TestComments);
CREATE SERVICE "SEAS_VibrationTestsSpectra" TYPE 'SOAP' AS call _SEAS.VibrationTestsSpectra(:VesselId,:EquipmentId,:TestId,:PointId,:Scale,:Measurement,:Reference,:AUnits,:Peak,:FUnits);
CREATE SERVICE "SEAS_VibrationTestsSpectra_RAW" TYPE 'RAW' AS select _SEAS.VibrationTestsSpectraJSON(:VesselId,:EquipmentId,:TestId,:PointId,:Scale,:Measurement,:Reference,:AUnits,:Peak,:FUnits)
  from Dummy;
CREATE SERVICE "SEAS_VibrationToolsRecalculateAverages" TYPE 'SOAP' AS select _SEAS.VibrationToolsRecalculateAverages(:Mid) as Success from DUMMY;
CREATE SERVICE "SEAS_VibrationToolsResetAverageData" TYPE 'SOAP' AS call _SEAS.VibrationToolsResetAverageData(:Mid);
CREATE SERVICE "SEAS_VibrationToteboardFinalReviewTab" TYPE 'SOAP' AS call _SEAS.VibrationTestsRequireReview(:Vessels,:Sort,:Filter);
CREATE SERVICE "SEAS_VibrationToteboardManualAnalysisTab" TYPE 'SOAP' AS call _SEAS.VibrationTestsRequireManual(:Vessels,:Sort,:Filter);
CREATE SERVICE "SEAS_VibrationToteboardNewResultsTab" TYPE 'SOAP' AS call _SEAS.VibrationTestsRequireAnalysis(:Vessels,:Sort,:Filter);
CREATE SERVICE "SEAS_VibrationToteboardTotals" TYPE 'SOAP' AS call _SEAS.VibrationTestsRequireTotals();
CREATE SERVICE "SEAS_VibrationTrendFaults" TYPE 'SOAP' AS call _SEAS.VibrationTrendFaults(:VesselId,:EquipmentId,:TestId);
CREATE SERVICE "SEAS_VibrationTrendTimeline" TYPE 'SOAP' AS call _SEAS.VibrationTrendTimeline(:VesselId,:EquipmentId,:TestId);
CREATE SERVICE "SEAS_VibrationUnassignedEquipmentGetGrid" TYPE 'SOAP' AS call _SEAS.VibrationUnassignedEquipmentGetGrid(:NodeId,:Sort);
CREATE SERVICE "SEAS_VibrationUnassignedEquipmentGetTree" TYPE 'SOAP' AS call _SEAS.VibrationUnassignedEquipmentGetTree(:NodeId);
CREATE SERVICE "SEAS_WorkListItemNarrativeLoad" TYPE 'SOAP' AS select _SEAS.WorkListItemNarrativeLoad(:VesselId,:WorkRequestId) as Narrative from DUMMY;
CREATE SERVICE "sendSnapshotToCommunity" TYPE 'SOAP' AS call ECO.SendSnapshotToCommunity(:UserId,:SnapshotId,:CommunityId);
CREATE SERVICE "sendSnapshotToUser" TYPE 'SOAP' AS call ECO.SendSnapshotToUser(:UserId,:SnapshotId);
CREATE SERVICE "ServiceListing" TYPE 'DISH';
CREATE SERVICE "SHC_ApplicationId" TYPE 'SOAP' AS select _SHC.ApplicationId() as ApplicationId;
CREATE SERVICE "SHC_EquipmentStatisticsLoad" TYPE 'SOAP' AS call _SHC.EquipmentStatisticsLoad(:NodeId,:OrderBy,:IsLimited);
COMMENT ON SERVICE "SHC_EquipmentStatisticsLoad" IS '2013.05.08 rbh created';
CREATE SERVICE "SHC_FilterAdvancedLoad" TYPE 'SOAP' AS call _SHC.FilterAdvancedLoadJSON();
COMMENT ON SERVICE "SHC_FilterAdvancedLoad" IS '2013.05.08 rbh Created';
CREATE SERVICE "SHC_FilterAttributes" TYPE 'SOAP' AS call _SHC.FilterAttributes();
COMMENT ON SERVICE "SHC_FilterAttributes" IS '2013.05.08 rbh Created';
CREATE SERVICE "SHC_FilterComparators" TYPE 'SOAP' AS call _SHC.FilterComparators();
COMMENT ON SERVICE "SHC_FilterComparators" IS '2013.05.08 rbh Created';
CREATE SERVICE "SHC_FilterConvertBasic" TYPE 'SOAP' AS call _SHC.FilterConvertBasic(:JSONValues);
COMMENT ON SERVICE "SHC_FilterConvertBasic" IS '2013.05.08 rbh Created';
CREATE SERVICE "SHC_FilterInformation" TYPE 'SOAP' AS call _SHC.FilterInformation();
COMMENT ON SERVICE "SHC_FilterInformation" IS '2013-05-08 rbh created';
CREATE SERVICE "SHC_FilterListDateLoad" TYPE 'SOAP' AS call _SHC.FilterListDateLoad(:GetDefault);
COMMENT ON SERVICE "SHC_FilterListDateLoad" IS '2013.05.08 rbh Created';
CREATE SERVICE "SHC_FilterListLevelsLoad" TYPE 'SOAP' AS call _SHC.FilterListLevelsLoad(:GetDefault);
COMMENT ON SERVICE "SHC_FilterListLevelsLoad" IS '2013.05.08 rbh Created';
CREATE SERVICE "SHC_FilterListVesselsLoad" TYPE 'SOAP' AS call _SHC.FilterListVesselsLoad(:GetDefault);
COMMENT ON SERVICE "SHC_FilterListVesselsLoad" IS '2013.05.08 rbh Created';
CREATE SERVICE "SHC_FilterSave" TYPE 'SOAP' AS call _SHC.FilterSave(:AndOr,:JSONValues,:Description,:IsAdvanced);
COMMENT ON SERVICE "SHC_FilterSave" IS '2013.05.08 rbh created';
CREATE SERVICE "SHC_Navigation" TYPE 'SOAP' AS call _SHC.Navigation(:NodeId,:NodeString);
COMMENT ON SERVICE "SHC_Navigation" IS '2013.05.08 rbh created';
CREATE SERVICE "SHC_PMCompliance" TYPE 'SOAP' AS call _SHC.PMCompliance(:NodeId,:IsLimited,:OrderBy);
CREATE SERVICE "SHC_UsersFilterSaveAsFavorite" TYPE 'SOAP' AS call _SHC.UsersFilterSaveAsFavorite(:Description);
COMMENT ON SERVICE "SHC_UsersFilterSaveAsFavorite" IS '2013.05.08 rbh created';
CREATE SERVICE "SHC_UsersFiltersDelete" TYPE 'SOAP' AS call _SHC.UsersFiltersDelete(:FilterId,:Type);
COMMENT ON SERVICE "SHC_UsersFiltersDelete" IS '2013.05.08 rbh created';
CREATE SERVICE "SHC_UsersFilterSelect" TYPE 'SOAP' AS call _SHC.UsersFiltersSelect(:FilterId);
COMMENT ON SERVICE "SHC_UsersFilterSelect" IS '2013.05.08 rbh created';
CREATE SERVICE "SHC_UsersFiltersLoad" TYPE 'SOAP' AS call _SHC.UsersFiltersLoad(:Type);
COMMENT ON SERVICE "SHC_UsersFiltersLoad" IS '2013.05.08 rbh created';
CREATE SERVICE "SHC_UsersVesselsAccess" TYPE 'SOAP' AS call _SHC.UsersVesselAccess(:AccessList);
COMMENT ON SERVICE "SHC_UsersVesselsAccess" IS '2013.05.07 rbh created';
CREATE SERVICE "SMH_AdditionalCMSTestsLoad" TYPE 'SOAP' AS call _SMH.AdditionalCMSTestsLoad(:VesselId,:EquipmentId,:TestResultId,:Sort,:MaxResults);
CREATE SERVICE "SMH_ApplicationId" TYPE 'SOAP' AS select _SMH.ApplicationId() as ApplicationId;
CREATE SERVICE "SMH_DateFilterList" TYPE 'SOAP' AS call _SMH.FilterListDateLoad(:GetDefault);
COMMENT ON SERVICE "SMH_DateFilterList" IS '2013-04-08 thawley';
CREATE SERVICE "SMH_EquipmentFilterList" TYPE 'SOAP' AS call _SMH.FilterListEquipmentLoad(:LoadBy,:Parent,:Selected,:Levels);
CREATE SERVICE "SMH_EquipmentFilterSelectedList" TYPE 'SOAP' AS call _SMH.FilterListEquipmentSelectedLoad();
CREATE SERVICE "SMH_EquipmentHistoryGridDateRange" TYPE 'SOAP' AS call _SMH.EquipmentStatisticsDateRange(:VesselId,:EquipmentId);
CREATE SERVICE "SMH_EquipmentHistoryGridMaintenanceProcedures" TYPE 'SOAP' AS call _SMH.EquipmentStatisticsMaintenanceProcedures(:VesselId,:EquipmentId,:MinDate,:MaxDate);
CREATE SERVICE "SMH_EquipmentHistoryGridOperationalStatusRange" TYPE 'SOAP' AS call _SMH.EquipmentStatisticsOperationalStatus(:VesselId,:EquipmentId,:MinDate,:MaxDate);
CREATE SERVICE "SMH_EquipmentHistoryGridRepair" TYPE 'SOAP' AS call _SMH.EquipmentStatisticsRepairs(:VesselId,:EquipmentId,:MinDate,:MaxDate);
CREATE SERVICE "SMH_EquipmentHistoryGridStats" TYPE 'SOAP' AS call _SMH.EquipmentStatisticsSummary(:VesselId,:EquipmentId,:MinDate,:MaxDate);
CREATE SERVICE "SMH_EquipmentHistoryGridStatus" TYPE 'SOAP' AS call _SMH.EquipmentStatisticsMaintenance(:VesselId,:EquipmentId,:MinDate,:MaxDate);
CREATE SERVICE "SMH_EquipmentHistoryMaintenanceInterval" TYPE 'SOAP' AS call _SMH.EquipmentHistoryMaintenanceInterval(:VesselId,:EquipmentId,:ProcedureId);
CREATE SERVICE "SMH_EquipmentNameplateData" TYPE 'SOAP' AS call _SMH.EquipmentNameplateData(:VesselId,:EquipmentId);
CREATE SERVICE "SMH_EquipmentNameValuePairs" TYPE 'SOAP' AS call _SMH.EquipmentNameValuePairs(:VesselId,:EquipmentId,:ItemType);
CREATE SERVICE "SMH_FilterAdvancedLoad" TYPE 'SOAP' AS call _SMH.FilterAdvancedLoadJSON();
COMMENT ON SERVICE "SMH_FilterAdvancedLoad" IS 'Filter update thawley';
CREATE SERVICE "SMH_FilterAttributes" TYPE 'SOAP' AS call _SMH.FilterAttributes();
COMMENT ON SERVICE "SMH_FilterAttributes" IS 'Filter update thawley';
CREATE SERVICE "SMH_FilterComparators" TYPE 'SOAP' AS call _SMH.FilterComparators();
COMMENT ON SERVICE "SMH_FilterComparators" IS 'Filter update thawley';
CREATE SERVICE "SMH_FilterConvertBasic" TYPE 'SOAP' AS call _SMH.FilterConvertBasic(:JSONValues);
COMMENT ON SERVICE "SMH_FilterConvertBasic" IS 'Filter update thawley';
CREATE SERVICE "SMH_FilterInformation" TYPE 'SOAP' AS call _SMH.FilterInformation();
COMMENT ON SERVICE "SMH_FilterInformation" IS 'Filter update thawley';
CREATE SERVICE "SMH_FilterSave" TYPE 'SOAP' AS call _SMH.FilterSave(:AndOr,:JSONValues,:Description,:IsAdvanced);
COMMENT ON SERVICE "SMH_FilterSave" IS 'Filter update thawley';
CREATE SERVICE "SMH_FuelOilHistoricalComments" TYPE 'SOAP' AS call _SMH.FuelOilTestHistoricalComments(:VesselId,:EquipmentId,:TestResultId);
COMMENT ON SERVICE "SMH_FuelOilHistoricalComments" IS '2013.03.19 rbh created';
CREATE SERVICE "SMH_FuelOilTestComments" TYPE 'SOAP' AS call _SMH.FuelOilTestComments(:VesselId,:EquipmentId,:TestResultId);
COMMENT ON SERVICE "SMH_FuelOilTestComments" IS '2013-03-19 rbh created';
CREATE SERVICE "SMH_FuelOilTestData" TYPE 'SOAP' AS call _SMH.FuelOilTestData(:VesselId,:EquipmentId,:TestResultId);
COMMENT ON SERVICE "SMH_FuelOilTestData" IS '2013.03.19 rbh created';
CREATE SERVICE "SMH_FuelOilTestDates" TYPE 'SOAP' AS call _SMH.FuelOilTestDates(:VesselId,:EquipmentId,:TestResultId);
COMMENT ON SERVICE "SMH_FuelOilTestDates" IS '2013-03-19 rbh created';
CREATE SERVICE "SMH_FuelOilTestProperties" TYPE 'SOAP' AS call _SMH.HistoryItemsPreviewPairs(:VesselId,:EquipmentId,:HistoryItemId,:ItemType);
COMMENT ON SERVICE "SMH_FuelOilTestProperties" IS '2013-03-19 rbh created';
CREATE SERVICE "SMH_FuelOilTestVariables" TYPE 'SOAP' AS call _SMH.FuelOilTestVariables(:VesselId,:EquipmentId,:TestResultId);
COMMENT ON SERVICE "SMH_FuelOilTestVariables" IS '2013-03-19 rbh Created';
CREATE SERVICE "SMH_FuelOilVariableTrendValues" TYPE 'SOAP' AS call _SMH.FuelOilVariableTrendValues(:VesselId,:EquipmentId,:TestResultId);
COMMENT ON SERVICE "SMH_FuelOilVariableTrendValues" IS '2013.03.19 rbh created';
CREATE SERVICE "SMH_HistoryItemRelatedItemsLoad" TYPE 'SOAP' AS call _SMH.HistoryItemRelatedItemsLoad(:VesselId,:EquipmentId,:HistoryItemId,:ItemType);
CREATE SERVICE "SMH_HistoryItemsAttachments" TYPE 'SOAP' AS call _SMH.HistoryItemsAttachments(:VesselId,:EquipmentId,:HistoryItemId,:ItemType);
CREATE SERVICE "SMH_HistoryItemsAttachmentsDownload" TYPE 'RAW' AS select _SMH.HistoryItemsAttachmentsDownload(:VesselId,:AttachmentId);
CREATE SERVICE "SMH_HistoryItemsLoad" TYPE 'SOAP' AS call _SMH.HistoryItemsLoad(:TreeNodeId,:OrderBy,:IsLimited,:NodeId);
CREATE SERVICE "SMH_HistoryItemsLoad_RAW" TYPE 'RAW' AS call _SMH.HistoryItemsLoad();
CREATE SERVICE "SMH_HistoryItemsLoad_Test" TYPE 'SOAP' AS call _SMH.HistoryItemsLoad(null,:NodeId);
CREATE SERVICE "SMH_HistoryItemsPreviewPairs" TYPE 'SOAP' AS call _SMH.HistoryItemsPreviewPairs(:VesselId,:EquipmentId,:HistoryItemId,:ItemType);
CREATE SERVICE "SMH_HistoryItemsPreviewPairsDetail" TYPE 'SOAP' AS call _SMH.HistoryItemsPreviewPairsDetail(:VesselId,:EquipmentId,:HistoryItemId,:HistoryItemType);
CREATE SERVICE "SMH_HistoryItemsPreviewPairsDiagnostic" TYPE 'SOAP' AS call _SMH.HistoryItemsPreviewPairsDiagnostic(:VesselId,:EquipmentId,:HistoryItemId,:HistoryItemType);
CREATE SERVICE "SMH_HistoryItemsPreviewText" TYPE 'SOAP' AS call _SMH.HistoryItemsPreviewText(:VesselId,:EquipmentId,:HistoryItemId,:ItemType);
CREATE SERVICE "SMH_HistoryItemVesselEquipment" TYPE 'SOAP' AS call _SMH.HistoryItemVesselEquipment(:VesselId,:EquipmentId,:HistoryItemId,:ItemSubType);
CREATE SERVICE "SMH_ItemTypeFilterList" TYPE 'SOAP' AS call _SMH.FilterListItemTypeLoad(:GetDefault);
COMMENT ON SERVICE "SMH_ItemTypeFilterList" IS '2013-04-08 thawley';
CREATE SERVICE "SMH_LevelsFilterList" TYPE 'SOAP' AS call _SMH.FilterListLevelsLoad(:GetDefault);
COMMENT ON SERVICE "SMH_LevelsFilterList" IS 'Filter update thawley';
CREATE SERVICE "SMH_LubeOilHistoricalComments" TYPE 'SOAP' AS call _SMH.LubeOilTestHistoricalComments(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_LubeOilMeasurementPointPropertiesLoad" TYPE 'SOAP' AS call _SMH.LubeOilMeasurementPointPropertiesLoad(:VesselId,:EquipmentId,:HistoryItemId);
CREATE SERVICE "SMH_LubeOilTestComments" TYPE 'SOAP' AS call _SMH.LubeOilTestComments(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_LubeOilTestData" TYPE 'SOAP' AS call _SMH.LubeOilTestData(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_LubeOilTestDates" TYPE 'SOAP' AS call _SMH.LubeOilTestDates(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_LubeOilTestHistoricalComments" TYPE 'SOAP' AS call _SMH.LubeOilTestHistoricalComments(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_LubeOilTestProperties" TYPE 'SOAP' AS call _SMH.HistoryItemsPreviewPairs(:VesselId,:EquipmentId,:HistoryItemId,:ItemType);
CREATE SERVICE "SMH_LubeOilTestVariables" TYPE 'SOAP' AS call _SMH.LubeOilTestVariables(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_LubeOilVariableSampleData" TYPE 'SOAP' AS call _SMH.LubeOilVariableSampleData(:VesselId,:EquipmentId,:MeasurementPointId,:LubeOilVariableId);
CREATE SERVICE "SMH_LubeOilVariableTrendValues" TYPE 'SOAP' AS call _SMH.LubeOilVariableTrendValues(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_MachineryHistory" TYPE 'SOAP' AS call _SMH.MachineryHistory(:NodeId,:OrderBy,:IsLimited);
CREATE SERVICE "SMH_MachineryHistoryLoad" TYPE 'SOAP' AS call _SMH.MachineryHistoryLoad(:VesselId,:HSC,:DateRange);
CREATE SERVICE "SMH_MachineryHistoryNarrativeLoad" TYPE 'SOAP' AS select _SMH.MachineryHistoryNarrativeLoad(:VesselId,:MachineryHistoryId) as MachineryHistoryNarrative from DUMMY;
CREATE SERVICE "SMH_MachineryHistoryTree" TYPE 'SOAP' AS call _SMH.MachineryHistoryEquipmentTree(:VesselId,:EquipmentId);
CREATE SERVICE "SMH_MaintenanceCommentsLoad" TYPE 'SOAP' AS call _SMH.MaintenanceCommentsLoad(:VesselId,:EquipmentId,:HistoryItemId);
CREATE SERVICE "SMH_MaintenanceHistoricalComments" TYPE 'SOAP' AS call _SMH.MaintenanceHistoricalComments(:VesselId,:EquipmentId,:MachineryHistoryId,:MaintenanceProcedureId);
CREATE SERVICE "SMH_MaintenancePrecautionsLoad" TYPE 'SOAP' AS call _SMH.MaintenancePrecautionsLoad(:VesselId,:EquipmentId,:HistoryItemId);
CREATE SERVICE "SMH_MaintenanceProcedurePartsMaterials" TYPE 'SOAP' AS call _SMH.MaintenanceProcedurePartsMaterials(:VesselId,:EquipmentId,:HistoryItemId);
CREATE SERVICE "SMH_MaintenanceProcedureTitle" TYPE 'SOAP' AS call _SMH.MaintenanceProcedureTitle(:VesselId,:EquipmentId,:MachineryHistoryId,:MaintenanceProcedureId);
CREATE SERVICE "SMH_MaintenanceScheduleLoad" TYPE 'SOAP' AS call _SMH.MaintenanceScheduleLoad(:VesselId,:EquipmentId,:HistoryItemId);
CREATE SERVICE "SMH_MaintenanceStatisticsGrid" TYPE 'SOAP' AS call _SMH.MaintenanceStatistics(:VesselId,:EquipmentId,:HistoryItemId);
CREATE SERVICE "SMH_MaintenanceTestData" TYPE 'SOAP' AS call _SMH.MaintenanceHistoryData(:VesselId,:EquipmentId,:HistoryItemId);
CREATE SERVICE "SMH_MaintenanceTestDates" TYPE 'SOAP' AS call _SMH.MaintenanceHistoryDates(:VesselId,:EquipmentId,:HistoryItemId);
CREATE SERVICE "SMH_MaintenanceTestDetailsLoad" TYPE 'SOAP' AS call _SMH.HistoryItemsPreviewPairs(:VesselId,:EquipmentId,:HistoryItemId,:ItemType);
CREATE SERVICE "SMH_MaintenanceTestVariables" TYPE 'SOAP' AS call _SMH.MaintenanceHistoryVariables(:VesselId,:EquipmentId,:MachineryHistoryId);
CREATE SERVICE "SMH_Navigation" TYPE 'SOAP' AS call _SMH.Navigation(:Subtype,:Type,:NodeId);
CREATE SERVICE "SMH_NavigationVesselsLoad" TYPE 'SOAP' AS call _SMH.NavigationVesselsLoad();
CREATE SERVICE "SMH_NavigationVesselSystemEquipmentLoad" TYPE 'SOAP' AS call _SMH.NavigationVesselSystemEquipmentLoad(:VesselId,:SystemId);
CREATE SERVICE "SMH_NavigationVesselSystemsLoad" TYPE 'SOAP' AS call _SMH.NavigationVesselSystemsLoad(:VesselId);
CREATE SERVICE "SMH_OtherHistoricalComments" TYPE 'SOAP' AS call _SMH.OtherHistoricalComments(:VesselId,:EquipmentId,:MachineryHistoryId);
CREATE SERVICE "SMH_OtherHistoryProperties" TYPE 'SOAP' AS call _SMH.HistoryItemsPreviewPairs(:VesselId,:EquipmentId,:MachineryHistoryId,:ItemType);
CREATE SERVICE "SMH_OtherTestData" TYPE 'SOAP' AS call _SMH.OtherHistoryData(:VesselId,:EquipmentId,:HistoryItemId);
CREATE SERVICE "SMH_OtherTestDates" TYPE 'SOAP' AS call _SMH.OtherHistoryDates(:VesselId,:EquipmentId,:HistoryItemId);
CREATE SERVICE "SMH_OtherTestVariables" TYPE 'SOAP' AS call _SMH.OtherHistoryVariables(:VesselId,:EquipmentId,:HistoryItemId);
CREATE SERVICE "SMH_PartsMaterialsGrid" TYPE 'SOAP' AS call _SMH.MaintenanceProcedurePartsMaterials(:VesselId,:EquipmentId,:HistoryItemId,:MaintenanceProcedureId);
CREATE SERVICE "SMH_PMComplianceItemsLoad" TYPE 'SOAP' AS call _SHC.EquipmentStatisticsLoad(:TreeNodeId,:OrderBy);
CREATE SERVICE "SMH_PriorityStatusFilterList" TYPE 'SOAP' AS call _SMH.FilterListPriorityStatusLoad(:GetDefault);
COMMENT ON SERVICE "SMH_PriorityStatusFilterList" IS '2013-04-08 thawley';
CREATE SERVICE "SMH_ProcessVariablesChart" TYPE 'SOAP' AS call _SMH.ProcessVariablesChart(:VesselId,:EquipmentId,:LubeOilVariableId,:ProcessId);
CREATE SERVICE "SMH_ProcessVariablesGrid" TYPE 'SOAP' AS call _SMH.ProcessVariablesGrid(:VesselId,:EquipmentId,:HistoryItemId,:ItemType,:SORT);
CREATE SERVICE "SMH_RecipAnalysisChartData" TYPE 'RAW' AS call _SMH.ReciprocatingAnalysisData(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_RecipAnalysisHistoricalComments" TYPE 'SOAP' AS call _SMH.ReciprocatingHistoricalComments(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_RecipAnalysisPointPropertiesGrid" TYPE 'SOAP' AS call _SMH.HistoryItemsPreviewPairs(:VesselId,:EquipmentId,:HistoryItemId,:ItemType);
CREATE SERVICE "SMH_RecipAnalysisTestData" TYPE 'SOAP' AS call _SMH.ReciprocatingTestData(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_RecipAnalysisTestDates" TYPE 'SOAP' AS call _SMH.ReciprocatingTestsDates(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_RecipAnalysisTestVariables" TYPE 'SOAP' AS call _SMH.ReciprocatingTestVariables(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_RelatedLubeOilTestsLoad" TYPE 'SOAP' AS call _SMH.RelatedLubeOilTestsLoad(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_RelatedVibrationTestsLoad" TYPE 'SOAP' AS call _SMH.RelatedVibrationTestsLoad(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_RepairGridData" TYPE 'SOAP' AS call _SMH.RepairHistoryData(:VesselId,:EquipmentId,:HistoryItemId);
CREATE SERVICE "SMH_RepairGridDates" TYPE 'SOAP' AS call _SMH.RepairHistoryDates(:VesselId,:EquipmentId,:HistoryItemId);
CREATE SERVICE "SMH_RepairGridVariables" TYPE 'SOAP' AS call _SMH.RepairHistoryVariables(:VesselId,:EquipmentId,:HistoryItemId);
CREATE SERVICE "SMH_RepairHistoricalComments" TYPE 'SOAP' AS call _SMH.RepairHistoricalComments(:VesselId,:EquipmentId,:MachineryHistoryId);
CREATE SERVICE "SMH_RepairHistoryEquipmentDetails" TYPE 'SOAP' AS call _SMH.RepairHistoryEquipmentDetails(:VesselId,:EquipmentId,:MachineryHistoryId);
CREATE SERVICE "SMH_RepairHistoryNarrative" TYPE 'SOAP' AS call _SMH.RepairHistoryNarrative(:VesselId,:EquipmentId,:MachineryHistoryId);
CREATE SERVICE "SMH_RepairHistoryProperties" TYPE 'SOAP' AS call _SMH.HistoryItemsPreviewPairs(:VesselId,:EquipmentId,:MachineryHistoryId,:ItemType);
CREATE SERVICE "SMH_ScheduledMaintenanceEquipmentTree" TYPE 'SOAP' AS call _SEAS.MachineryHistoryEquipmentTree(:VesselId,:EquipmentId);
CREATE SERVICE "SMH_ScheduledMaintenanceLoad" TYPE 'SOAP' AS call _SEAS.ScheduledMaintenanceLoad(:VesselId,:HSC);
CREATE SERVICE "SMH_ScheduledMaintenanceNarrativeLoad" TYPE 'SOAP' AS select _SEAS.ScheduledMaintenanceNarrativeLoad(:VesselId,:MaintenanceProcedureId) as Narrative from DUMMY;
CREATE SERVICE "SMH_SpecialTestCamshaftBankA" TYPE 'SOAP' AS call _SMH.SpecialTestCamshaftBankA(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestCamshaftBankB" TYPE 'SOAP' AS call _SMH.SpecialTestCamshaftBankB(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestCrankdef" TYPE 'SOAP' AS call _SMH.SpecialTestCrankdef(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestCylinderDistance" TYPE 'SOAP' AS call _SMH.SpecialTestCylinderDistance(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestCylinderPosition" TYPE 'SOAP' AS call _SMH.SpecialTestCylinderPosition(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestCylinderWear" TYPE 'SOAP' AS call _SMH.SpecialTestCylinderWear(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestExhaustDimensionAX" TYPE 'SOAP' AS call _SMH.SpecialTestExhaustDimensionAX(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestExhaustDimensionBY" TYPE 'SOAP' AS call _SMH.SpecialTestExhaustDimensionBY(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestExhaustDimensionCZ" TYPE 'SOAP' AS call _SMH.SpecialTestExhaustDimensionCZ(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestExhaustOriginalDimension" TYPE 'SOAP' AS call _SMH.SpecialTestExhaustOriginalDimension(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestGeartrn" TYPE 'SOAP' AS call _SMH.SpecialTestGeartrn(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestHistoricalComments" TYPE 'SOAP' AS call _SMH.SpecialTestsHistoricalComments(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestInletvlvDimensionAX" TYPE 'SOAP' AS call _SMH.SpecialTestInletvlvDimensionAX(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestInletvlvDimensionBY" TYPE 'SOAP' AS call _SMH.SpecialTestInletvlvDimensionBY(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestInletvlvDimensionCZ" TYPE 'SOAP' AS call _SMH.SpecialTestInletvlvDimensionCZ(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestInletvlvOriginalDimension" TYPE 'SOAP' AS call _SMH.SpecialTestInletvlvOriginalDimension(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestPistnpinEndBearing" TYPE 'SOAP' AS call _SMH.SpecialTestPistnpinEndBearing(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestPistnpinWristPin" TYPE 'SOAP' AS call _SMH.SpecialTestPistnpinWristPin(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestPistnpinWristPinBore" TYPE 'SOAP' AS call _SMH.SpecialTestPistnpinWristPinBore(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestPistntstNewGapClearance" TYPE 'SOAP' AS call _SMH.SpecialTestPistntstNewGapClearance(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestPistntstNewSideClearance" TYPE 'SOAP' AS call _SMH.SpecialTestPistntstNewSideClearance(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestPistntstOldGapClearance" TYPE 'SOAP' AS call _SMH.SpecialTestPistntstOldGapClearance(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestPistntstOldSideClearance" TYPE 'SOAP' AS call _SMH.SpecialTestPistntstOldSideClearance(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestPistntstWear" TYPE 'SOAP' AS call _SMH.SpecialTestPistntstWear(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestPointPropertiesGrid" TYPE 'SOAP' AS call _SMH.HistoryItemsPreviewPairs(:VesselId,:EquipmentId,:HistoryItemId,:ItemType);
CREATE SERVICE "SMH_SpecialTestTestDates" TYPE 'SOAP' AS call _SMH.SpecialTestsDates(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestTrendData" TYPE 'SOAP' AS call _SMH.SpecialTestData(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestTrendDates" TYPE 'SOAP' AS call _SMH.SpecialTestsDates(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestTrendVariables" TYPE 'SOAP' AS call _SMH.SpecialTestVariables(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestType" TYPE 'SOAP' AS call _SMH.SpecialTestType(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_SpecialTestVariableTrendValues" TYPE 'SOAP' AS call _SMH.SpecialTestTrendData(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_TimelineDateRange" TYPE 'SOAP' AS call _SMH.TimelineDateRange(:VesselId,:EquipmentId,:HistoryItemId,:ItemSubType,:MaintenanceProcedureId);
CREATE SERVICE "SMH_TimelineEvents" TYPE 'SOAP' AS call _SMH.TimelineEvents(:VesselId,:EquipmentId,:HistoryItemId,:ItemSubType,:MaintenanceProcedureId);
CREATE SERVICE "SMH_TimelineRanges" TYPE 'SOAP' AS call _SMH.TimelineRanges(:VesselId,:EquipmentId,:HistoryItemId,:ItemSubType,:MaintenanceProcedureId);
CREATE SERVICE "SMH_TimelineStates" TYPE 'SOAP' AS call _SMH.TimelineStatus(:VesselId,:EquipmentId,:HistoryItemId,:ItemSubType,:MaintenanceProcedureId);
CREATE SERVICE "SMH_UsersFilterDelete" TYPE 'SOAP' AS call _SMH.UsersFiltersDelete(:FilterId,:Type);
CREATE SERVICE "SMH_UsersFilterSaveAsFavorite" TYPE 'SOAP' AS call _SMH.UsersFilterSaveAsFavorite(:Description);
CREATE SERVICE "SMH_UsersFilterSelect" TYPE 'SOAP' AS call _SMH.UsersFiltersSelect(:FilterId);
CREATE SERVICE "SMH_UsersFilterSettings" TYPE 'SOAP' AS call _SMH.UsersFilterSettings(:VesselList,:EquipmentList,:DateList,:ItemTypeList,:PriorityStatusList,:LevelList,:Description);
COMMENT ON SERVICE "SMH_UsersFilterSettings" IS 'Filter update thawley';
CREATE SERVICE "SMH_UsersFiltersLoad" TYPE 'SOAP' AS call _SMH.UsersFiltersLoad(:Type);
CREATE SERVICE "SMH_UsersVesselAccess" TYPE 'SOAP' AS call _SMH.UsersVesselAccess(:AccessList);
CREATE SERVICE "SMH_VesselsFilterList" TYPE 'SOAP' AS call _SMH.FilterListVesselsLoad(:GetDefault);
COMMENT ON SERVICE "SMH_VesselsFilterList" IS '2013-04-08 thawley';
CREATE SERVICE "SMH_VibrationEquipmentComponentsLoad" TYPE 'SOAP' AS call _SMH.VibrationEquipmentComponents(:VesselId,:EquipmentId);
CREATE SERVICE "SMH_VibrationEquipmentDetailsLoad" TYPE 'SOAP' AS call _SMH.VibrationEquipmentDetails(:VesselId,:EquipmentId);
CREATE SERVICE "SMH_VibrationEquipmentImageLoad" TYPE 'SOAP' AS select _SMH.VibrationEquipmentImage(:VesselId,:EquipmentId,:ImageType) as ImageData from DUMMY;
CREATE SERVICE "SMH_VibrationHistoricalComments" TYPE 'SOAP' AS call _SMH.VibrationHistoricalComments(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_VibrationHistoricalCommentsMore" TYPE 'SOAP' AS call _SMH.VibrationTestsComments(:VesselId,:EquipmentId,:CommentId);
CREATE SERVICE "SMH_VibrationMeasurementPointSetupLoad" TYPE 'SOAP' AS call _SMH.VibrationMeasurementPointSetup(:VesselId,:EquipmentId,:MeasurementPointId);
CREATE SERVICE "SMH_VibrationMeasurementPointsLoad" TYPE 'SOAP' AS call _SMH.VibrationTestsMeasurementPointsLoad(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_VibrationTestConditions" TYPE 'SOAP' AS call _SMH.VibrationTestConditions(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "SMH_VibrationTestDetailsLoad" TYPE 'SOAP' AS call _SMH.HistoryItemsPreviewPairs(:VesselId,:EquipmentId,:HistoryItemId,:ItemType);
CREATE SERVICE "SMH_VibrationTestsRangesLoad" TYPE 'SOAP' AS call _SMH.VibrationTestsRangesLoad(:VesselId,:EquipmentId,:TestResultId,:MeasurementPointId);
CREATE SERVICE "SMH_VibrationTestsSpectra" TYPE 'RAW' AS select _SMH.VibrationTestsSpectraJSON(:VesselId,:EquipmentId,:TestResultId,:PointId,:RangeId,:AUnits,:Averaging,:Reference,:FUnits) from DUMMY;
CREATE SERVICE "SMH_VibrationTrendFaultsLoad" TYPE 'SOAP' AS call _SMH.VibrationTrendFaults(:VesselId,:EquipmentId);
CREATE SERVICE "SMH_WaterChemistryCharts" TYPE 'SOAP' AS call _SMH.WaterChemistryCharts(:VesselId,:EquipmentId,:HistoryItemId);
COMMENT ON SERVICE "SMH_WaterChemistryCharts" IS '2013-02-19	rbh Created';
CREATE SERVICE "SMH_WaterChemistryDates" TYPE 'SOAP' AS call _SMH.WaterChemistryDates(:VesselId,:EquipmentId,:HistoryItemId);
COMMENT ON SERVICE "SMH_WaterChemistryDates" IS '2013-02-19	rbh Created';
CREATE SERVICE "SMH_WaterChemistryHistoricalComments" TYPE 'SOAP' AS call _SMH.WaterChemistryHistoricalComments(:VesselId,:EquipmentId,:HistoryItemId);
COMMENT ON SERVICE "SMH_WaterChemistryHistoricalComments" IS '2013-03-11	rbh Created';
CREATE SERVICE "SMH_WaterChemistryPreviewPairs" TYPE 'SOAP' AS call _SMH.HistoryItemsPreviewPairs(:VesselId,:EquipmentId,:HistoryItemId,:ItemType);
COMMENT ON SERVICE "SMH_WaterChemistryPreviewPairs" IS '2013-03-15	rbh Created';
CREATE SERVICE "SMH_WaterChemistryVariables" TYPE 'SOAP' AS call _SMH.WaterChemistryVariables(:VesselId,:EquipmentId,:HistoryItemId);
COMMENT ON SERVICE "SMH_WaterChemistryVariables" IS '2013-02-19	rbh Created';
CREATE SERVICE "SMS_Findings" TYPE 'SOAP' AS call "_SMS"."Findings"(:NodeId,:IsLimited,:OrderBy);
CREATE SERVICE "snapshotAlertsLoad" TYPE 'SOAP' AS call ECA.SnapshotAlertsLoad(:UserId);
CREATE SERVICE "snapshotDelete" TYPE 'SOAP' AS call ECO.SnapshotDelete(:SnapshotId,:UserId);
CREATE SERVICE "snapshotInsert" TYPE 'SOAP' AS select ECO.SnapshotInsert(:ApplicationId,:UserId,:SnapshotType,:SnapshotTitle,:SnapshotNotes) as SnapshotId from DUMMY;
CREATE SERVICE "snapshotLoad" TYPE 'SOAP' AS call ECO.SnapshotLoad(:SnapshotId);
CREATE SERVICE "snapshotPropertiesLoad" TYPE 'SOAP' AS call ECO.SnapshotPropertiesLoad(:SnapshotId);
CREATE SERVICE "snapshotPropertyInsert" TYPE 'SOAP' AS call ECO.SnapshotPropertyInsert(:SnapshotId,:SnapshotType,:ApplicationId,:SnapshotPropertyId,:SnapshotProperty);
CREATE SERVICE "snapshotsArchiveLoad" TYPE 'SOAP' AS call ECO.SnapshotsArchiveLoad(:ApplicationId,:UserId,:Sort);
CREATE SERVICE "snapshotUpdate" TYPE 'SOAP' AS call ECO.SnapshotUpdate(:SnapshotId,:SnapshotTitle,:SnapshotNotes);
CREATE SERVICE "SPM_AdditionalDetailsGrid" TYPE 'SOAP' AS call _SPM.AdditionDetailsGrid(:RowId);
CREATE SERVICE "SPM_ApplicationId" TYPE 'SOAP' AS select _SPM.ApplicationId() as ApplicationId;
CREATE SERVICE "SPM_ApplicationsSettingInsertUpdate" TYPE 'SOAP' AS call _SPM.ApplicationsSettingInsertUpdate(:SettingId,:Setting,:VesselId);
CREATE SERVICE "SPM_ApplicationsSettingSelect" TYPE 'SOAP' AS call _SPM.ApplicationsSettingSelect(:SettingId,:VesselId);
CREATE SERVICE "SPM_AttachmentDownload" TYPE 'RAW' AS select _SPM.AttachmentDownload(:VesselId,:AttachmentId);
CREATE SERVICE "SPM_AutoGeneratedWorkItemNumber" TYPE 'SOAP' AS call _SPM.AutoGeneratedWorkItemNumber(:RowId,:ConractId);
CREATE SERVICE "SPM_CompletionItemsLoad" TYPE 'SOAP' AS call _SPM.CompletionItemsLoad(:RowId,:LinkedPMRowIds,:OrderBy);
CREATE SERVICE "SPM_DetailsAttachmentsGrid" TYPE 'SOAP' AS call _SPM.DetailsAttachmentsGrid(:RowId,:OrderBy);
CREATE SERVICE "SPM_DetailsCostHistoryGrid" TYPE 'SOAP' AS call _SPM.DetailsCostHistoryGrid(:RowId,:OrderBy);
CREATE SERVICE "SPM_DiagnosticsGrid" TYPE 'SOAP' AS call _SPM.DiagnosticsGrid(:RowId);
CREATE SERVICE "SPM_EstimateDownload" TYPE 'RAW' AS select _SPM.EstimateDownload(:RowId) as DocumentData;
CREATE SERVICE "SPM_FilterAdvancedLoad" TYPE 'SOAP' AS call _SPM.FilterAdvancedLoad();
CREATE SERVICE "SPM_FilterAttributes" TYPE 'SOAP' AS call _SPM.FilterAttributes();
CREATE SERVICE "SPM_FilterBasicData" TYPE 'SOAP' AS call _SPM.FilterBasicData(:Date,:VesselList,:SWBSList,:StatusList,:AllText);
CREATE SERVICE "SPM_FilterBasicSave" TYPE 'SOAP' AS call _SPM.FilterBasicSave(:Date,:VesselList,:SWBSList,:StatusList,:AllText);
CREATE SERVICE "SPM_FilterComparators" TYPE 'SOAP' AS call _SPM.FilterComparators();
CREATE SERVICE "SPM_FilterConvertBasic" TYPE 'SOAP' AS call _SPM.FilterConvertBasic(:JSONValues);
CREATE SERVICE "SPM_FilterData" TYPE 'SOAP' AS call _SPM.FilterData();
CREATE SERVICE "SPM_FilteredMaintenanceStatus" TYPE 'SOAP' AS call _SPM.FilteredStatus();
COMMENT ON SERVICE "SPM_FilteredMaintenanceStatus" IS '/*
  AUTHOR:   RBH
  CREATED:  2013-01-18
*/';
CREATE SERVICE "SPM_FilteredMaintenanceType" TYPE 'SOAP' AS call _SPM.FilteredMaintenanceTypes();
COMMENT ON SERVICE "SPM_FilteredMaintenanceType" IS '/*
  AUTHOR:   RBH
  CREATED:  2013-01-18
*/';
CREATE SERVICE "SPM_FilterInformation" TYPE 'SOAP' AS call _SPM.FilterInformation();
CREATE SERVICE "SPM_FilterListDateLoad" TYPE 'SOAP' AS call _SPM.FilterListDateLoad(:GetDefault);
COMMENT ON SERVICE "SPM_FilterListDateLoad" IS '/*
  AUTHOR:   RBH
  CREATED:  2013-01-14
*/';
CREATE SERVICE "SPM_FilterListEquipmentLoad" TYPE 'SOAP' AS call _SPM.FilterListEquipmentLoad(:LoadBy,:Parent,:Selected,:Levels);
COMMENT ON SERVICE "SPM_FilterListEquipmentLoad" IS '/*
  AUTHOR:   RBH
  CREATED:  2013-01-14
*/';
CREATE SERVICE "SPM_FilterListEquipmentSelectedLoad" TYPE 'SOAP' AS call _SPM.FilterListEquipmentSelectedLoad();
COMMENT ON SERVICE "SPM_FilterListEquipmentSelectedLoad" IS '
  /*
  Author RBH
  Created 2013-01-22
  */';
CREATE SERVICE "SPM_FilterListStatusLoad" TYPE 'SOAP' AS call _SPM.FilterListStatusLoad(:GetDefault);
COMMENT ON SERVICE "SPM_FilterListStatusLoad" IS '/*
  AUTHOR:   RBH
  CREATED:  2013-01-16
*/';
CREATE SERVICE "SPM_FilterListSWBSLoad" TYPE 'SOAP' AS call _SPM.FilterListSWBSLoad(:GetDefault);
CREATE SERVICE "SPM_FilterListText" TYPE 'SOAP' AS call _SPM.FilterListText();
CREATE SERVICE "SPM_FilterListVesselsLoad" TYPE 'SOAP' AS call _SPM.FilterListVesselsLoad(:GetDefault);
COMMENT ON SERVICE "SPM_FilterListVesselsLoad" IS '/*
  AUTHOR:   RBH
  CREATED:  2013-01-14
*/';
CREATE SERVICE "SPM_FilterSave" TYPE 'SOAP' AS call _SPM.FilterSave(:AnyAll,:Data,null,1);
CREATE SERVICE "SPM_FilterSaveAs" TYPE 'SOAP' AS call _SPM.FilterSaveAs(:Description);
CREATE SERVICE "SPM_LinkedPMLoad" TYPE 'SOAP' AS call _SPM.LinkedPMLoad(:RowId,:OrderBy);
CREATE SERVICE "SPM_MainGrid" TYPE 'SOAP' AS call _SPM.MainGrid(:NodeId,:OrderBy,:IsLimited);
CREATE SERVICE "SPM_MainGridOrderBySave" TYPE 'SOAP' AS call _SPM.SavedOrderByInsertUpdate(:OrderBy);
CREATE SERVICE "SPM_MaintenanceAssignmentPrompt" TYPE 'SOAP' AS call _SPM.MaintenanceAssignmentPrompt(:PMIARowId,:WorkItemId);
CREATE SERVICE "SPM_MaintenanceProcedureAdditionalDetails" TYPE 'SOAP' AS call _SPM.MaintenanceProcedureAdditionalDetails(:VesselId,:EquipmentId,:ProcedureId);
CREATE SERVICE "SPM_MaintenanceProcedureNarrative" TYPE 'SOAP' AS call _SPM.MaintenanceProcedureNarrative(:VesselId,:EquipmentId,:ProcedureId);
COMMENT ON SERVICE "SPM_MaintenanceProcedureNarrative" IS '/*
  AUTHOR:   JHM
  CREATED:  2013-01-11
*/';
CREATE SERVICE "SPM_MaintenanceProcedurePartsMaterials" TYPE 'SOAP' AS call _SPM.MaintenanceProcedurePartsMaterials(:VesselId,:EquipmentId,:ProcedureId);
CREATE SERVICE "SPM_MaintenanceProcedurePrecautions" TYPE 'SOAP' AS call _SPM.MaintenanceProcedurePrecautions(:VesselId,:EquipmentId,:ProcedureId);
CREATE SERVICE "SPM_MaintenanceProcedureSpecification" TYPE 'SOAP' AS call _SPM.MaintenanceProcedureSpecification(:VesselId,:EquipmentId,:ProcedureId);
CREATE SERVICE "SPM_MaintenanceScheduleDates" TYPE 'SOAP' AS call _SPM.MaintenanceScheduleDates(:NodeId);
CREATE SERVICE "SPM_MaintenanceScheduleDetails" TYPE 'SOAP' AS call _SPM.MaintenanceScheduleDetails(:VesselId,:EquipmentId);
CREATE SERVICE "SPM_MaintenanceScheduleEquipment" TYPE 'SOAP' AS call _SPM.MaintenanceScheduleEquipment(:NodeId);
CREATE SERVICE "SPM_MaintenanceScheduleProcedures" TYPE 'SOAP' AS call _SPM.MaintenanceScheduleProcedures(:VesselId,:EquipmentId);
CREATE SERVICE "SPM_ModuleConfiguration" TYPE 'SOAP' AS call _SPM.ModuleConfiguration();
CREATE SERVICE "SPM_ModuleConfigurationSave" TYPE 'SOAP' AS call _SPM.ModuleConfigurationSave(:UserSettingId,:UserSetting);
CREATE SERVICE "SPM_Navigation" TYPE 'SOAP' AS call _SPM.Navigation(:NodeType,:NodeId);
COMMENT ON SERVICE "SPM_Navigation" IS '/*
  AUTHOR:   RBH
  CREATED:  2013-01-17
*/';
CREATE SERVICE "SPM_NavigationTypeLoad" TYPE 'SOAP' AS call _SPM.NavigationTypeLoad();
CREATE SERVICE "SPM_PMIAAssociatedCompletedItems" TYPE 'SOAP' AS call _SPM.VesselMaintenanceAssociatedCompletion(:VesselId,:EquipmentId,:ProcedureId);
CREATE SERVICE "SPM_PMIAAssociatedCompletedItemsFull" TYPE 'SOAP' AS call _SPM.VesselEquipmentMaintenance(:VesselId,:EquipmentId,:ProcedureId);
CREATE SERVICE "SPM_PMIAAssociatedCompletedItemsSave" TYPE 'SOAP' AS call _SPM.VesselMaintenanceAssociatedCompletionUpdate(:VesselId,:EquipmentId,:ProcedureId,:Items);
CREATE SERVICE "SPM_PMIAAssociatedScheduledItems" TYPE 'SOAP' AS call _SPM.VesselMaintenanceAssociatedScheduled(:VesselId,:EquipmentId,:ProcedureId);
CREATE SERVICE "SPM_PMIAAssociatedScheduledItemsFull" TYPE 'SOAP' AS call _SPM.VesselEquipmentMaintenance(:VesselId,:EquipmentId,:ProcedureId);
CREATE SERVICE "SPM_PMIAAssociatedScheduledItemsSave" TYPE 'SOAP' AS call _SPM.VesselMaintenanceAssociatedScheduledUpdate(:VesselId,:EquipmentId,:ProcedureId,:Items);
CREATE SERVICE "SPM_PMIAAvailabilityList" TYPE 'SOAP' AS call _SPM.MaintenanceAvailabilities(:VesselId);
CREATE SERVICE "SPM_PMIAComboBoxSave" TYPE 'SOAP' AS call _SPM.MaintenanceReferencesUpdate(:VesselId,:EquipmentId,:ProcedureId,:ItemId,:AvailabilityId,:WorkPackId,:WorkItemId);
CREATE SERVICE "SPM_PMIAComboBoxValues" TYPE 'SOAP' AS call _SPM.MaintenanceEditItems(:VesselId,:EquipmentId,:ProcedureId,:ItemId);
CREATE SERVICE "SPM_PMIATimelineDateRange" TYPE 'SOAP' AS call _SPM.MaintenanceScheduleDateRange(:NodeId);
CREATE SERVICE "SPM_PMIATimelineEvents" TYPE 'SOAP' AS call _SPM.MaintenanceScheduleServiceOrders(:NodeId);
CREATE SERVICE "SPM_PMIATimelineRanges" TYPE 'SOAP' AS call _SPM.MaintenanceScheduleAvailabilities(:NodeId);
CREATE SERVICE "SPM_PMIATimelineStates" TYPE 'SOAP' AS call _SPM.MaintenanceScheduleOperationalStatus(:NodeId);
CREATE SERVICE "SPM_PMIATimelineStatusDrop" TYPE 'SOAP' AS call _SPM.MaintenanceReferencesUpdate(:VesselId,:EquipmentId,:ProcedureId,:ItemId,:RangeEntryId);
CREATE SERVICE "SPM_PMIAWorkItemList" TYPE 'SOAP' AS call _SPM.MaintenanceWorkItems(:VesselId,:WorkPackId);
CREATE SERVICE "SPM_PMIAWorkPackSOList" TYPE 'SOAP' AS call _SPM.MaintenanceContracts(:VesselId,:AvailabilityId);
CREATE SERVICE "SPM_QuickEditAvailabilitiesCombo" TYPE 'SOAP' AS call _SPM.QuickEditAvailabilitiesCombo(:RowIds);
CREATE SERVICE "SPM_QuickEditLoad" TYPE 'SOAP' AS call _SPM.QuickEditLoad(:RowIds);
CREATE SERVICE "SPM_QuickEditSave" TYPE 'SOAP' AS call _SPM.QuickEditSave(
:RowIds,
:AvailabilityId,
:ContractId,
:WorkItemNumber,
:LinkedPMRowIds,
:WorkItemId,
:Overwrite);
CREATE SERVICE "SPM_QuickEditWorkItemCombo" TYPE 'SOAP' AS call _SPM.QuickEditWorkItemCombo(:RowIds,:AvailabilityId,:ContractId);
CREATE SERVICE "SPM_QuickEditWPSOCombo" TYPE 'SOAP' AS call _SPM.QuickEditWPSOCombo(:RowIds,:AvailabilityId);
CREATE SERVICE "SPM_SpecificationDownload" TYPE 'RAW' AS select _SPM.SpecificationDownload(:RowId);
CREATE SERVICE "SPM_UsersFilterDelete" TYPE 'SOAP' AS call _SPM.UsersFiltersDelete(:FilterIds,:Type);
CREATE SERVICE "SPM_UsersFilterSaveAsFavorite" TYPE 'SOAP' AS call _SPM.UsersFilterSaveAsFavorite(:Description);
COMMENT ON SERVICE "SPM_UsersFilterSaveAsFavorite" IS '
  /*
  Author RBH
  Created 2013-01-22
  */';
CREATE SERVICE "SPM_UsersFiltersDelete" TYPE 'SOAP' AS call _SPM.UsersFiltersDelete(:FilterId);
COMMENT ON SERVICE "SPM_UsersFiltersDelete" IS '
  /*
  Author RBH
  Created 2013-01-22
  */';
CREATE SERVICE "SPM_UsersFilterSelect" TYPE 'SOAP' AS call _SPM.UsersFiltersSelect(:FilterId);
CREATE SERVICE "SPM_UsersFilterSettings" TYPE 'SOAP' AS call _SPM.UsersFilterSettingsBasic(:DateList,:VesselList,:AvalilabilityList,:Description);
COMMENT ON SERVICE "SPM_UsersFilterSettings" IS '
  /*
  Author RBH
  Created 2013-01-17
  */';
CREATE SERVICE "SPM_UsersFiltersLoad" TYPE 'SOAP' AS call _SPM.UsersFiltersLoad(:Type);
COMMENT ON SERVICE "SPM_UsersFiltersLoad" IS '
  /*
  Author RBH
  Created 2013-01-22
  */';
CREATE SERVICE "SPM_UsersFiltersSelect" TYPE 'SOAP' AS call _SPM.UsersFiltersSelect(:FilterId);
COMMENT ON SERVICE "SPM_UsersFiltersSelect" IS '
  /*
  Author RBH
  Created 2013-01-22
  */';
CREATE SERVICE "SPM_UsersVesselAccess" TYPE 'SOAP' AS call _SPM.UsersVesselAccess(:AccessList);
CREATE SERVICE "SPM_UsersVesselsAccess" TYPE 'SOAP' AS call _SPM.UsersVesselAccess(:AccessList);
CREATE SERVICE "SPM_ValidateWorkItemNumber" TYPE 'SOAP' AS call _SPM.ValidateWorkItemNumber(:Rowid,:ContractId,:WorkItemNumber);
CREATE SERVICE "SPM_VesselsFilterList" TYPE 'SOAP' AS call _SPM.FilterListVesselsLoad(:GetDefault);
CREATE SERVICE "SPM_VesselsList" TYPE 'SOAP' AS call _SPM.VesselsList();
CREATE SERVICE "SRA_ApplicationsRoles" TYPE 'SOAP' AS call _SRA.ApplicationsRoles(:NodeId,:IsLimited,:OrderBy);
CREATE SERVICE "SRM_AdditionalDetailsGrid" TYPE 'SOAP' AS call _SRM.AdditionalDetailsGrid(:RowId);
CREATE SERVICE "SRM_Applicationid" TYPE 'SOAP' AS select _SRM.ApplicationId();
CREATE SERVICE "SRM_AttachmentDownload" TYPE 'RAW' AS select _SRM.AttachmentDownload(:RowId);
CREATE SERVICE "SRM_AttachmentSettings" TYPE 'SOAP' AS call _SRM.AttachmentSettings();
CREATE SERVICE "SRM_CurrentUserNodeId" TYPE 'SOAP' AS call _SRM.CurrentUserNodeId();
CREATE SERVICE "SRM_FilterAdvancedAttributes" TYPE 'SOAP' AS call _SRM.FilterAdvancedAttributes();
CREATE SERVICE "SRM_FilterAdvancedLoad" TYPE 'SOAP' AS call _SRM.FilterAdvancedLoad();
CREATE SERVICE "SRM_FilterAdvancedSave" TYPE 'SOAP' AS call _SRM.FilterAdvancedSave(:Module,:AndOr,:JSONValues);
CREATE SERVICE "SRM_FilterAdvancedToBasicMapping" TYPE 'SOAP' AS call _SRM.FilterAdvancedToBasicMapping();
CREATE SERVICE "SRM_FilterListDates" TYPE 'SOAP' AS call _SRM.FilterListDateLoad(:GetDefault);
CREATE SERVICE "SRM_FilterListOfficeCodeLoad" TYPE 'SOAP' AS call _SRM.FilterListOfficeCodeIdLoad(:GetDefault);
CREATE SERVICE "SRM_FilterListPriority" TYPE 'SOAP' AS call _SRM.FilterListPriorityLoad(:GetDefault);
CREATE SERVICE "SRM_FilterListStatuses" TYPE 'SOAP' AS call _SRM.FilterListStatusLoad(:GetDefault);
CREATE SERVICE "SRM_FilterListText" TYPE 'SOAP' AS call _SRM.FilterListText();
CREATE SERVICE "SRM_FilterListTypes" TYPE 'SOAP' AS call _SRM.FilterListTypeLoad(:GetDefault);
CREATE SERVICE "SRM_FilterListVesselsLoad" TYPE 'SOAP' AS call _SRM.FilterListVesselsLoad(:GetDefault);
CREATE SERVICE "SRM_Navigation" TYPE 'SOAP' AS call _SRM.Navigation(:NodeType,:NodeId);
CREATE SERVICE "SRM_NodeTypeSelect" TYPE 'SOAP' AS call _SRM.NodeTypeSelect();
CREATE SERVICE "SRM_ServiceRequestItemDetails" TYPE 'SOAP' AS call _SRM.ServiceRequestItemDetails(:RowId,:Base64Encode);
CREATE SERVICE "SRM_ServiceRequestItems" TYPE 'SOAP' AS call _SRM.ServiceRequestItems(:NodeId,:OrderBy,:UsePaging,:RowsPerPage,:PageToDisplay,:Base64Encode);
CREATE SERVICE "SRM_ServiceRequestItemSave" TYPE 'SOAP' AS call "_SRM"."ServiceRequestItemSave"(:RowId,:ParentRowId,:OfficeCodeId,:AssignedToUserId,:ServiceRequestStatus,:ServiceRequestPriority,:ServiceRequestTitle,
:ServiceRequestPrelimDueDate,:ServiceRequestFinalDueDate,:PlannedStartDate,:PlannedEndDate,:PercentComplete,:EstimatedRemainingHours,:ActualHoursWorked,
:MandatoryMinReportDays,:ServiceRequestDescription,:TransaltNumber,:TransaltId,:PrimaryPOCID,:PrimaryPOCLastname,:PrimaryPOCFirstname,:PrimaryPOCEmails,
:PrimaryPOCPhoneNumber,:AltPOCID,:AltPOCLastname,:AltPOCFirstname,:AltPOCEmails,:AltPOCPhoneNumber,:ServiceRequestDeliverables,:ServiceRequestCategories,
:ServiceRequestRequiredApprovals,:ServiceRequestRequiredDetails,:VesselIds,:EstimatedTotalHours,:Base64Encoded);
CREATE SERVICE "SRM_ServiceRequestItemsExport" TYPE 'SOAP' AS call _SRM.ServiceRequestItemsExport(:NodeId,:OrderBy,:UsePaging,:RowsPerPage,:PageToDisplay);
CREATE SERVICE "SRM_ServiceRequestsActiveSequence" TYPE 'SOAP' AS call _SRM.ServiceRequestsActiveSequence();
CREATE SERVICE "SRM_ServiceRequestsActiveSequenceSave" TYPE 'SOAP' AS call _SRM.ServiceRequestsActiveSequenceSave(:RowId,:ActiveSequenceNumber);
CREATE SERVICE "SRM_ServiceRequestsAttachmentDeliverables" TYPE 'SOAP' AS call _SRM.ServiceRequestsDeliverables();
CREATE SERVICE "SRM_ServiceRequestsAttachments" TYPE 'SOAP' AS call _SRM.ServiceRequestsAttachments(:RowId);
CREATE SERVICE "SRM_ServiceRequestsAttachmentSave" TYPE 'SOAP' AS call _SRM.ServiceRequestsAttachmentSave(:RowId,:ServiceRequestAttachmentStatus,:ServiceRequestsDeliverableType,:AttachmentDescription,:Revision,:Deliverable,:ServiceRequestAttachIsActive,:AttachmentFileName,:Attachment);
CREATE SERVICE "SRM_ServiceRequestsAttachmentStatus" TYPE 'SOAP' AS call _SRM.ServiceRequestAttachmentStatus();
CREATE SERVICE "SRM_ServiceRequestsAttachmentValidation" TYPE 'SOAP' AS call _SRM.ServiceRequestsAttachmentValidation(:AttachmentFileName,:AttachmentFileSize);
CREATE SERVICE "SRM_ServiceRequestsBranch" TYPE 'SOAP' AS call _SRM.ServiceRequestsBranch(:NodeId);
CREATE SERVICE "SRM_ServiceRequestsCategories" TYPE 'SOAP' AS call _SRM.ServiceRequestsCategories();
CREATE SERVICE "SRM_ServiceRequestsCommentSave" TYPE 'SOAP' AS call _SRM.ServiceRequestsProgressCommentSave(:RowId,:ServiceRequestComment);
CREATE SERVICE "SRM_ServiceRequestsDeliverables" TYPE 'SOAP' AS call _SRM.ServiceRequestsDeliverables();
CREATE SERVICE "SRM_ServiceRequestsDescription" TYPE 'SOAP' AS call _SRM.ServiceRequestsDescription(:RowId);
CREATE SERVICE "SRM_ServiceRequestsDescriptionSave" TYPE 'SOAP' AS call _SRM.ServiceRequestsDescriptionSave(:RowId,:ServiceRequestDescription);
CREATE SERVICE "SRM_ServiceRequestsEmailComment" TYPE 'SOAP' AS call _SRM.ServiceRequestsEmailComment(:RowId,
:EmailAdresses,
:EmailText);
CREATE SERVICE "SRM_ServiceRequestsMileStones" TYPE 'SOAP' AS call _SRM.ServiceRequestsMileStones(:RowId);
CREATE SERVICE "SRM_ServiceRequestsMileStonesSave" TYPE 'SOAP' AS call _SRM.ServiceRequestsMileStonesSave(:RowId,:ServiceRequestMilestoneScheduledDate,:ServiceRequestMilestoneCompleteDate);
CREATE SERVICE "SRM_ServiceRequestsNodePersonnelStatus" TYPE 'SOAP' AS call _SRM.ServiceRequestsNodePersonnelStatus(:NodeId);
CREATE SERVICE "SRM_ServiceRequestsOfficeAssignment" TYPE 'SOAP' AS call _SRM.ServiceRequestsOfficeAssignment(:RowId);
CREATE SERVICE "SRM_ServiceRequestsOffices" TYPE 'SOAP' AS call _SRM.ServiceRequestsOffices(:NodeId);
CREATE SERVICE "SRM_ServiceRequestsPersonnelAdd" TYPE 'SOAP' AS call _SRM.ServiceRequestsPersonnelAdd(:PartOfNameorEmail,:OrderBy);
CREATE SERVICE "SRM_ServiceRequestsPOCs" TYPE 'SOAP' AS call _SRM.ServiceRequestsPOCs(:PartOfPOCNameorEmail);
CREATE SERVICE "SRM_ServiceRequestsPriorities" TYPE 'SOAP' AS call _SRM.ServiceRequestsPriorities();
CREATE SERVICE "SRM_ServiceRequestsProgress" TYPE 'SOAP' AS call _SRM.ServiceRequestsProgress(:RowId);
CREATE SERVICE "SRM_ServiceRequestsProgressMarkAsRead" TYPE 'SOAP' AS call _SRM.ServiceRequestsProgressMarkAsRead(
:NodeId,
:ServiceRequestExternalID,
:AllTextSearchString,
:NumberOfDaysToDisplay,
:RowId);
CREATE SERVICE "SRM_ServiceRequestsProgressRecentItems" TYPE 'SOAP' AS call _SRM.ServiceRequestsProgressRecentItems(
:NodeId,
:ServiceRequestExternalID,
:AllTextSearchString,
:NumberOfDaysToDisplay,
:OrderBy,
:UsePaging,
:RowsPerPage,
:PageToDisplay);
CREATE SERVICE "SRM_ServiceRequestsQuickEditDetails" TYPE 'SOAP' AS call _SRM.ServiceRequestsQuickEditDetails(:RowId);
CREATE SERVICE "SRM_ServiceRequestsQuickEditSave" TYPE 'SOAP' AS call _SRM.ServiceRequestsQuickEditSave(:RowId,:OfficeCodeId,:AssignedToUserId,:ServiceRequestStatus,:ServiceRequestPriority,:PercentComplete,:PlannedStartDate,:EstimatedRemainingHours,:ActualHoursWorked,:PlannedEndDate,:ServiceRequestComment);
CREATE SERVICE "SRM_ServiceRequestsRelatedItems" TYPE 'SOAP' AS call _SRM.ServiceRequestsRelatedItems(:RowId);
CREATE SERVICE "SRM_ServiceRequestsReportTaskReview" TYPE 'SOAP' AS call _SRM.ServiceRequestsReportTaskReview();
CREATE SERVICE "SRM_ServiceRequestsRequiredApprovals" TYPE 'SOAP' AS call _SRM.ServiceRequestsRequiredApprovals();
CREATE SERVICE "SRM_ServiceRequestsRequiredDetails" TYPE 'SOAP' AS call _SRM.ServiceRequestsRequiredDetails();
CREATE SERVICE "SRM_ServiceRequestsStatusItems" TYPE 'SOAP' AS call _SRM.ServiceRequestsStatusItems(:NodeId,
:ServiceRequestExternalID,
:AllTextSearchString,
:StatusToDisplay,
:OrderBy,
:UsePaging,
:RowsPerPage,
:PageToDisplay);
CREATE SERVICE "SRM_ServiceRequestsStatusItemsCount" TYPE 'SOAP' AS call _SRM.ServiceRequestsStatusItemsCount(:NodeId,
:ServiceRequestExternalID,
:AllTextSearchString,
:StatusToDisplay);
CREATE SERVICE "SRM_ServiceRequestStatus" TYPE 'SOAP' AS call _SRM.ServiceRequestStatus(:RowId);
CREATE SERVICE "SRM_ServiceRequestSupportItemSave" TYPE 'SOAP' AS call _SRM.ServiceRequestSupportItemSave(:RowId,:ParentRowId,:ServiceRequestTitle,:ServiceRequestPriority,:OfficeCodeId,:AssignedToUserId,:VesselIds,:PlannedStartDate,:PlannedEndDate,:EstimatedRemainingHours,:ServiceRequestDescription);
CREATE SERVICE "SRM_ServiceRequestsUser" TYPE 'SOAP' AS call _SRM.ServiceRequestsUser();
CREATE SERVICE "SRM_ServiceRequestsUserAssignment" TYPE 'SOAP' AS call _SRM.ServiceRequestsUserAssignment(:RowId,:OfficeCodeId);
CREATE SERVICE "SRM_ServiceRequestsUserPicture" TYPE 'RAW' AS select _SRM.ServiceRequestsUserPicture();
CREATE SERVICE "SRM_ServiceRequestsUserRoles" TYPE 'SOAP' AS call _SRM.ServiceRequestsUserRoles(:NodeId,:OfficeCodeId);
CREATE SERVICE "SRM_ServiceRequestsUserSave" TYPE 'SOAP' AS call _SRM.ServiceRequestsUserSave(:Emails,:PhoneNumber,:UserRole,:OfficeCodeId,:Attachment);
CREATE SERVICE "SRM_ServiceRequestsUsersBranch" TYPE 'SOAP' AS call _SRM.ServiceRequestsUsersBranch(:NodeId);
CREATE SERVICE "SRM_ServiceRequestsUsersBranchSave" TYPE 'SOAP' AS call _SRM.ServiceRequestsUsersBranchSave(:NodeId,:Emails,:PhoneNumber,:UserRole,:OfficeCodeId,:RemoveSupportPerson,:AreYouSure);
CREATE SERVICE "SRM_ServiceRequestsUserStatus" TYPE 'SOAP' AS select _SRM.ServiceRequestsUserStatus();
CREATE SERVICE "SRM_ServiceRequestsUserStatusChange" TYPE 'SOAP' AS call _SRM.ServiceRequestsUserStatusChange(:PersonnelStatus);
CREATE SERVICE "SRM_ServiceRequestsVesselNames" TYPE 'SOAP' AS select _SRM.ServiceRequestsVesselNames(:VesselIds) as VesselNames;
CREATE SERVICE "SRM_SupportedFileTypes" TYPE 'SOAP' AS call _SRM.SupportedFileTypes();
CREATE SERVICE "SRM_TaskManagerReport" TYPE 'SOAP' AS call _SRM.TaskManagerReport(:RowId);
CREATE SERVICE "SRM_TeamMessageGroups" TYPE 'SOAP' AS call _SRM.TeamMessageGroups(
:NodeId,
:ServiceRequestExternalID,
:AllTextSearchString,
:NumberOfDaysToDisplay,
:OrderBy,
:UsePaging,
:RowsPerPage,
:PageToDisplay);
CREATE SERVICE "SRM_TeamMessageGroupUserList" TYPE 'SOAP' AS call _SRM.TeamMessageGroupUserList(:RowId);
CREATE SERVICE "SRM_TeamMessageItems" TYPE 'SOAP' AS call _SRM.TeamMessageItems(:RowId);
CREATE SERVICE "SRM_TeamMessageItemSave" TYPE 'SOAP' AS call _SRM.TeamMessageItemSave(:RowId,:TeamMessageId,:TeamMessageTo,:TeamMessage);
CREATE SERVICE "SRM_TeamMessageMarkAsRead" TYPE 'SOAP' AS call _SRM.TeamMessageMarkAsRead(:RowId);
CREATE SERVICE "SRM_UsersVesselAccess" TYPE 'SOAP' AS call _SRM.UsersVesselAccess(:AccessList);
CREATE SERVICE "SWA_ActionMenuPermissions" TYPE 'SOAP' AS call _SWA.ActionMenuPermissions(:NodeId,:ApplicationId);
CREATE SERVICE "SWA_ApplicationsExportsColumns" TYPE 'SOAP' AS call _SWA.ApplicationsExportsColumns(:ApplicationId,:ColumnData,:GridId);
CREATE SERVICE "SWA_ApplicationsExportsColumnsList" TYPE 'SOAP' AS call _SWA.ApplicationsExportsColumnsList(:ApplicationId,:GridId);
CREATE SERVICE "SWA_ApplicationsExportsDetails" TYPE 'SOAP' AS call _SWA.ApplicationsExportsDetails(:ApplicationId,:GroupByColumnRowId,:GridId);
CREATE SERVICE "SWA_ApplicationsExportsGridId" TYPE 'SOAP' AS select _SWA.ApplicationsExportsGridId(:ServiceName) as GridId;
CREATE SERVICE "SWA_ApplicationsExportsGroupableColumns" TYPE 'SOAP' AS call _SWA.ApplicationsExportsGroupableColumns(:ApplicationId,:GridId);
CREATE SERVICE "SWA_ApplicationsExportsHeaders" TYPE 'SOAP' AS call _SWA.ApplicationsExportsHeaders(:ApplicationId,:HeaderValues,:GridId);
CREATE SERVICE "SWA_ApplicationsExportsSave" TYPE 'SOAP' AS call _SWA.ApplicationsExportsSave(:ApplicationId,:ColumnData,:HeaderValues,:GroupByColumnRowId,:Styles,:GridId);
CREATE SERVICE "SWA_ApplicationsExportsStyles" TYPE 'SOAP' AS call _SWA.ApplicationsExportsStyles(:ApplicationId,:GridId);
CREATE SERVICE "SWA_ApplicationsExportsUsersClear" TYPE 'SOAP' AS call _SWA.ApplicationsExportsUsersClear(:ApplicationId,:GridId,:UserId);
CREATE SERVICE "SWA_ApplicationsExportsUsersColumnsSave" TYPE 'SOAP' AS call _SWA.ApplicationsExportsUsersColumnsSave(:ColumnData,:ApplicationId,:GridId);
CREATE SERVICE "SWA_ApplicationsExportsUsersHeadersSave" TYPE 'SOAP' AS call _SWA.ApplicationsExportsUsersHeadersSave(:ApplicationId,:HeaderValues,:GridId);
CREATE SERVICE "SWA_ApplicationsExportsUsersSave" TYPE 'SOAP' AS call _SWA.ApplicationsExportsUsersSave(:ApplicationId,:GridId,:GroupByColumnRowId);
CREATE SERVICE "SWA_ApplicationsExportsUsersStylesSave" TYPE 'SOAP' AS call _SWA.ApplicationsExportsUsersStylesSave(:ApplicationId,:GridId,:StyleName,:StyleValue);
CREATE SERVICE "SWA_CustomFilterData" TYPE 'SOAP' AS call _SWA.CustomFilterData(:ApplicationId,:Name,:GetDefault);
CREATE SERVICE "SWA_CustomFilterList" TYPE 'SOAP' AS call _SWA.CustomFilterList(:ApplicationId);
CREATE SERVICE "SWA_DashboardDimensions" TYPE 'SOAP' AS call _SWA.DashboardDimensions(:DashboardId);
CREATE SERVICE "SWA_DashboardNavigationTree" TYPE 'SOAP' AS call _SWA.DashboardNavigationTree();
CREATE SERVICE "SWA_DashboardSelectedVessel" TYPE 'SOAP' AS call _SWA.DashboardSelectedVessel();
CREATE SERVICE "SWA_DashboardSelectedVesselUpdate" TYPE 'SOAP' AS call _SWA.DashboardSelectedVesselUpdate(:VesselId);
CREATE SERVICE "SWA_DashboardsList" TYPE 'SOAP' AS call _SWA.DashboardsList();
CREATE SERVICE "SWA_DashboardsWidgetsDelete" TYPE 'SOAP' AS call _SWA.DashboardsWidgetsDelete(:DashboardId,:WidgetId);
CREATE SERVICE "SWA_DashboardsWidgetsSettings" TYPE 'SOAP' AS call _SWA.DashboardsWidgetsSettings(:DashboardId,:WidgetId,:WidgetPosition,:WidgetTop,:WidgetLeft,:WidgetHeight,:WidgetWidth);
CREATE SERVICE "SWA_DashboardWidgetsLibrary" TYPE 'SOAP' AS call _SWA.DashboardWidgetsLibrary(:DashboardId);
CREATE SERVICE "SWA_DashboardWidgetsList" TYPE 'SOAP' AS call _SWA.DashboardWidgetsList(:DashboardId);
CREATE SERVICE "SWA_DashboardWidgetXML" TYPE 'RAW' AS select _SWA.DashboardWidgetXML(:WidgetId)
  from DUMMY;
CREATE SERVICE "SWA_DashboardWidgetXSLT" TYPE 'RAW' AS select _SWA.DashboardWidgetXSLT(:WidgetId,:Location)
  from DUMMY;
CREATE SERVICE "SWA_EmpriseExceptionLog" TYPE 'SOAP' AS select-1 as id;
CREATE SERVICE "SWA_EquipmentListDateLoad" TYPE 'SOAP' AS call _SWA.EquipmentListDateLoad(:GetDefault);
CREATE SERVICE "SWA_EquipmentReportConfiguration" TYPE 'SOAP' AS call _SWA.EquipmentReportConfiguration();
CREATE SERVICE "SWA_EquipmentReportEquipment" TYPE 'SOAP' AS call _SWA.EquipmentReportEquipment(:VesselIds,:EquipmentScopeId,:HierarchyType,:ParentNodeId,:SelectedNodeIds,:SearchText);
CREATE SERVICE "SWA_EquipmentReportEquipmentHierarchies" TYPE 'SOAP' AS call _SWA.EquipmentReportEquipmentHierarchies();
CREATE SERVICE "SWA_EquipmentReportEquipmentLoad" TYPE 'SOAP' AS call _SWA.EquipmentReportEquipmentLoad(:EquipmentScopeId,:VesselIds);
CREATE SERVICE "SWA_EquipmentReportEquipmentReports" TYPE 'SOAP' AS call _SWA.EquipmentReportEquipmentReports();
CREATE SERVICE "SWA_EquipmentReportEquipmentScopes" TYPE 'SOAP' AS call _SWA.EquipmentReportEquipmentScopes();
CREATE SERVICE "SWA_EquipmentReportEquipmentSelected" TYPE 'SOAP' AS call _SWA.EquipmentReportEquipmentSelected(:VesselIds,:HierarchyType,:ParentNodeId,:SearchText,:SelectedNodeIds);
CREATE SERVICE "SWA_EquipmentReportOrderBy" TYPE 'SOAP' AS call _SWA.EquipmentReportOrderBy();
CREATE SERVICE "SWA_EquipmentReportVessels" TYPE 'SOAP' AS call _SWA.EquipmentReportVessels();
CREATE SERVICE "SWA_FilterAdvancedComparators" TYPE 'SOAP' AS call _SWA.FilterAdvancedComparators();
CREATE SERVICE "SWA_FilterAdvanceToBasicMapping" TYPE 'SOAP' AS call _SWA.FilterAdvancedToBasicMapping();
CREATE SERVICE "SWA_GFMReportData" TYPE 'SOAP' AS call _SWA.GFMReportData(:VesselId,:AvailabilityId);
CREATE SERVICE "SWA_GFMReportHeader" TYPE 'SOAP' AS call _SWA.GFMReportHeader(:VesselId,:AvailabilityId);
CREATE SERVICE "SWA_GFMReportSheetName" TYPE 'SOAP' AS call _SWA.GFMReportSheetName(:VesselId,:AvailabilityId);
CREATE SERVICE "SWA_GridSavedColumnsLoad" TYPE 'SOAP' AS select _SWA.GridSavedColumnsLoad(:ApplicationId) as SavedColumns;
CREATE SERVICE "SWA_GridSavedColumnsSave" TYPE 'SOAP' AS call _SWA.GridSavedColumnsSave(:ApplicationId,:SavedColumns);
CREATE SERVICE "SWA_JasperReportUpdate" TYPE 'SOAP' AS call _SWA.JasperReportUpdate(:ReportId,:JasperDocument,:DocType);
CREATE SERVICE "SWA_MaintenanceCanComplete" TYPE 'SOAP' AS call _SWA.MaintenanceCanComplete(:RowIds);
CREATE SERVICE "SWA_MaintenanceCriticalityLevels" TYPE 'SOAP' AS call _SWA.MaintenanceCriticalityLevels();
CREATE SERVICE "SWA_MaintenanceCriticalityVessels" TYPE 'SOAP' AS call _SWA.MaintenanceCriticalityVessels(:VesselIds);
CREATE SERVICE "SWA_MEBCReportVessels" TYPE 'SOAP' AS call _SWA.MEBCReportVessels(:VesselIds);
CREATE SERVICE "SWA_ModuleRetrievalParallel" TYPE 'SOAP' AS select 1 as UseParallel;
CREATE SERVICE "SWA_Navigation" TYPE 'SOAP' AS call _SWA.Navigation(:Module,:NodeType,:NodeId);
COMMENT ON SERVICE "SWA_Navigation" IS 'RMannix 2013-06-19: Filters only on Users Vessels';
CREATE SERVICE "SWA_NavigationStateLoad" TYPE 'SOAP' AS call _SWA.NavigationStateLoad();
CREATE SERVICE "SWA_NavigationStateSave" TYPE 'SOAP' AS call _SWA.NavigationStateSave(:NavPinned,:NavOpen);
CREATE SERVICE "SWA_NavigationTree" TYPE 'SOAP' AS call _SWA.NavigationTree(:ApplicationId,:NodeType,:NodeId,:SearchQuery);
CREATE SERVICE "SWA_PENGJSON" TYPE 'SOAP' AS select _SWA.LaunchPengJavaScriptObjectNotation(:NodeId,:RowId,:ApplicationId) as PENGJSON;
CREATE SERVICE "SWA_ReportCategories" TYPE 'SOAP' AS call _SWA.ReportCategories(:Module);
CREATE SERVICE "SWA_ReportConfiguration" TYPE 'RAW' AS select _SWA.ReportConfiguration(:ReportId);
CREATE SERVICE "SWA_ReportDetails" TYPE 'SOAP' AS call _SWA.ReportDetails(:ApplicationId,:ReportType);
CREATE SERVICE "SWA_ReportGenerateSEAS" TYPE 'RAW' AS select Report
  from _SWA.ReportGenerateSEAS(:ReportId,:Parameters);
CREATE SERVICE "SWA_ReportListCategories" TYPE 'SOAP' AS call _SWA.ReportListCategories();
CREATE SERVICE "SWA_ReportListDescription" TYPE 'SOAP' AS call _SWA.ReportListDescription(:ReportId);
CREATE SERVICE "SWA_ReportListGrid" TYPE 'SOAP' AS call _SWA.ReportListGrid(:CatId);
CREATE SERVICE "SWA_ReportPDF" TYPE 'SOAP' AS call _SWA.ReportPDF(:ReportId);
CREATE SERVICE "SWA_Reports" TYPE 'SOAP' AS call _SWA.Reports(:ReportCategoryId);
CREATE SERVICE "SWA_ReportsTransitionDeferredActionSummary" TYPE 'SOAP' AS call "_SWA"."ReportsTransitionDeferredActionSummary"(:VesselIds,:StartDate,:EndDate);
CREATE SERVICE "SWA_ReportTemplate" TYPE 'RAW' AS select ReportTemplate
  from _SWA.ReportTemplate(:ReportId);
CREATE SERVICE "SWA_ResetUserSettings" TYPE 'SOAP' AS call "_SWA"."ResetUserSettings"(:UserId,:ApplicationId,:ResetFilter,:ResetNode,:ResetOrderBy);
CREATE SERVICE "SWA_SessionsCreate" TYPE 'SOAP' AS select _SWA.SessionsCreate() as Token;
CREATE SERVICE "SWA_SessionsCredentials" TYPE 'SOAP' AS call _SWA.SessionsCredentials(:Token);
CREATE SERVICE "SWA_SessionsExpirationDetails" TYPE 'SOAP' AS call _SWA.SessionsExpirationDetails(:Token);
CREATE SERVICE "SWA_SessionsInvalidate" TYPE 'SOAP' AS call _SWA.SessionsInvalidate(:Token);
CREATE SERVICE "SWA_SessionsValidate" TYPE 'SOAP' AS select _SWA.SessionsValidate(:Token) as Active;
CREATE SERVICE "SWA_SmartVesselInspections" TYPE 'SOAP' AS call _SWA.SmartVesselInspections(:ApplicationId,:RowId,:VesselId);
CREATE SERVICE "SWA_SmartVesselReport" TYPE 'SOAP' AS call _SWA.SmartVesselReport(:VesselId,:InspectionId);
CREATE SERVICE "SWA_SuggestionsAttachmentSave" TYPE 'SOAP' AS call _SWA.SuggestionsAttachmentSave(:SuggestionId,:SuggestionAttachmentFileName,:SuggestionDocument);
COMMENT ON SERVICE "SWA_SuggestionsAttachmentSave" IS '2013.07.16 rbh Created';
CREATE SERVICE "SWA_SuggestionsDialog" TYPE 'SOAP' AS call _SWA.SuggestionsDialog();
COMMENT ON SERVICE "SWA_SuggestionsDialog" IS '2013.07.16 rbh Created';
CREATE SERVICE "SWA_SuggestionsSave" TYPE 'SOAP' AS call _SWA.SuggestionsSave(:SuggestionToId,:SuggestionTo,:SuggestionFromId,:SuggestionFrom,:SuggestionType,:Subject,:Message);
COMMENT ON SERVICE "SWA_SuggestionsSave" IS '2013.07.16 rbh Created';
CREATE SERVICE "SWA_SuggestionTypes" TYPE 'SOAP' AS call _SWA.SuggestionTypes();
COMMENT ON SERVICE "SWA_SuggestionTypes" IS '2013.07.16 rbh Created';
CREATE SERVICE "SWA_SupportedFileTypes" TYPE 'SOAP' AS call _SWA.SupportedFileTypes();
CREATE SERVICE "SWA_TransAltCategorySummaryReport" TYPE 'SOAP' AS call _SWA.TransAltCategorySummaryReport(:VesselClassId);
CREATE SERVICE "SWA_TransAltInstallStatusReport" TYPE 'SOAP' AS call _SWA.TransAltInstallStatusReport(:VesselClassId);
CREATE SERVICE "SWA_TransAltPrioritySummaryReport" TYPE 'SOAP' AS call _SWA.TransAltPrioritySummaryReport(:VesselClassId);
CREATE SERVICE "SWA_TransAltRequestTotalsByCategoryReport" TYPE 'SOAP' AS call _SWA.TransAltRequestTotalsByCategoryReport(:VesselClassId);
CREATE SERVICE "SWA_TransAltRequestTotalsByPriorityReport" TYPE 'SOAP' AS call _SWA.TransAltRequestTotalsByPriorityReport(:VesselClassId);
CREATE SERVICE "SWA_TransAltUninstalledEstimatesByCategoryReport" TYPE 'SOAP' AS call _SWA.TransAltUninstalledEstimatesByCategoryReport(:VesselClassId);
CREATE SERVICE "SWA_TransAltUninstalledEstimatesByPriorityReport" TYPE 'SOAP' AS call _SWA.TransAltUninstalledEstimatesByPriorityReport(:VesselClassId);
CREATE SERVICE "SWA_UserLogin" TYPE 'SOAP' AS call _SWA.UserLogin(:UserLoginId,:UserPassword);
CREATE SERVICE "SWA_UserLoginById" TYPE 'SOAP' AS call _SWA.UserLoginById(:UserLoginId);
CREATE SERVICE "SWA_UserPermissionSelect" TYPE 'SOAP' AS select _SWA.UserPermissionSelect(:ApplicationId,:PermissionId,:NodeId,:RowId) as HasPermission;
CREATE SERVICE "SWA_UsersDashboardsDelete" TYPE 'SOAP' AS call _SWA.UsersDashboardsDelete(:DashboardId);
CREATE SERVICE "SWA_UsersDashboardsSettings" TYPE 'SOAP' AS call _SWA.UsersDashboardsSettings(:DashboardOrder,:DashboardType,:DashboardTitle,:DashboardCols,:DashboardRows,:DashboardId);
CREATE SERVICE "SWA_UsersFiltersDelete" TYPE 'SOAP' AS call _SWA.UsersFiltersDelete(:FilterIds,:Type);
CREATE SERVICE "SWA_UsersFiltersGrid" TYPE 'SOAP' AS call _SWA.UsersFiltersGrid(:ApplicationId,:Type,:OrderBy);
CREATE SERVICE "SWA_UsersFiltersSave" TYPE 'SOAP' AS call "_SWA"."UsersFiltersSave"(:ApplicationId,:Data,:AndOr,:IsAdvanced,:IsEncoded);
CREATE SERVICE "SWA_UsersFiltersSaveAs" TYPE 'SOAP' AS call _SWA.UsersFiltersSaveAs(:ApplicationId,:Description);
CREATE SERVICE "SWA_UsersFiltersSelect" TYPE 'SOAP' AS call _SWA.UsersFiltersSelect(:FilterId);
CREATE SERVICE "SWA_UsersSSTMMLVesselsClassesList" TYPE 'SOAP' AS call _SWA.UsersSSTMMLVesselsClassesList();
CREATE SERVICE "SWA_UsersVesselAccess" TYPE 'SOAP' AS call _SWA.UsersVesselAccess(:AccessList);
CREATE SERVICE "SWA_UsersVesselList" TYPE 'SOAP' AS call _SWA.UsersVesselList(:ApplicationId);
CREATE SERVICE "SWA_VesselClasses" TYPE 'SOAP' AS call _SWA.VesselClasses(:ApplicationId);
CREATE SERVICE "SWA_VesselEquipmentLubeOilLabels" TYPE 'SOAP' AS call _SWA.VesselEquipmentLubeOilLabels(:VesselId,:Statuses,:RowIds);
CREATE SERVICE "SWA_VesselFilterList" TYPE 'SOAP' AS call _SWA.VesselFilterList(:ApplicationId,:GetDefault);
CREATE SERVICE "SWA_WorkListItemsEquipments" TYPE 'SOAP' AS call _SWA.WorkListItemsEquipments(:NodeId,:RowId,:Module);
CREATE SERVICE "SWA_WorkListItemsEquipmentsCosts" TYPE 'SOAP' AS call _SWA.WorkListItemsEquipmentsCosts(:ModuleNodeId,:ModuleRowId,:EquipmentRowId,:RowType,:ApplicationId);
CREATE SERVICE "SWA_WorkListItemsEquipmentsMaintenance" TYPE 'SOAP' AS call _SWA.WorkListItemsEquipmentsMaintenance(:ModuleNodeId,:ModuleRowId,:EquipmentRowId,:RowType,:ApplicationId);
CREATE SERVICE "SWA_WorkListItemsEquipmentsParts" TYPE 'SOAP' AS call _SWA.WorkListItemsEquipmentsParts(:ModuleNodeId,:ModuleRowId,:EquipmentRowId,:RowType,:Module);
CREATE SERVICE "SWA_WorkListItemsEquipmentsPermissions" TYPE 'SOAP' AS call _SWA.WorkListItemsEquipmentsPermissions(:NodeId,:RowId,:ApplicationId);
CREATE SERVICE "SWA_WorkListItemsEquipmentsReferences" TYPE 'RAW' AS select _SWA.WorkListItemsEquipmentsReferences(:RowId) as Data;
CREATE SERVICE "SWA_WorkListItemsEquipmentsTotals" TYPE 'SOAP' AS call _SWA.WorkListItemsEquipmentsTotals(:NodeId,:RowId,:ApplicationId);
CREATE SERVICE "TAE_AdditionalDetailsGrid" TYPE 'SOAP' AS call _TAE.AdditionalDetailsGrid(:RowId);
CREATE SERVICE "TAE_ApplicationId" TYPE 'SOAP' AS select _TAE.ApplicationId() as ApplicationId;
CREATE SERVICE "TAE_AttachmentDownload" TYPE 'RAW' AS select _TAE.AttachmentDownload(:RowId);
CREATE SERVICE "TAE_AvailabilityTypes" TYPE 'SOAP' AS call _TAE.AvailabilityTypes();
CREATE SERVICE "TAE_CCOAdd" TYPE 'SOAP' AS call "_TAE"."CCOAdd"(:RowId,:CCO);
CREATE SERVICE "TAE_CCORemove" TYPE 'SOAP' AS call "_TAE"."CCORemove"(:RowId);
CREATE SERVICE "TAE_CloseoutPermissions" TYPE 'SOAP' AS call _TAE.CloseoutPermissions(:RowId);
CREATE SERVICE "TAE_CompletionPermissions" TYPE 'SOAP' AS call "_TAE"."CompletionPermissions"(:RowId);
CREATE SERVICE "TAE_DefaultWorkItem" TYPE 'SOAP' AS call _TAE.DefaultWorkItem(:RowId,:ContractId);
CREATE SERVICE "TAE_Description" TYPE 'SOAP' AS call "_TAE"."TransaltItemsDescription"(:RowId,:IsEncoded);
CREATE SERVICE "TAE_EstimateDownload" TYPE 'RAW' AS select _TAE.EstimateDownload(:RowId);
CREATE SERVICE "TAE_ExecutionAssociatedWorkItems" TYPE 'SOAP' AS call _TAE.ExecutionAssociatedWorkItems(:RowId);
CREATE SERVICE "TAE_ExecutionAttachmentDelete" TYPE 'SOAP' AS call _TAE.ExecutionAttachmentDelete(:RowId,:AttachmentId);
CREATE SERVICE "TAE_ExecutionAttachmentSave" TYPE 'SOAP' AS call _TAE.ExecutionAttachmentSave(:RowId,:AttachmentType,:DocumentNumber,:DocumentTitle,:FileName,:AttachmentData,:NotAvailable);
CREATE SERVICE "TAE_ExecutionAvailabilities" TYPE 'SOAP' AS call _TAE.ExecutionAvailabilities(:RowId,:AvailabilityId);
CREATE SERVICE "TAE_ExecutionComplete" TYPE 'SOAP' AS call _TAE.ExecutionComplete(:RowId,:CompletionTimestamp);
CREATE SERVICE "TAE_ExecutionCompletionAttachments" TYPE 'SOAP' AS call _TAE.ExecutionCompletionAttachments(:RowId);
CREATE SERVICE "TAE_ExecutionEmailComment" TYPE 'SOAP' AS call "_TAE"."ExecutionEmailComment"(:RowId,:EmailAdresses,:EmailText);
CREATE SERVICE "TAE_ExecutionFacilities" TYPE 'SOAP' AS call _TAE.ExecutionFacilities();
CREATE SERVICE "TAE_ExecutionGeneral" TYPE 'SOAP' AS call _TAE.ExecutionGeneral(:RowId);
CREATE SERVICE "TAE_ExecutionGeneralSave" TYPE 'SOAP' AS call "_TAE"."ExecutionGeneralSave"(
:RowId,
:PENGExecution,
:GFMCost,
:InstallingActivity,
:Comments,
:InstalledEquipment,
:NameplateInfo,
:ManualChanges,
:DrawingChanges,
:ALLTSD,
:ILSRepOnsite,
:ILSRepNames,
:MASPComplete,
:TSDDistributed,
:WorkComplete,
:ContractNumber,
:AvailabilityType,
:WorkItemNumber,
:StartDate,
:CompletionDate,
:FacilityId,
:WorkItemCost,
:TotalCost,
:VesselStatus,
:SponsorCost);
CREATE SERVICE "TAE_ExecutionStatus" TYPE 'SOAP' AS call _TAE.ExecutionStatus(:RowId,:OrderBy);
CREATE SERVICE "TAE_ExecutionStatusAll" TYPE 'SOAP' AS call "_TAE"."ExecutionStatusAll"(
:RowId,
:OrderBy,
:VesselStatus);
CREATE SERVICE "TAE_ExecutionWorkItemAdd" TYPE 'SOAP' AS call "_TAE"."ExecutionWorkItemAdd"(:RowId,:WorkItemId,:ContractId,:AvailabilityId,:IncludeAwardedPrice);
CREATE SERVICE "TAE_ExecutionWorkItemDetails" TYPE 'SOAP' AS call _TAE.ExecutionWorkItemDetails(:RowId);
CREATE SERVICE "TAE_ExecutionWorkItemRemove" TYPE 'SOAP' AS call _TAE.ExecutionWorkItemRemove(:RowId,:WorkItemIds);
CREATE SERVICE "TAE_ExecutionWorkItems" TYPE 'SOAP' AS call _TAE.ExecutionWorkItems(:RowId,:OrderBy);
CREATE SERVICE "TAE_ExecutionWorkPackages" TYPE 'SOAP' AS call _TAE.ExecutionWorkPackages(:RowId,:AvailabilityId,:ContractId);
CREATE SERVICE "TAE_ExecutionWPWorkItems" TYPE 'SOAP' AS call _TAE.ExecutionWPWorkItems(:RowId,:AvailabilityId,:WorkPackageId,:WorkItemId);
CREATE SERVICE "TAE_ExpenditureTypes" TYPE 'SOAP' AS call _TAE.ExpenditureTypes();
CREATE SERVICE "TAE_FilterAdvancedAttributes" TYPE 'SOAP' AS call _TAE.FilterAdvancedAttributes();
CREATE SERVICE "TAE_FilterAdvancedLoad" TYPE 'SOAP' AS call _TAE.FilterAdvancedLoad();
CREATE SERVICE "TAE_FilterAdvancedSave" TYPE 'SOAP' AS call _TAE.FilterAdvancedSave(:Module,:AndOr,:JSONValues);
CREATE SERVICE "TAE_FilterAdvancedToBasicMapping" TYPE 'SOAP' AS call _TAE.FilterAdvancedToBasicMapping();
CREATE SERVICE "TAE_FilterComparators" TYPE 'SOAP' AS call _TAE.FilterComparators();
CREATE SERVICE "TAE_FilterInformation" TYPE 'SOAP' AS call _TAE.FilterInformation();
CREATE SERVICE "TAE_FilterListCategories" TYPE 'SOAP' AS call _TAE.FilterListCategoryLoad(:GetDefault);
CREATE SERVICE "TAE_FilterListDates" TYPE 'SOAP' AS call _TAE.FilterListApprovalDateLoad(:GetDefault);
CREATE SERVICE "TAE_FilterListPriority" TYPE 'SOAP' AS call _TAE.FilterListPriorityLoad(:GetDefault);
CREATE SERVICE "TAE_FilterListStatuses" TYPE 'SOAP' AS call _TAE.FilterListVesselsStatusLoad(:GetDefault);
CREATE SERVICE "TAE_FilterListStatusLoad" TYPE 'SOAP' AS call _TAE.FilterListStatusLoad(:GetDefault);
CREATE SERVICE "TAE_FilterListText" TYPE 'SOAP' AS call _TAE.FilterListText(:GetDefault);
CREATE SERVICE "TAE_LessonLearnedSave" TYPE 'SOAP' AS call _TAE.LessonLearnedSave(:RowId,:LessonLearned);
CREATE SERVICE "TAE_LessonsLearned" TYPE 'SOAP' AS call _TAE.TransaltLessonsLearned(:RowId);
CREATE SERVICE "TAE_Navigation" TYPE 'SOAP' AS call _TAE.Navigation(:NodeType,:NodeId);
CREATE SERVICE "TAE_Priorities" TYPE 'SOAP' AS call _TAE.TransAltPriorities();
CREATE SERVICE "TAE_QuickEditCommentsSave" TYPE 'SOAP' AS call _TAE.QuickEditCommentsSave(:RowId,:Comments);
CREATE SERVICE "TAE_QuickEditDetails" TYPE 'SOAP' AS call _TAE.QuickEditDetails(:RowId);
CREATE SERVICE "TAE_QuickEditSave" TYPE 'SOAP' AS call _TAE.QuickEditSave(:RowId,:AvailabilityId,:WorkPackageId,:WorkItemNumber);
CREATE SERVICE "TAE_ReportDetails" TYPE 'SOAP' AS call "_TAE"."ReportDetails"(:ApplicationId);
CREATE SERVICE "TAE_SFWLAdd" TYPE 'SOAP' AS call "_TAE"."SFWLAdd"(:TransaltRowId,:SFWLRowId);
CREATE SERVICE "TAE_SFWLRemove" TYPE 'SOAP' AS call "_TAE"."SFWLRemove"(:TransaltRowId,:SFWLRowId);
CREATE SERVICE "TAE_Shipyards" TYPE 'SOAP' AS call _TAE.Shipyards();
CREATE SERVICE "TAE_Specification" TYPE 'RAW' AS select _TAE.TransaltSpecification(:RowId) as DocumentData;
CREATE SERVICE "TAE_SpecificationRevisions" TYPE 'SOAP' AS call _TAE.SpecificationRevisions(:RowId);
CREATE SERVICE "TAE_Statuses" TYPE 'SOAP' AS call _TAE.TransaltsVesselsStatus();
CREATE SERVICE "TAE_SupportedFileTypes" TYPE 'SOAP' AS call _TAE.SupportedFileTypes();
CREATE SERVICE "TAE_TransaltAttachmentTypes" TYPE 'SOAP' AS call _TAE.TransaltAttachmentTypes();
CREATE SERVICE "TAE_TransaltCloseOutSave" TYPE 'SOAP' AS call _TAE.TransaltCloseOutSave(:RowId,:AvailabilityId,:WorkPackageId,:WorkItemId);
CREATE SERVICE "TAE_TransaltDetailsAttachments" TYPE 'SOAP' AS call "_TAE"."TransaltDetailsAttachments"(:RowId,:IsEncoded);
CREATE SERVICE "TAE_TransAltDetailsCategories" TYPE 'SOAP' AS call _TAE.TransAltDetailsCategories();
CREATE SERVICE "TAE_TransaltDetailsGeneral" TYPE 'SOAP' AS call "_TAE"."TransaltDetailsGeneral"(:RowId,:IsEncoded);
CREATE SERVICE "TAE_TransAltDetailsSWBS" TYPE 'SOAP' AS call _TAE.TransAltDetailsSWBS();
CREATE SERVICE "TAE_TransaltItems" TYPE 'SOAP' AS call _TAE.TransaltItems(:NodeId,:OrderBy,:IsLimited);
CREATE SERVICE "TAE_TransaltReportSummary" TYPE 'SOAP' AS call _TAE.TransaltReportSummary(:RowId);
CREATE SERVICE "TAE_TransaltsCommentSave" TYPE 'SOAP' AS call "_TAE"."TransaltsCommentSave"(:TransaltId,:VesselId,:ShipStatus,:Comment,:IsEncoded);
CREATE SERVICE "TAE_TransaltsVesselStatus" TYPE 'SOAP' AS call _TAE.TransaltsVesselStatus();
CREATE SERVICE "TAE_UsersVesselAccess" TYPE 'SOAP' AS call _TAE.UsersVesselAccess(:AccessList);
CREATE SERVICE "TAE_VesselSubClass" TYPE 'SOAP' AS call "_TAE"."VesselSubClass"(:VesselId);
CREATE SERVICE "TAE_WorkItemModifications" TYPE 'SOAP' AS call "_TAE"."WorkItemModifications"(:VesselId,:WorkItemId,:RowId);
CREATE SERVICE "TAE_WorkItemModificationSpecification" TYPE 'SOAP' AS call "_TAE"."WorkItemModificationSpecification"(:VesselId,:WorkItemId,:WorkItemModId,:RowId);
CREATE SERVICE "TAE_WorkPackages" TYPE 'SOAP' AS call _TAE.WorkPackages(:RowId,:AvailabilityId,:ContractId);
CREATE SERVICE "TAR_AdditionalDetailsGrid" TYPE 'SOAP' AS call _TAR.AdditionalDetailsGrid(:RowId);
CREATE SERVICE "TAR_Applicationid" TYPE 'SOAP' AS select _TAR.ApplicationId();
CREATE SERVICE "TAR_AttachmentDownload" TYPE 'RAW' AS select _TAR.AttachmentDownload(:RowId);
CREATE SERVICE "TAR_AttachmentSettings" TYPE 'SOAP' AS call _TAR.AttachmentSettings();
CREATE SERVICE "TAR_CanAddComment" TYPE 'SOAP' AS call "_TAR"."CanAddComment"(:RowId);
CREATE SERVICE "TAR_CurrentUserNodeId" TYPE 'SOAP' AS call _TAR.CurrentUserNodeId();
CREATE SERVICE "TAR_DescriptionSettings" TYPE 'SOAP' AS call _TAR.DescriptionSettings();
CREATE SERVICE "TAR_ExecutionStatus" TYPE 'SOAP' AS call _TAE.ExecutionStatus(:RowId,:OrderBy);
CREATE SERVICE "TAR_FilterAdvancedAttributes" TYPE 'SOAP' AS call _TAR.FilterAdvancedAttributes();
CREATE SERVICE "TAR_FilterAdvancedLoad" TYPE 'SOAP' AS call _TAR.FilterAdvancedLoad();
CREATE SERVICE "TAR_FilterAdvancedSave" TYPE 'SOAP' AS call _TAR.FilterAdvancedSave(:Module,:AndOr,:JSONValues);
CREATE SERVICE "TAR_FilterAdvancedToBasicMapping" TYPE 'SOAP' AS call _TAR.FilterAdvancedToBasicMapping();
CREATE SERVICE "TAR_FilterListCategories" TYPE 'SOAP' AS call _TAR.FilterListCategoryLoad(:GetDefault);
CREATE SERVICE "TAR_FilterListDates" TYPE 'SOAP' AS call _TAR.FilterListRequestDateLoad(:GetDefault);
CREATE SERVICE "TAR_FilterListPriority" TYPE 'SOAP' AS call _TAR.FilterListPriorityLoad(:GetDefault);
CREATE SERVICE "TAR_FilterListStatuses" TYPE 'SOAP' AS call _TAR.FilterListStatusLoad(:GetDefault);
CREATE SERVICE "TAR_FilterListText" TYPE 'SOAP' AS call _TAR.FilterListText();
CREATE SERVICE "TAR_FilterListVesselsLoad" TYPE 'SOAP' AS call _TAR.FilterListVesselsLoad(:GetDefault);
CREATE SERVICE "TAR_Navigation" TYPE 'SOAP' AS call _TAR.Navigation(:NodeType,:NodeId);
CREATE SERVICE "TAR_NodeTypeSelect" TYPE 'SOAP' AS call _TAR.NodeTypeSelect();
CREATE SERVICE "TAR_SupportedFileTypes" TYPE 'SOAP' AS call _TAR.SupportedFileTypes();
CREATE SERVICE "TAR_TransaltActivitiesPermissions" TYPE 'SOAP' AS call _TAR.TransaltActivitiesPermissions(:RowId);
CREATE SERVICE "TAR_TransaltCompletionRelatedItems" TYPE 'SOAP' AS call "_TAR"."TransaltCompletionRelatedItems"(:RowId);
CREATE SERVICE "TAR_TransaltIGE" TYPE 'RAW' AS select _TAR.TransaltIGE(:RowId);
CREATE SERVICE "TAR_TransaltIGESave" TYPE 'SOAP' AS call _TAR.TransaltIGESave(:RowId,
:EstimateIsActive,
:EstimateFileName,
:Estimate,
:LaborHours,
:LaborRate,
:LaborDollars,
:OtherDollars);
CREATE SERVICE "TAR_TransaltRequestAffectedSystems" TYPE 'SOAP' AS call _TAR.TransaltAffectedSystems();
CREATE SERVICE "TAR_TransAltRequestCategories" TYPE 'SOAP' AS call _TAR.TransaltCategories();
CREATE SERVICE "TAR_TransaltRequestItemDetails" TYPE 'SOAP' AS call _TAR.TransaltRequestItemDetails(:RowId,:Action,:IsEncoded);
CREATE SERVICE "TAR_TransaltRequestItemDetailsSave" TYPE 'SOAP' AS call _TAR.TransaltRequestItemDetailsSave(:RowId,:VesselClass,:RequestNumber,:TransaltTitle,:TransaltNumber,:TransaltType,:SWBS,:Priority,
:Category,:Status,:SourceItem,:AffectedSystem,:TransaltDescription,:RequestDate,:ApprovalDate,:ROM,:IsEncoded);
CREATE SERVICE "TAR_TransaltRequestItems" TYPE 'SOAP' AS call _TAR.TransaltRequestItems(:NodeId,:OrderBy,:UsePaging,:RowsPerPage,:PageToDisplay);
CREATE SERVICE "TAR_TransaltRequestItemsExport" TYPE 'SOAP' AS call _TAR.TransaltRequestItemsExport(:NodeId,:OrderBy,:UsePaging,:RowsPerPage,:PageToDisplay);
CREATE SERVICE "TAR_TransaltRequestNumber" TYPE 'SOAP' AS select _TAR.TransaltRequestNumber(:RowId,:VesselClass) as RequestNumber;
CREATE SERVICE "TAR_TransaltRequestNumberGetClass" TYPE 'SOAP' AS call _TAR.TransaltRequestNumberGetClass(:RowId);
CREATE SERVICE "TAR_TransaltRequestPriorities" TYPE 'SOAP' AS call _TAR.TransaltPriorities();
CREATE SERVICE "TAR_TransaltRequestsEmailComment" TYPE 'SOAP' AS call _TAR.TransaltRequestsEmailComment(:RowId,
:EmailAdresses,
:EmailText);
CREATE SERVICE "TAR_TransaltRequestSourceItems" TYPE 'SOAP' AS call _TAR.TransaltsSourceItems();
CREATE SERVICE "TAR_TransaltRequestStatuses" TYPE 'SOAP' AS call _TAR.TransaltStatuses(:RowId);
CREATE SERVICE "TAR_TransAltRequestSWBS" TYPE 'SOAP' AS call _TAR.TransaltRequestSWBS();
CREATE SERVICE "TAR_TransaltRequestTypes" TYPE 'SOAP' AS call _TAR.TransaltTypes();
CREATE SERVICE "TAR_TransaltsAttachmentInsert" TYPE 'SOAP' AS call _TAR.TransaltsAttachmentInsert(:RowId,:AttachmentName,:AttachmentDescription,:AttachmentData,:Enclosure,:AttachmentType);
CREATE SERVICE "TAR_TransaltsAttachments" TYPE 'SOAP' AS call _TAR.TransaltsAttachments(:RowId);
CREATE SERVICE "TAR_TransaltsAttachmentSave" TYPE 'SOAP' AS call _TAR.TransaltsAttachmentSave(:RowId,:AttachmentType,:TransaltAttachIsActive,:AttachmentFileName,:Attachment);
CREATE SERVICE "TAR_TransaltsAttachmentsEstimates" TYPE 'SOAP' AS call _TAR.TransaltsAttachmentsEstimates(:RowId);
CREATE SERVICE "TAR_TransaltsAttachmentsSpecifications" TYPE 'SOAP' AS call _TAR.TransaltsAttachmentsSpecifications(:RowId);
CREATE SERVICE "TAR_TransaltsAttachmentsTypes" TYPE 'SOAP' AS call _TAR.TransaltsAttachmentsTypes();
CREATE SERVICE "TAR_TransaltsAttachmentValidation" TYPE 'SOAP' AS call _TAR.TransaltsAttachmentValidation(:AttachmentFileName,:AttachmentFileSize,:Attachment);
CREATE SERVICE "TAR_TransaltsDescription" TYPE 'SOAP' AS call _TAR.TransaltsDescription(:RowId);
CREATE SERVICE "TAR_TransaltSelection" TYPE 'SOAP' AS call _TAR.TransaltSelection(:AllText);
CREATE SERVICE "TAR_TransaltServiceRequestItemSave" TYPE 'SOAP' AS call _TAR.TransaltsServiceRequestItemSave(:ParentRowId);
CREATE SERVICE "TAR_TransaltsExecutionPlan" TYPE 'SOAP' AS call _TAR.TransaltsExecutionPlan(:RowId);
CREATE SERVICE "TAR_TransaltsExecutionPlanDelete" TYPE 'SOAP' AS call _TAR.TransaltsExecutionPlanDelete(:RowId);
CREATE SERVICE "TAR_TransaltsExecutionPlanSave" TYPE 'SOAP' AS call _TAR.TransaltsExecutionPlanSave(:RowId,:VesselId,:FiscalYear,:EstimatedCost);
CREATE SERVICE "TAR_TransaltSpecification" TYPE 'RAW' AS select _TAR.TransaltSpecification(:RowId) as DocumentData;
CREATE SERVICE "TAR_TransaltSpecificationSave" TYPE 'SOAP' AS call _TAR.TransaltSpecificationSave(:RowId,:SpecificationIsActive,:SpecificationFileName,:Specification);
CREATE SERVICE "TAR_TransaltsProgress" TYPE 'SOAP' AS call "_TAR"."TransaltsProgress"(:RowId,:Filter,:VesselRowId);
CREATE SERVICE "TAR_TransaltsProgressCommentSave" TYPE 'SOAP' AS call "_TAR"."TransaltsProgressCommentSave"(:RowId,:TransaltComment,:VesselId);
CREATE SERVICE "TAR_TransaltsProgressFilters" TYPE 'SOAP' AS call _TAR.TransaltsProgressStatuses();
CREATE SERVICE "TAR_TransaltsProgressVessels" TYPE 'SOAP' AS call "_TAR"."TransaltsProgressVessels"(:RowId);
CREATE SERVICE "TAR_TransaltsQuickEdit" TYPE 'SOAP' AS call _TAR.TransaltsQuickEdit(:RowId);
CREATE SERVICE "TAR_TransaltsQuickEditSave" TYPE 'SOAP' AS call "_TAR"."TransaltsQuickEditSave"(:RowId,:Status,:Priority,:ReviewStatus,:TransaltComment,:ApprovalDate);
CREATE SERVICE "TAR_TransaltsRelatedItems" TYPE 'SOAP' AS call _TAR.TransaltsRelatedItems(:RowId);
CREATE SERVICE "TAR_TransaltsRequestsForacStatuses" TYPE 'SOAP' AS call "_TAR"."TransaltsForacStatuses"();
CREATE SERVICE "TAR_TransaltsRequestsReview" TYPE 'SOAP' AS call _TAR.TransaltsRequestsReview(:RowId);
CREATE SERVICE "TAR_TransaltsRequestsReviewer" TYPE 'SOAP' AS call _TAR.TransaltRequestReviewer(:SearchText,:OrderBy);
CREATE SERVICE "TAR_TransaltsRequestsReviewerDelete" TYPE 'SOAP' AS call _TAR.TransaltsRequestsReviewerDelete(:RowId);
CREATE SERVICE "TAR_TransaltsRequestsReviewerSave" TYPE 'SOAP' AS call _TAR.TransaltsRequestsReviewerSave(:RowId,:Reviewer);
CREATE SERVICE "TAR_TransaltsRequestsReviewSave" TYPE 'SOAP' AS call "_TAR"."TransaltsRequestsReviewSave"(:RowId,:ReviewStatus,:TransaltComment,:ApprovalDate);
CREATE SERVICE "TAR_TransaltsRequestsReviewStatuses" TYPE 'SOAP' AS call _TAR.TransaltsReviewStatuses();
CREATE SERVICE "TAR_TransaltSWFL" TYPE 'SOAP' AS call "_TAR"."TransaltSWFL"(:RowId,:SearchByFilter);
CREATE SERVICE "TAR_UsersVesselAccess" TYPE 'SOAP' AS call _TAR.UsersVesselAccess(:AccessList);
CREATE SERVICE "topTenCustomQueriesLoad" TYPE 'SOAP' AS call ECA.TopTenCustomQueriesLoad();
CREATE SERVICE "topTenCustomQuery" TYPE 'SOAP' AS call ECA.TopTenCustomQuery(:VesselId,:ScopeType,:ScopeId,:QueryId);
CREATE SERVICE "topTenMaintenance" TYPE 'SOAP' AS call ECA.TopTenMaintenance(:VesselId,:ScopeType,:ScopeId);
CREATE SERVICE "topTenRepairs" TYPE 'SOAP' AS call ECA.TopTenRepairs(:VesselId,:ScopeType,:ScopeId);
CREATE SERVICE "topTenTestResults" TYPE 'SOAP' AS call ECA.TopTenTestResults(:VesselId,:ScopeType,:ScopeId);
CREATE SERVICE "userAlertDelete" TYPE 'SOAP' AS call ECO.UserAlertDelete(:UserId,:UserAlertId);
CREATE SERVICE "userFavoriteDelete" TYPE 'SOAP' AS call ECA.UserFavoriteDelete(:UserId,:VesselId,:HSC);
CREATE SERVICE "userFavoriteInsert" TYPE 'SOAP' AS call ECA.UserFavoriteInsert(:UserId,:VesselId,:HSC);
CREATE SERVICE "userFavorites" TYPE 'SOAP' AS call ECA.UsersFavorites(:UserId);
CREATE SERVICE "userHistory" TYPE 'SOAP' AS call ECA.UserHistory(:UserId);
CREATE SERVICE "userHistoryClear" TYPE 'SOAP' AS call ECA.UserHistoryClear(:UserId);
CREATE SERVICE "userHistoryDelete" TYPE 'SOAP' AS call ECA.UserHistoryDelete(:UserId,:VesselId,:HSC);
CREATE SERVICE "userHistoryInsert" TYPE 'SOAP' AS call ECA.UserHistoryInsert(:UserId,:VesselId,:HSC);
CREATE SERVICE "userHistoryUpdate" TYPE 'SOAP' AS call ECA.UserHistoryUpdate(:UserId,:VesselId,:HSC);
CREATE SERVICE "userLogin" TYPE 'SOAP' AS call ECA.UserLogin(:ApplicationId,:UserLoginId,:UserPassword,:NotificationData);
CREATE SERVICE "userOnlyLogin" TYPE 'SOAP' AS call ECA.UserOnlyLoginTest(:ApplicationId,:UserLoginId,:NotificationData);
CREATE SERVICE "userPreferencesLoad" TYPE 'SOAP' AS call ECA.UserPreferencesLoad(:UserId,:ApplicationId);
CREATE SERVICE "userPreferenceUpdate" TYPE 'SOAP' AS call ECA.UserPreferenceUpdate(:UserId,:ApplicationId,:PreferenceId,:Preference);
CREATE SERVICE "vesselABSEquipmentInspection" TYPE 'SOAP' AS call ECA.VesselABSEquipmentInspection(:VesselId,:ABSEquipmentId);
CREATE SERVICE "vesselABSEquipmentInspectionHistory" TYPE 'SOAP' AS call ECA.VesselABSEquipmentInspectionHistory(:VesselId,:ABSEquipmentId,:Sort);
CREATE SERVICE "VesselEquipmentAttachment" TYPE 'SOAP' AS call ECA.VesselAttachment(:VesselId,:AttachmentId);
CREATE SERVICE "vesselEquipmentDetails" TYPE 'SOAP' AS call ECA.VesselEquipmentDetails(:VesselId,:HSC);
CREATE SERVICE "vesselEquipmentMachineryHistoryAttachments" TYPE 'SOAP' AS call ECA.VesselEquipmentMachineryHistoryAttachments(:VesselId,:HistoryId,:AttachmentId);
CREATE SERVICE "vesselEquipmentParameterDelete" TYPE 'SOAP' AS call ECA.VesselEquipmentParameterDelete(:VesselId,:HSC,:ProcessId,:ParameterId);
CREATE SERVICE "vesselEquipmentParameterInsert" TYPE 'SOAP' AS call ECA.VesselEquipmentParameterInsert(:VesselId,:ProcessId,:ParameterId,:HSC);
CREATE SERVICE "VesselEquipmentParametersDelete" TYPE 'SOAP' AS call ECA.VesselEquipmentParametersDelete(:VesselId,:HSC,:ProcessParameters);
CREATE SERVICE "VesselEquipmentParametersInsert" TYPE 'SOAP' AS call ECA.VesselEquipmentParametersInsert(:VesselId,:HSC,:ProcessParameters);
CREATE SERVICE "vesselEquipmentPlannedMaintenance" TYPE 'SOAP' AS call ECA.VesselEquipmentPlannedMaintenance(:VesselId,:HSC,:UserId,:LikeFilters,:EqualFilters,:Sort,:Filter);
CREATE SERVICE "vesselEquipmentPlannedMaintenanceHistory" TYPE 'SOAP' AS call ECA.VesselEquipmentPlannedMaintenanceHistory(:VesselId,:EquipmentId,:MaintenanceProcedureId,:Sort);
CREATE SERVICE "vesselEquipmentPlannedMaintenanceMaterials" TYPE 'SOAP' AS call ECA.VesselEquipmentPlannedMaintenanceMaterials(:VesselId,:EquipmentId,:MaintenanceProcedureId,:Sort);
CREATE SERVICE "vesselEquipmentPlannedMaintenanceNarrative" TYPE 'SOAP' AS call ECA.VesselEquipmentPlannedMaintenanceNarrative(:VesselId,:EquipmentId,:MaintenanceProcedureId);
CREATE SERVICE "vesselEquipmentPlannedMaintenanceNotes" TYPE 'SOAP' AS call ECA.VesselEquipmentPlannedMaintenanceNotes(:VesselId,:EquipmentId,:MaintenanceProcedureId);
CREATE SERVICE "vesselEquipmentPlannedMaintenanceOnSchedule" TYPE 'SOAP' AS select ECA.VesselEquipmentPlannedMaintenanceOnSchedule(:VesselId,:EquipmentId,:MaintenanceProcedureId) as OnSchedule;
CREATE SERVICE "vesselEquipmentPlannedMaintenancePrecautions" TYPE 'SOAP' AS call ECA.VesselEquipmentPlannedMaintenancePrecautions(:VesselId,:EquipmentId,:MaintenanceProcedureId,:Sort);
CREATE SERVICE "vesselEquipmentPlannedMaintenanceScheduleIntervals" TYPE 'SOAP' AS call ECA.VesselEquipmentPlannedMaintenanceScheduleIntervals(:VesselId,:EquipmentId,:MaintenanceProcedureId,:Sort);
CREATE SERVICE "vesselEquipmentPlannedMaintenanceTools" TYPE 'SOAP' AS call ECA.VesselEquipmentPlannedMaintenanceTools(:VesselId,:EquipmentId,:MaintenanceProcedureId,:Sort);
CREATE SERVICE "vesselEquipmentProcessDelete" TYPE 'SOAP' AS call ECA.VesselEquipmentProcessDelete(:VesselId,:HSC,:ProcessId);
CREATE SERVICE "vesselEquipmentRepair" TYPE 'SOAP' AS call ECA.VesselEquipmentRepair(:VesselId,:HSC,:Sort,:Filter,:MinTimestamp,:MaxTimestamp);
CREATE SERVICE "vesselEquipmentWorkbook" TYPE 'SOAP' AS call ECA.VesselEquipmentWorkbook(:VesselId,:HSC,:Sort,:Filter,:MinTimestamp,:MaxTimestamp);
CREATE SERVICE "vesselEquipmentWorkbookItemDetail" TYPE 'SOAP' AS call ECA.VesselEquipmentWorkbookItemDetail(:MaintenanceProcedureId);
CREATE SERVICE "vesselMachineryHistoryABSEquipment" TYPE 'SOAP' AS call ECA.VesselMachineryHistoryABSEquipment(:VesselId,:HistoryId,:Sort);
CREATE SERVICE "vesselMachineryHistoryABSEquipmentVesselEquipment" TYPE 'SOAP' AS call ECA.VesselMachineryHistoryABSEquipmentVesselEquipment(:VesselId,:HistoryId,:ABSEquipmentId,:Sort);
CREATE SERVICE "vesselMachineryHistoryEquipment" TYPE 'SOAP' AS call ECA.VesselMachineryHistoryEquipment(:VesselId,:HistoryId);
CREATE SERVICE "vesselMachineryHistoryMaintenanceDetails" TYPE 'SOAP' AS call ECA.VesselMachineryHistoryMaintenanceDetails(:VesselId,:HistoryId,:EquipmentId,:MaintenanceProcedureId);
CREATE SERVICE "vesselMachineryHistoryMaintenanceEquipmentProcedures" TYPE 'SOAP' AS call ECA.VesselMachineryHistoryMaintenanceEquipmentProcedures(:VesselId,:HistoryId,:EquipmentId);
CREATE SERVICE "vessels" TYPE 'SOAP' AS call ECA.VesselsSelect(:VesselId);
CREATE SERVICE "vesselsClassesByHSC" TYPE 'SOAP' AS call ECA.VesselsClassesByHSC(:HSC);
CREATE SERVICE "vesselsEquipment" TYPE 'SOAP' AS call ECA.VesselsEquipmentByHSC(:VesselId,:hscMatch,:hsc);
CREATE SERVICE "vesselWorkListItemNarrative" TYPE 'SOAP' AS select ECA.VesselEquipmentRepairNarrative(:VesselId,:WorkRequestId,:NarrativeType) as Narrative;
CREATE SERVICE "vibrationFaults" TYPE 'SOAP' AS call ECA.VibrationFaults(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "vibrationFaultTrends" TYPE 'SOAP' AS call ECA.VibrationFaultTrends(:VesselId,:EquipmentId);
CREATE SERVICE "vibrationImage" TYPE 'SOAP' AS call ECA.VibrationImage(:VesselId,:EquipmentId,:TestResultId,:ImageType);
CREATE SERVICE "vibrationManualComments" TYPE 'SOAP' AS call ECA.VibrationManualComments(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "vibrationParametersMeasPoints" TYPE 'SOAP' AS call ECA.VibrationParametersMeasPoints(:VesselId,:EquipmentId,:TestId);
CREATE SERVICE "vibrationSystemComments" TYPE 'SOAP' AS call ECA.VibrationSystemComments(:VesselId,:EquipmentId,:TestResultId);
CREATE SERVICE "vibrationTestDates" TYPE 'SOAP' AS call ECA.VibrationTestDates(:VesselId,:EquipmentId,:MeasurementPointId);
CREATE SERVICE "vibrationTestResultAverages" TYPE 'SOAP' AS call ECA.VibrationTestResultAverages(:VesselId,:EquipmentId,:VibMeasurementRangeId,:MeasurementPointId,:TestResultId,:AxisId);
CREATE SERVICE "vibrationTestResults" TYPE 'SOAP' AS call ECA.VibrationTestResults(:VesselId,:EquipmentId,:VibMeasurementRangeId,:MeasurementPointId,:TestResultId,:AxisId);
CREATE SERVICE "VT_DocumentsItems" TYPE 'SOAP' AS call _VTL.DocumentsItems(:NodeId,:OrderBy,:UsePaging,:RowsPerPage,:PageToDisplay,:SiteSupportsEncode);
CREATE SERVICE "VTL_Applicationid" TYPE 'SOAP' AS select _VTL.ApplicationId();
CREATE SERVICE "VTL_AttachmentDownload" TYPE 'RAW' AS select _VTL.AttachmentDownload(:AttachmentId);
CREATE SERVICE "VTL_ContactUs" TYPE 'SOAP' AS call _VTL.ContactUs(:ContactUsId);
CREATE SERVICE "VTL_DetailsGrid" TYPE 'SOAP' AS call _VTL.DetailsGrid(:RowId);
CREATE SERVICE "VTL_DocumentColne" TYPE 'SOAP' AS call _VTL.DocumentColne(:DocumentId,:OriginalRowId);
CREATE SERVICE "VTL_DocumentGetFilePath" TYPE 'SOAP' AS call _VTL.DocumentGetFilePath(:DocumentTypeId);
CREATE SERVICE "VTL_DocumentsAssiciatedVessels" TYPE 'SOAP' AS call _VTL.DocumentsAssiciatedVessels(:NodeId,:NodeType,:RowId,:SearchQuery,:IsSelected);
CREATE SERVICE "VTL_DocumentsAssociatedVessels" TYPE 'SOAP' AS call _VTL.DocumentsAssociatedVessels(:NodeId,:NodeType,:RowId,:SearchQuery,:IsSelected);
CREATE SERVICE "VTL_DocumentsCategories" TYPE 'SOAP' AS call _VTL.DocumentsCategories(:RowId);
CREATE SERVICE "VTL_DocumentsCategoryDelete" TYPE 'SOAP' AS call _VTL.DocumentsCategoryDelete(:RowId,:DocumentCategoryId);
CREATE SERVICE "VTL_DocumentsCategoryInsert" TYPE 'SOAP' AS call _VTL.DocumentsCategoryInsert(:RowId,:DocumentCategoryId);
CREATE SERVICE "VTL_DocumentsDelete" TYPE 'SOAP' AS call _VTL.DocumentsDelete(:RowId);
CREATE SERVICE "VTL_DocumentsDownloadItem" TYPE 'SOAP' AS call _VTL.DocumentsDownloadItem(:RowId);
CREATE SERVICE "VTL_DocumentsDownloadItemAdd" TYPE 'SOAP' AS call _VTL.DocumentsDownloadItemAdd(:RowId);
CREATE SERVICE "VTL_DocumentsDownloadItemRemove" TYPE 'SOAP' AS call _VTL.DocumentsDownloadItemRemove(:RowId);
CREATE SERVICE "VTL_DocumentsDownLoadList" TYPE 'SOAP' AS call _VTL.DocumentsDownLoadList();
CREATE SERVICE "VTL_DocumentsDownLoadListCount" TYPE 'SOAP' AS select _VTL.DocumentsDownLoadListCount();
CREATE SERVICE "VTL_DocumentsDownloadListReset" TYPE 'SOAP' AS call _VTL.DocumentsDownloadListReset();
CREATE SERVICE "VTL_DocumentsDownLoadWarning" TYPE 'SOAP' AS call _VTL.DocumentsDownLoadWarning();
CREATE SERVICE "VTL_DocumentsEquipmentClassifications" TYPE 'SOAP' AS call _VTL.DocumentsEquipmentClassifications(:EquipmentClassificationDescription);
CREATE SERVICE "VTL_DocumentsGetItems" TYPE 'SOAP' AS call _VTL.DocumentsGetItems(:DocumentIds);
CREATE SERVICE "VTL_DocumentsGetVesselsLocation" TYPE 'SOAP' AS call _VTL.DocumentsGetVesselsLocation(:RowId);
CREATE SERVICE "VTL_DocumentsGroups" TYPE 'SOAP' AS call _VTL.DocumentsGroups(:GroupNumber);
CREATE SERVICE "VTL_DocumentsITARs" TYPE 'SOAP' AS call _VTL.DocumentsITARs();
CREATE SERVICE "VTL_DocumentsItems" TYPE 'SOAP' AS call _VTL.DocumentsItems(:NodeId,:OrderBy,:UsePaging,:RowsPerPage,:PageToDisplay,:SiteSupportsEncode);
CREATE SERVICE "VTL_DocumentsItemsExport" TYPE 'SOAP' AS call _VTL.DocumentsItemsExport(:NodeId,:OrderBy,:UsePaging,:RowsPerPage,:PageToDisplay);
CREATE SERVICE "VTL_DocumentsLocations" TYPE 'SOAP' AS call _VTL.DocumentsLocations(:PhysicalLocation);
CREATE SERVICE "VTL_DocumentsManufacturerAdd" TYPE 'SOAP' AS call _VTL.DocumentsManufacturerAdd(:ManufacturerName);
CREATE SERVICE "VTL_DocumentsManufacturers" TYPE 'SOAP' AS call _VTL.DocumentsManufacturers(:ManufacturerName);
CREATE SERVICE "VTL_DocumentsQuickEditSave" TYPE 'SOAP' AS call _VTL.DocumentsQuickEditSave(
:RowId,
:DocumentTypeID,
:DocumentNumber,
:DocumentAltNumber,
:GroupNumber,
:NSN,
:Revision,
:Change,
:DocumentTitle,
:RevisionDate,
:ITAR,
:Remarks,
:ElectronicCopyExists,
:HardCopyExists,
:PhysicalLocation,
:ManufacturerId,
:ModelNumberModel,
:TransAltAssociated,
:DocumentCategories,
:VesselsAssociated,
:VesselsEquipmentAssociated,
:EquipmentClassificationId,
:RelatedDocuments,
:RsnElecCopyUnavailId,
:TMMA,
:SRD,
:Salvage,
:Design,
:PhysicalLocationId,
:DocumentRecordTypeId,
:SSIC);
CREATE SERVICE "VTL_DocumentsRecordTypesList" TYPE 'SOAP' AS call _VTL.DocumentsRecordTypesList();
CREATE SERVICE "VTL_DocumentsRecover" TYPE 'SOAP' AS call _VTL.DocumentsRecover(:RowId);
CREATE SERVICE "VTL_DocumentsRelatedItems" TYPE 'SOAP' AS call _VTL.DocumentsRelatedItems(:RowId);
CREATE SERVICE "VTL_DocumentsRelationshipDelete" TYPE 'SOAP' AS call _VTL.DocumentsRelationshipDelete(:RowId,:ChildDocumentId);
CREATE SERVICE "VTL_DocumentsRelationshipInsert" TYPE 'SOAP' AS call _VTL.DocumentsRelationshipInsert(:RowId,:ChildRowId,:DocumentRelationShipTypeId,:DocumentRemarks);
CREATE SERVICE "VTL_DocumentsRelationshipTypes" TYPE 'SOAP' AS call _VTL.VTLDocumentsRelationshipTypes();
CREATE SERVICE "VTL_DocumentsTransaltInsert" TYPE 'SOAP' AS call _VTL.DocumentsTransaltInsert(:RowId,:TransaltId,:TransAltNumber);
CREATE SERVICE "VTL_DocumentsTypes" TYPE 'SOAP' AS call _VTL.Documentstypes();
CREATE SERVICE "VTL_DocumentsTypesInsert" TYPE 'SOAP' AS call _VTL.DocumentsTypesInsert(:DocumentType);
CREATE SERVICE "VTL_DocumentSubmitAttachment" TYPE 'SOAP' AS call _VTL.DocumentSubmitAttachment(:AttachmentId,:OrderBy);
CREATE SERVICE "VTL_DocumentSubmitGrid" TYPE 'SOAP' AS call _VTL.DocumentSubmitGrid(:DocumentSubmitStatus,:DocumentSubmitId,:RequestingUserId);
CREATE SERVICE "VTL_DocumentSubmitInsert" TYPE 'SOAP' AS call _VTL.DocumentSubmitInsert(:DocumentTypeId,:Comments,:DocumentNumber,:VesselIds,:Vessels,:RequestDrawingNumberId,:RequestDrawingNumberDetailId,:RequestTechManualNumberId,:AttachmentName,:AttachmentData);
CREATE SERVICE "VTL_DocumentSubmitUpdate" TYPE 'SOAP' AS call _VTL.DocumentSubmitUpdate(:DocumentSubmitId,:DocumentSubmitStatus);
CREATE SERVICE "VTL_DocumentsVesselInsert" TYPE 'SOAP' AS call _VTL.DocumentsVesselInsert(:RowId,:VesselId);
CREATE SERVICE "VTL_DocumentsVesselNames" TYPE 'SOAP' AS select _VTL.DocumentsVesselNames(:VesselIds) as VesselNames;
CREATE SERVICE "VTL_DocumentsVessels" TYPE 'SOAP' AS call _VTL.DocumentsVessels(:RowId);
CREATE SERVICE "VTL_DocumentsVesselsDelete" TYPE 'SOAP' AS call _VTL.DocumentsVesselsDelete(:RowId,:NodeId);
CREATE SERVICE "VTL_DocumentsVesselsEquipment" TYPE 'SOAP' AS call _VTL.DocumentsVesselsEquipment(:RowId);
CREATE SERVICE "VTL_DocumentsVesselsEquipmentDelete" TYPE 'SOAP' AS call _VTL.DocumentsVesselsEquipmentDelete(:RowId);
CREATE SERVICE "VTL_DocumentsVesselsEquipmentInsert" TYPE 'SOAP' AS call _VTL.DocumentsVesselsEquipmentInsert(:RowId,:VesselId,:EquipmentId);
CREATE SERVICE "VTL_DocumentsVesselsInsert" TYPE 'SOAP' AS call _VTL.DocumentsVesselsInsert(:RowId,:NodeId,:VesselId);
CREATE SERVICE "VTL_DocumentsVesselsLocationDelete" TYPE 'SOAP' AS call _VTL.DocumentsVesselsLocationDelete(:RowId,:VTLVesselId);
CREATE SERVICE "VTL_Equipments" TYPE 'SOAP' AS call _VTL.Equipments(:NodeId,:SearchQuery,:VesselId);
CREATE SERVICE "VTL_FilterAddHistoryDocumentId" TYPE 'SOAP' AS call _VTL.FilterAddHistoryDocumentId(:DocumentsId);
CREATE SERVICE "VTL_FilterAdvancedAttributes" TYPE 'SOAP' AS call _VTL.FilterAdvancedAttributes();
CREATE SERVICE "VTL_FilterAdvancedLoad" TYPE 'SOAP' AS call _VTL.FilterAdvancedLoad();
CREATE SERVICE "VTL_FilterAdvancedSave" TYPE 'SOAP' AS call _VTL.FilterAdvancedSave(:Module,:AndOr,:JSONValues);
CREATE SERVICE "VTL_FilterAdvancedToBasicMapping" TYPE 'SOAP' AS call _VTL.FilterAdvancedToBasicMapping();
CREATE SERVICE "VTL_FilterListDates" TYPE 'SOAP' AS call _VTL.FilterListDateLoad(:GetDefault);
CREATE SERVICE "VTL_FilterListShowOnly" TYPE 'SOAP' AS call _VTL.FilterListDocumentsShowOnlyLoad(:GetDefault);
CREATE SERVICE "VTL_FilterListText" TYPE 'SOAP' AS call _VTL.FilterListText();
CREATE SERVICE "VTL_FilterListTypes" TYPE 'SOAP' AS call _VTL.FilterListDocumentTypeLoad(:GetDefault);
CREATE SERVICE "VTL_FilterListVesselsLoad" TYPE 'SOAP' AS call _VTL.FilterListVesselsLoad();
CREATE SERVICE "VTL_GetDocumentDeliverOptions" TYPE 'SOAP' AS call _VTL.GetDocumentDeliverOptions();
CREATE SERVICE "VTL_GetDocumentRequestFormats" TYPE 'SOAP' AS call _VTL.GetDocumentRequestFormats();
CREATE SERVICE "VTL_GetDocumentsRelatedItems" TYPE 'SOAP' AS call _VTL.GetDocumentsRelatedItems(:VesselClass,:OrderBy,:UsePaging,:RowsPerPage,:PageToDisplay,:AllTextSearchString);
CREATE SERVICE "VTL_GetDocumentsSavedList" TYPE 'SOAP' AS call _VTL.GetDocumentsSavedList(:UserId);
CREATE SERVICE "VTL_GetShipApplicability" TYPE 'SOAP' AS call _VTL.GetShipApplicability();
CREATE SERVICE "VTL_ManufacturerInsert" TYPE 'SOAP' AS call _VTL.ManufacturerInsert(:ManufacturerName);
CREATE SERVICE "VTL_Navigation" TYPE 'SOAP' AS call _VTL.Navigation(:NodeType,:NodeId);
CREATE SERVICE "VTL_NodeTypeSelect" TYPE 'SOAP' AS call _VTL.NodeTypeSelect();
CREATE SERVICE "VTL_PhysicalStorageInsert" TYPE 'SOAP' AS call _VTL.PhysicalStorageInsert(:LocationDescription);
CREATE SERVICE "VTL_QuickEditEquipmentLoad" TYPE 'SOAP' AS call _VTL.QuickEditEquipmentLoad(:NodeType,:NodeId,:VesselIds);
CREATE SERVICE "VTL_QuickEditVesselsLoad" TYPE 'SOAP' AS call _VTL.QuickEditVesselsLoad(:NodeType,:NodeId);
CREATE SERVICE "VTL_RequestAssignedToUsers" TYPE 'SOAP' AS call _VTL.RequestAssignedToUsers();
CREATE SERVICE "VTL_RequestDocumentAttachmentUpdateStatus" TYPE 'SOAP' AS call _VTL.RequestDocumentAttachmentUpdateStatus(:AttachmentId,:RequestDocumentsId,:RecordActive);
CREATE SERVICE "VTL_RequestDocumentsAttachments" TYPE 'SOAP' AS call _VTL.RequestDocumentsAttachments(:RequestDocumentsId,:OrderBy);
CREATE SERVICE "VTL_RequestDocumentsAttachmentsInsertUpdate" TYPE 'SOAP' AS call _VTL.RequestDocumentsAttachmentsInsertUpdate(
:RequestDocumentsId,:AttachmentName,:AttachmentData);
CREATE SERVICE "VTL_RequestDocumentsEmailComment" TYPE 'SOAP' AS call _VTL.RequestDocumentsEmailComment(:RequestDocumentId,:EmailAddresses,:EmailText,:RequestDomain);
CREATE SERVICE "VTL_RequestDocumentsGrid" TYPE 'SOAP' AS call _VTL.RequestDocumentsGrid(
:RequestDocumentsStatus,
:AssignedToUserId,
:RequestDocumentsId,
:RequestedByUserId);
CREATE SERVICE "VTL_RequestDocumentsInsertUpdate" TYPE 'SOAP' AS call _VTL.RequestDocumentsInsertUpdate(
:RequestDocumentsId,
:RequestUserEmail,
:RequestUserPhone,
:RequestTitle,
:DocumentFormatId,
:DeliverOptionId,
:Vessels,
:Comments,
:AsignedToUserId,
:RequestDocumentsStatus,
:SavedList,
:DocumentTypeId,
:DocumentNumber,
:RequestDomain);
CREATE SERVICE "VTL_RequestDocumentsStatuses" TYPE 'SOAP' AS call _VTL.RequestDocumentsStatuses();
CREATE SERVICE "VTL_RequestDocumentsWarning" TYPE 'SOAP' AS call _VTL.RequestDocumentsWarning();
CREATE SERVICE "VTL_RequestDrawingNumberDetailDelete" TYPE 'SOAP' AS call _VTL.RequestDrawingNumberDetailDelete(
:RequestDrawingNumberDetailId,
:DrawingNumber,
:DocumentId);
CREATE SERVICE "VTL_RequestDrawingNumberDetailGrid" TYPE 'SOAP' AS call _VTL.RequestDrawingNumberDetailGrid(
:RequestDrawingNumberId);
CREATE SERVICE "VTL_RequestDrawingNumberDetailInsertUpdate" TYPE 'SOAP' AS call _VTL.RequestDrawingNumberDetailInsertUpdate(
:RequestDrawingNumberDetailId,
:RequestDrawingNumberId,
:RequestDrawingNumberDetailTitle,
:GroupNumber,
:TALTAssociated,
:SRDDrawing,
:AsBuilt,
:Functional,
:NDDrawing,
:Change,
:Revision,
:DrawingNumber,
:DocumentId,
:VTLVesselIds);
CREATE SERVICE "VTL_RequestDrawingNumberEmailComment" TYPE 'SOAP' AS call _VTL.RequestDrawingNumberEmailComment(:RequestDrawingNumberId,:EmailAddresses,:EmailText,:RequestDomain);
CREATE SERVICE "VTL_RequestDrawingNumberEmailGrid" TYPE 'SOAP' AS call _VTL.RequestDrawingNumberEmailGrid();
CREATE SERVICE "VTL_RequestDrawingNumberGetEmailBody" TYPE 'SOAP' AS call _VTL.RequestDrawingNumberGetEmailBody(:RequestedById,:RequestedByFullName);
CREATE SERVICE "VTL_RequestDrawingNumberGrid" TYPE 'SOAP' AS call _VTL.RequestDrawingNumberGrid(
:RequestDrawingNumberStatusId,
:RequestDrawingNumberId,
:RequestingUserId);
CREATE SERVICE "VTL_RequestDrawingNumberInsertUpdate" TYPE 'SOAP' AS call _VTL.RequestDrawingNumberInsertUpdate(
:RequestDrawingNumberId,
:RequestedById,
:RequestedByFullName,
:RequestedByEmail,
:RequestedByPhone,
:RequestDrawingNumberStatusId,
:RequestDomain,
:LibrarianComments);
CREATE SERVICE "VTL_RequestDrawingNumberSendEmailBody" TYPE 'SOAP' AS call _VTL.RequestDrawingNumberSendEmailBody(:RequestedById,:RequestedByFullName,:RequestedByEmail,:EmailBody);
CREATE SERVICE "VTL_RequestDrawingNumberStatus" TYPE 'SOAP' AS call _VTL.RequestDrawingNumberStatus();
CREATE SERVICE "VTL_RequestDrawingNumberWarn" TYPE 'SOAP' AS call _VTL.RequestDrawingNumberWarn();
CREATE SERVICE "VTL_RequestsSendEmail" TYPE 'SOAP' AS call _VTL.RequestsSendEmail(:RequestType,:EmailAddresses,:EmailFrom,:ID,:RequestDomain,:DocumentInfo);
CREATE SERVICE "VTL_RequestTechManualNumberEmailComment" TYPE 'SOAP' AS call _VTL.RequestTechManualNumberEmailComment(:RequestTechManualNumberId,:EmailAddresses,:EmailText,:RequestDomain);
CREATE SERVICE "VTL_RequestTechManualNumberEmailGrid" TYPE 'SOAP' AS call _VTL.RequestTechManualNumberEmailGrid();
CREATE SERVICE "VTL_RequestTechManualNumberGetEmailBody" TYPE 'SOAP' AS call _VTL.RequestTechManualNumberGetEmailBody(:RequestedById,:RequestedByFullName);
CREATE SERVICE "VTL_RequestTechManualNumberGrid" TYPE 'SOAP' AS call _VTL.RequestTechManualNumberGrid(
:RequestTechManualNumberStatusId,
:RequestTechManualNumberId,
:RequestingUserId);
CREATE SERVICE "VTL_RequestTechManualNumberInsertUpdate" TYPE 'SOAP' AS call _VTL.RequestTechManualNumberInsertUpdate(
:RequestTechManualNumberId,
:RequestedById,
:RequestedByFullName,
:RequestedByEmail,
:RequestedByPhone,
:ExistingManual,
:ExistingManualNum,
:ContractTMSRNum,
:CompanyCreatingManual,
:UIC,
:ShipApplicabilityId,
:TechManualChange,
:RequestTypeInHouse,
:NewTechManualTitle,
:ManufacturerId,
:FMSPublication_Req,
:EquipmentModel,
:SerialNumber,
:DataRightsLimited,
:DistributionLevel,
:ESTDistributionDate,
:PartOfVolumnSet,
:PartOfvolumnSetNum,
:PublicationGroup,
:ApplicabilityGroup,
:APL_AEL,
:SecurityClassification,
:PublicationDistributionSatement,
:NIINNumber,
:Change,
:Revision,
:RequestTechManualNumberStatusId,
:RequestDomain);
CREATE SERVICE "VTL_RequestTechManualNumberItem" TYPE 'SOAP' AS call _VTL.RequestTechManualNumberItem(
:RequestTechManualNumberId);
CREATE SERVICE "VTL_RequestTechManualNumberSendEmailBody" TYPE 'SOAP' AS call _VTL.RequestTechManualNumberSendEmailBody(:RequestedById,:RequestedByFullName,:RequestedByEmail,:EmailBody);
CREATE SERVICE "VTL_RequestTechManualNumberStatus" TYPE 'SOAP' AS call _VTL.RequestTechManualNumberStatus();
CREATE SERVICE "VTL_RequestTechManualVessels" TYPE 'SOAP' AS call _VTL.RequestTechManualVessels(
:RowId,:NodeId);
CREATE SERVICE "VTL_RsnElecCopyUnavail" TYPE 'SOAP' AS call _VTL.RsnElecCopyUnavail();
CREATE SERVICE "VTL_SearchTransaltRequestItems" TYPE 'SOAP' AS call _VTL.SearchTransaltRequestItems(:SearchText,:VesselClass);
CREATE SERVICE "VTL_TechManaulReqWarn" TYPE 'SOAP' AS call _VTL.TechManaulReqWarn();
CREATE SERVICE "VTL_TechManualVesselsDelete" TYPE 'SOAP' AS call _VTL.TechManualVesselsDelete(
:RowId,
:VesselId);
CREATE SERVICE "VTL_TechManualVesselsInsert" TYPE 'SOAP' AS call _VTL.TechManualVesselsInsert(
:RowId,
:VesselId);
CREATE SERVICE "VTL_TechMenuRequestVessels" TYPE 'SOAP' AS call _VTL.TechMenuRequestVessels(:RowId);
CREATE SERVICE "VTL_UserRoleCanEdit" TYPE 'SOAP' AS call _VTL.UserRoleCanEdit();
CREATE SERVICE "VTL_UsersVesselAccess" TYPE 'SOAP' AS call _VTL.UsersVesselAccess(:AccessList);
CREATE SERVICE "VTL_VesselsClasses" TYPE 'SOAP' AS call _VTL.VesselsClasses();
CREATE SERVICE "VTL_VTLDocumentsInsertUpdate" TYPE 'SOAP' AS call _VTL.VTLDocumentsInsertUpdate(
:DocumentId,
:DocumentTypeId,
:DocumentFileName,
:DocumentTitle,
:ElectronicCopyExists,
:HardCopyExists,
:ITAR,
:CreateTimeStamp,
:CreatedByID,
:LastModifiedTimeStamp,
:LastModifiedByID,
:Revision,
:RevisionDate,
:FileSize,
:DocumentIsCancelled,
:LatestRevision);
CREATE SERVICE "VTL_VTLDocumentsSavedListInsertUpdate" TYPE 'SOAP' AS call _VTL.VTLDocumentsSavedListInsertUpdate(:SavedList);
CREATE SERVICE "VTL_VTLEmailSavedList" TYPE 'SOAP' AS call _VTL.VTLEmailSavedList(:SavedList,:EmailAddresses,:EmailText,:RequestDomain);
CREATE SERVICE "VTL_VTLGetEquipments" TYPE 'SOAP' AS call _VTL.VTLGetEquipments(:NodeId,:VesselId);
CREATE SERVICE "VTL_VTLgetUserInfo" TYPE 'SOAP' AS call _VTL.VTLgetUserInfo();
CREATE SERVICE "VTL_VTLSAMMVessels" TYPE 'SOAP' AS call _VTL.VTLSAMMVessels(:VesselName);
CREATE SERVICE "VTL_VTLSearchUsers" TYPE 'SOAP' AS call _VTL.VTLSearchUsers(:PartOfNameorEmail);
CREATE SERVICE "VTL_VTLVesselInsert" TYPE 'SOAP' AS call _VTL.VTLVesselInsert(:VTLVesselName,:VTLVesselHullNumber,:VTLVesselUIC,:VTLVesselClassId);
CREATE SERVICE "VTL_VTLVesselInsertUpdate" TYPE 'SOAP' AS call _VTL.VTLVesselInsertUpdate(
:VTLVesselId,
:VTLVesselName,
:VTLVesselHullNumber,
:VTLVesselUIC,
:VTLVesselClassId,
:ProgramManagerCode,
:PreviousName,
:PreviousHullNumber,
:SAMMVessel);
CREATE SERVICE "VTL_VTLVessels" TYPE 'SOAP' AS call _VTL.VTLVessels(:VesselName,:VesselClassId);
CREATE SERVICE "VTL_VTLVesselsClassesInsert" TYPE 'SOAP' AS call _VTL.VTLVesselsClassesInsert(:VTLVesselClassCode,:VTLVesselClassDescription);
CREATE SERVICE "VTL_VTLVesselsLocationInsertUpdate" TYPE 'SOAP' AS call _VTL.VTLVesselsLocationInsertUpdate(:RowId,:VTLVesselId,:Location,:Quantity);
CREATE SERVICE "workListItemsAdditionalNarrativeTypes" TYPE 'SOAP' AS call ECA.WorkListItemsAdditionalNarrativeTypes();
